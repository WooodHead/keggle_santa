<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>branch_allfullstrong.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__allfullstrong_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPselectVarPseudoStrongBranching</name>
      <anchorfile>branch__allfullstrong_8h.shtml</anchorfile>
      <anchor>ab01562fb23b2f5f279040c6ecd15950b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **pseudocands, SCIP_Bool *skipdown, SCIP_Bool *skipup, int npseudocands, int npriopseudocands, SCIP_Bool allowaddcons, int *bestpseudocand, SCIP_Real *bestdown, SCIP_Real *bestup, SCIP_Real *bestscore, SCIP_Bool *bestdownvalid, SCIP_Bool *bestupvalid, SCIP_Real *provedbound, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8h.shtml</anchorfile>
      <anchor>a7128e362bb5314686768a4fe2825f14b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_cloud.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__cloud_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleCloud</name>
      <anchorfile>branch__cloud_8h.shtml</anchorfile>
      <anchor>a99ac22e40b9a79d3aa6e0d1a6ebddf58</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_distribution.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__distribution_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleDistribution</name>
      <anchorfile>branch__distribution_8h.shtml</anchorfile>
      <anchor>a438d0045acbd1eeeb12e2994ed50c3d3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarCalcDistributionParameters</name>
      <anchorfile>branch__distribution_8h.shtml</anchorfile>
      <anchor>ab9ca517039c5eb5a48b4f0f1586836eb</anchor>
      <arglist>(SCIP *scip, SCIP_Real varlb, SCIP_Real varub, SCIP_VARTYPE vartype, SCIP_Real *mean, SCIP_Real *variance)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcCumulativeDistribution</name>
      <anchorfile>branch__distribution_8h.shtml</anchorfile>
      <anchor>afa014be4e277979fdcfc56b0835ad28f</anchor>
      <arglist>(SCIP *scip, SCIP_Real mean, SCIP_Real variance, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwCalcProbability</name>
      <anchorfile>branch__distribution_8h.shtml</anchorfile>
      <anchor>a29451e9e8620130d3a2abdd4a66b5ff2</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mu, SCIP_Real sigma2, int rowinfinitiesdown, int rowinfinitiesup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateDistributionScore</name>
      <anchorfile>branch__distribution_8h.shtml</anchorfile>
      <anchor>a267567e8477fc63519487099756a4e88</anchor>
      <arglist>(SCIP *scip, SCIP_Real currentprob, SCIP_Real newprobup, SCIP_Real newprobdown, SCIP_Real *upscore, SCIP_Real *downscore, char scoreparam)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_fullstrong.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__fullstrong_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleFullstrong</name>
      <anchorfile>branch__fullstrong_8h.shtml</anchorfile>
      <anchor>a417ba28ae597673c783320b4bb986dd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPselectVarStrongBranching</name>
      <anchorfile>branch__fullstrong_8h.shtml</anchorfile>
      <anchor>a561abf0e777c227cb691406b4c0ca686</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **lpcands, SCIP_Real *lpcandssol, SCIP_Real *lpcandsfrac, SCIP_Bool *skipdown, SCIP_Bool *skipup, int nlpcands, int npriolpcands, int ncomplete, int *start, SCIP_Bool allowaddcons, int maxproprounds, SCIP_Bool probingbounds, SCIP_Bool forcestrongbranch, int *bestcand, SCIP_Real *bestdown, SCIP_Real *bestup, SCIP_Real *bestscore, SCIP_Bool *bestdownvalid, SCIP_Bool *bestupvalid, SCIP_Real *provedbound, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_inference.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__inference_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleInference</name>
      <anchorfile>branch__inference_8h.shtml</anchorfile>
      <anchor>a06978c7113c6616a8de52bed33aa1713</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_leastinf.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__leastinf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleLeastinf</name>
      <anchorfile>branch__leastinf_8h.shtml</anchorfile>
      <anchor>a331f85bb0f470a6de40413d65ee837b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_mostinf.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__mostinf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleMostinf</name>
      <anchorfile>branch__mostinf_8h.shtml</anchorfile>
      <anchor>a6c9ce96038b146ba527d4f8eb6b135ce</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_multaggr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__multaggr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleMultAggr</name>
      <anchorfile>branch__multaggr_8h.shtml</anchorfile>
      <anchor>ad879e599561b524d516f28c8d324f224</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_nodereopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__nodereopt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__branch_8h" name="type_branch.h" local="yes" imported="no">scip/type_branch.h</includes>
    <includes id="type__reopt_8h" name="type_reopt.h" local="yes" imported="no">scip/type_reopt.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleNodereopt</name>
      <anchorfile>branch__nodereopt_8h.shtml</anchorfile>
      <anchor>a2b507d634b5fad73d46424cc25c18df4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_pscost.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__pscost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrulePscost</name>
      <anchorfile>branch__pscost_8h.shtml</anchorfile>
      <anchor>ad7983f45a82b6168dd2c2a3607dcfd0e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPselectBranchVarPscost</name>
      <anchorfile>branch__pscost_8h.shtml</anchorfile>
      <anchor>ab4d3e6604af9e05bd20d134e794e45c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsscore, int nbranchcands, SCIP_VAR **var, SCIP_Real *brpoint)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_random.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__random_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRandom</name>
      <anchorfile>branch__random_8h.shtml</anchorfile>
      <anchor>a1b3e2c6336f5014de06950868118553e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_relpscost.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>branch__relpscost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRelpscost</name>
      <anchorfile>branch__relpscost_8h.shtml</anchorfile>
      <anchor>a7288452ece13b07de8a3bb34aa3abed0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecRelpscostBranching</name>
      <anchorfile>branch__relpscost_8h.shtml</anchorfile>
      <anchor>a295007b4ffe2b2cc079fe9879cba0471</anchor>
      <arglist>(SCIP *scip, SCIP_Bool allowaddcons, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsfrac, int nbranchcands, SCIP_Bool executebranching, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compr_largestrepr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>compr__largestrepr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__reopt_8h" name="type_reopt.h" local="yes" imported="no">scip/type_reopt.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeComprLargestrepr</name>
      <anchorfile>compr__largestrepr_8h.shtml</anchorfile>
      <anchor>ab742661a6a28b00b05fb0fefc5c41aec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>compr_weakcompr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>compr__weakcompr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__reopt_8h" name="type_reopt.h" local="yes" imported="no">scip/type_reopt.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeComprWeakcompr</name>
      <anchorfile>compr__weakcompr_8h.shtml</anchorfile>
      <anchor>ad1bd217737e55cabb4a2f5c8e6506ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_abspower.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__abspower_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a1c84b2974782b778d6de42f6dfee3a7f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a73cc042e726cd76dc5c15c646da788ed</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *x, SCIP_VAR *z, SCIP_Real exponent, SCIP_Real xoffset, SCIP_Real zcoef, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a2f65ba8a3dc9ec70ddc28469da1aa1a6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *x, SCIP_VAR *z, SCIP_Real exponent, SCIP_Real xoffset, SCIP_Real zcoef, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a89451d0289b0ed15a218a1bbba7ed1d2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetNonlinearVarAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a0f432e44697e024abc887e1edcc762e6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetLinearVarAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>adccaae55dbc23eed61d70294c27fa4d5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetExponentAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a22b2fe0d9f9391923fc2fcc56b763295</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOffsetAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>ab224356bffe752ce2eee3d3fa1e29438</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCoefLinearAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>ac4d226cdbe03887b5e3bc6e2df13cc0b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a0b15d701af762ce77200355c871e1623</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>ada155f06e642df24608bc3fd0b8f2403</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetViolationAbspower</name>
      <anchorfile>cons__abspower_8h.shtml</anchorfile>
      <anchor>a72f5113402ea2c9ffbefbfbe4865a419</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_and.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__and_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a4ae52810712c7956c8ecc678516fcddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a3a4cfa9913e7e94f4b849041bd6085f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>acd03b22a15ef540569492f8a5f2e1d10</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a57243ef6122f5e8975ee1cc9e89a1f74</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a414bf098b59bfd8d5a261f2629c8cd87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantAnd</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a93e63a628fe8e0b34f1c3d3411f8606b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisAndConsSorted</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a8c0d49bda68ed275fcef30fa202be9e5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsortAndCons</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a89dba7a762d4ab2c5f2aef4a3bcb2ee7</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgAndConsCheckFlagWhenUpgr</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a41b4a2429b34ba36a45faa25ce383f4b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool flag)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgAndConsRemovableFlagWhenUpgr</name>
      <anchorfile>cons__and_8h.shtml</anchorfile>
      <anchor>a63303a7b65670d8d07373ad91bdf0063</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool flag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_bivariate.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__bivariate_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_BIVAR_CONVEXITY</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BIVAR_ALLCONVEX</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a3e0016170cd6274974ff022471b87dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BIVAR_1CONVEX_INDEFINITE</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1aef8590c2e9d84bd9383318a5bc4f8593</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BIVAR_CONVEX_CONCAVE</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a1a9df641bd24c0ce0516aafaca43defb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BIVAR_UNKNOWN</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a04f2755f3a9cfc0407af80e526d3e432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BIVAR_ALLCONVEX</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a3e0016170cd6274974ff022471b87dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BIVAR_1CONVEX_INDEFINITE</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1aef8590c2e9d84bd9383318a5bc4f8593</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BIVAR_CONVEX_CONCAVE</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a1a9df641bd24c0ce0516aafaca43defb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BIVAR_UNKNOWN</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7ca4676256e6c40f970031b5f6d8cff1a04f2755f3a9cfc0407af80e526d3e432</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a6d7fb6f1904db0edf8f4230909e769c8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a65f64934ddaa3748313e15ddc85a11d8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_EXPRTREE *f, SCIP_BIVAR_CONVEXITY convextype, SCIP_VAR *z, SCIP_Real zcoef, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a7d05ca5fa08a71b5db6e90273e379164</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_EXPRTREE *f, SCIP_BIVAR_CONVEXITY convextype, SCIP_VAR *z, SCIP_Real zcoef, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetLinearVarBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a9de4a66e200c78f88fa6a9e6b984746c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLinearCoefBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a4e4425fab4fd806f613886df5b56dd16</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRTREE *</type>
      <name>SCIPgetExprtreeBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a2d9ce77ee41ed91cafbd2572fa1131dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a5646ba6de824017efaac220fae2cb922</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsBivariate</name>
      <anchorfile>cons__bivariate_8h.shtml</anchorfile>
      <anchor>a5088998b5f31e5aab00db99ddd7a8153</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_bounddisjunction.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__bounddisjunction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>a05e8c9c71fd15cef320dd7887e42fc62</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>a4ea716f692db1c03f213b26a6ab6761b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_BOUNDTYPE *boundtypes, SCIP_Real *bounds, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>a42b2029ef1daef352ec69f9c6aa00d55</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_BOUNDTYPE *boundtypes, SCIP_Real *bounds)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>a5f146f87f4634590d1e44330d0606ff9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>a21f4a8bb5c143c23f56b90268bd51402</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE *</type>
      <name>SCIPgetBoundtypesBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>add4341869101c8dbcea80d1aa6c99e0d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetBoundsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.shtml</anchorfile>
      <anchor>ad4e3521d4a238b48f0f62737e5f1cfd5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_conjunction.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__conjunction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrConjunction</name>
      <anchorfile>cons__conjunction_8h.shtml</anchorfile>
      <anchor>a91345eaf2d0d572ff3e280dadf40d070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsConjunction</name>
      <anchorfile>cons__conjunction_8h.shtml</anchorfile>
      <anchor>a20a0d5d6d2b81ce5f927453d1f70789f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicConjunction</name>
      <anchorfile>cons__conjunction_8h.shtml</anchorfile>
      <anchor>afaf2ef8b73fcad162e399f320ce9a38c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsElemConjunction</name>
      <anchorfile>cons__conjunction_8h.shtml</anchorfile>
      <anchor>a44a51d7191edfba5bf54b0c6d8182508</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *addcons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_countsols.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__countsols_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>aede3f5a232e13ec0101434025da0b07b</anchor>
      <arglist>(SCIPdialogExecCountPresolve)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>a599e17990e96f53aec3c5650ee9773b3</anchor>
      <arglist>(SCIPdialogExecCount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>a1c3b0e8f05febeac36ad6f77ce45bf66</anchor>
      <arglist>(SCIPdialogExecWriteAllsolutions)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCountsols</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>a2f1a135719b35b96839d75393eaf34aa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcount</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>aef183d6883f1917bffb15159f7b856fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedSols</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>a94474f0a2a7a84d6bda5838f9d1a906d</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetNCountedSolsstr</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>a475ad738f80c4aa477be926affe0b353</anchor>
      <arglist>(SCIP *scip, char **buffer, int buffersize, int *requiredsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedFeasSubtrees</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>aa0c720ca903f2410e25418740c9c9468</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetCountedSparseSols</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>af61727c99c82ac5c40b0de1a0f1aa04d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, SCIP_SPARSESOL ***sols, int *nsols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetParamsCountsols</name>
      <anchorfile>cons__countsols_8h.shtml</anchorfile>
      <anchor>ad77e31969be5793016a019e006eda73c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_cumulative.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__cumulative_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SOLVECUMULATIVE</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a485cc745040bf2ea0e61fa5f430391c0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a5fc1cb9a5326e09db66867291891fe6a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>af9312fb28ec365d9a2377582a1777805</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a45c8aef9ecaa1d270daabe3880637b65</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHminCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>adf14807efb2a093612f237ca57713e75</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int hmin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetHminCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a00d1d1e2f3da39002464880bd1e7b269</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHmaxCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>af191cfc8f9ccad49e5e21af6389188b3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int hmax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetHmaxCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a980bb4674a4c392587d9203e1ee4edd4</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a29d15b51a4f3f0dbc08c33c17e395a0b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>ae38707f4b5392d73372e7367399f77c3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCapacityCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a9de4d325285a82ea921ee9a9e2da19ac</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDurationsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>ada392f726f16eb9db8b88aa9b2b7972f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDemandsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>ae9d16fbf5b98d74b2d6cb9d477b33b14</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a7d1175f0f82f3498790ffd309566ae9a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, int hmin, int hmax, SCIP_Bool *violated, SCIP_CONS *cons, SCIP_Bool printreason)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnormalizeCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>aa6f6b8af0fade00e58ce7fc2b0ba1e44</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, int *durations, int *demands, int *capacity, int *nchgcoefs, int *nchgsides)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsplitCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a3b558cff0cae21ea7358fcfa5e06f750</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, int *hmin, int *hmax, int *split)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpresolveCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a73ab2dcd5e9be5cee1464890d7fb0913</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, int *durations, int hmin, int hmax, SCIP_Bool *downlocks, SCIP_Bool *uplocks, SCIP_CONS *cons, SCIP_Bool *delvars, int *nfixedvars, int *nchgsides, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a022f47402cbbae037fdbf267292dd06a</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOLTIMING presoltiming, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, int hmin, int hmax, SCIP_CONS *cons, int *nchgbds, SCIP_Bool *initialized, SCIP_Bool *explanation, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrespropCumulativeCondition</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a9ca54978da391765fbdf8d03b20358ce</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, int hmin, int hmax, SCIP_VAR *infervar, int inferinfo, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Real relaxedbd, SCIP_Bool *explanation, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvisualizeConsCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a42ac7b4c2381e2df2d63aa5a0650cb97</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolveCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a075a9b0e8a3993b4e73c9f885bad68e9</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_SOLVECUMULATIVE((*solveCumulative)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveCumulative</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a8d62b575d547d8a2b9cd2158b1a12bda</anchor>
      <arglist>(SCIP *scip, int njobs, SCIP_Real *ests, SCIP_Real *lsts, SCIP_Real *objvals, int *durations, int *demands, int capacity, int hmin, int hmax, SCIP_Real timelimit, SCIP_Real memorylimit, SCIP_Longint maxnodes, SCIP_Bool *solved, SCIP_Bool *infeasible, SCIP_Bool *unbounded, SCIP_Bool *error)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateWorstCaseProfile</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>aae4e54b65d7f2d5784776d9cc8ca6bf1</anchor>
      <arglist>(SCIP *scip, SCIP_PROFILE *profile, int nvars, SCIP_VAR **vars, int *durations, int *demands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcomputeHmin</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>afbd6a0eb026a2b07adbb175203559998</anchor>
      <arglist>(SCIP *scip, SCIP_PROFILE *profile, int capacity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcomputeHmax</name>
      <anchorfile>cons__cumulative_8h.shtml</anchorfile>
      <anchor>a49c6359f943d97dc0b67c4d67428f223</anchor>
      <arglist>(SCIP *scip, SCIP_PROFILE *profile, int capacity)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_disjunction.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__disjunction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrDisjunction</name>
      <anchorfile>cons__disjunction_8h.shtml</anchorfile>
      <anchor>a90ae1ace8650294f2f33255977ebb6a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsDisjunction</name>
      <anchorfile>cons__disjunction_8h.shtml</anchorfile>
      <anchor>a9032152b980a802b1afddd6a5158f9da</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss, SCIP_CONS *relaxcons, SCIP_Bool initial, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicDisjunction</name>
      <anchorfile>cons__disjunction_8h.shtml</anchorfile>
      <anchor>a25af555aaf289dbfc26d88b8a2ecb17c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss, SCIP_CONS *relaxcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsElemDisjunction</name>
      <anchorfile>cons__disjunction_8h.shtml</anchorfile>
      <anchor>a7836be6a83c489e4047c91f0f4a2c1c0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *addcons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_indicator.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__indicator_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>acec6947832a55d9dde74e7ba446d1ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a52f6038d998403a3f5f5ba3c154f0dfc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a1004431ad4ba2c8f1cd4681fbba40d1b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicatorLinCons</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a027445ced4573462bb613f293b5569dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *lincons, SCIP_VAR *slackvar, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicIndicatorLinCons</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a780b8a09e183a620325e541ebafd114f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *lincons, SCIP_VAR *slackvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>ad974cacd95e7d4da66945ad1cd7aec87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a3940c41d867a4c2ad752bdab01a7d8b4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a52c113d2e5e681f68883c9821418cedf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *lincons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>abc00f18a59dee1232f8a2c41bfd3c9b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *binvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>aa41b2ec6bbfe402f40a55d4b34d1a866</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetSlackVarIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a1f334f8895c4779856d1e7b62aed47a4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisViolatedIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>ad753ff2e29333ef3abec7f6c651368a5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeIndicatorFeasible</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>ac50cc1a3e02089a32c8ee04f9d9eb5a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool *changed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeIndicatorsFeasible</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a788c5e70861573cbdbb1e6fee2a8399f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_SOL *sol, SCIP_Bool *changed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a48ffeef9b6caa9c8626b30a28bc2dd16</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *lincons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowIndicator</name>
      <anchorfile>cons__indicator_8h.shtml</anchorfile>
      <anchor>a3c31a140b781e54929255677e20bb98f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_ROW *row)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_integral.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__integral_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIntegral</name>
      <anchorfile>cons__integral_8h.shtml</anchorfile>
      <anchor>ac0a17c1fb32d73a8c3ead6de9ff799e2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_knapsack.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__knapsack_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a6db32aa67fda5e61f0dedfd595175647</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a97042db12a1561c3a95aec4edf97d3e0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a8315e9551344f5f3921e6e3890566d15</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Longint *weights, SCIP_Longint capacity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a3cc6df93c5f35c42e8aca5b0f36da2f1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Longint weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetCapacityKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a9fb7a73aa72de60caea42c8c73922056</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgCapacityKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a84dbea2b543292759bb1e795dbf2efda</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Longint capacity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a0cddcb3414a2df5e55ed7c755f9300a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a17b08e2dc194b5d999d76c69963854bb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint *</type>
      <name>SCIPgetWeightsKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>ac47429b8756e92b1550302c5f0282695</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>ae75913674509ecf16c16b5b7c8913de3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>aba10ce09e582e8dbe95f461c851620af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a77ca2608c892417db06e234fb0eb738f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackExactly</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a8f16a4931b2d53b5ad471c7ec62f8a0e</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackApproximately</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a3e8d53334043cd2048b0242816f3ab5a</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateKnapsackCuts</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a6be96809e9993436cc6bcdc7cb1031b3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SEPA *sepa, SCIP_VAR **vars, int nvars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_SOL *sol, SCIP_Bool usegubs, SCIP_Bool *cutoff, int *ncuts)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateRelaxedKnapsack</name>
      <anchorfile>cons__knapsack_8h.shtml</anchorfile>
      <anchor>a898ce34f72bdcc785b4ea671af75d03d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SEPA *sepa, int nknapvars, SCIP_VAR **knapvars, SCIP_Real *knapvals, SCIP_Real valscale, SCIP_Real rhs, SCIP_SOL *sol, SCIP_Bool *cutoff, int *ncuts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linear.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__linear_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_LINCONSUPGD</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a9675890862d1d86a50fb95f1c1de2625</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LinConsUpgrade</type>
      <name>SCIP_LINCONSUPGRADE</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>acb54086ac632c4e0d65f74eb4f8f7c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a03292cfe5e3dc200e15299267130ed2d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeLinconsUpgrade</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a0c7d2ae4288d0760dc8156fdaf9aee64</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_LINCONSUPGD((*linconsupgd)), int priority, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>aa7aed137a4130b35b168812414413481</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a7b45524275d46ba74c01613381910901</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a970e41b2c10983a8ce99b07b9fada437</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, SCIP *sourcescip, const char *name, int nvars, SCIP_VAR **sourcevars, SCIP_Real *sourcecoefs, SCIP_Real lhs, SCIP_Real rhs, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a38e1ad54f5ada21a62c1ed2f0529a74a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgCoefLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>af331b0943438e7c0cb6bc33bc6659433</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelCoefLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>af8075b62c3be719271bf84ab2e19c7bf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a412d4c849b3e038067603eeaee19ac0c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a152f83b1953aaf62fe3471039ff24262</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLhsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>ad9dbf2f92f03970431948bf42262f5e2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRhsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a1a2bbebfbad5cfa955899b6da053e6a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a4604e5a3408bca690ddfde493012cc20</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a1091fe43cc5148e023330592fff4a360</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetValsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>aabb1d65f76855867505311354affb73f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetActivityLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>aa8c88dcaa6cc14e28a4e7ee6e8d7c949</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFeasibilityLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>aa9c94fdeba8ad0ca5aa97c7f07070a51</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a0bd06cd82e491728d839582c0520c7bd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a93245470ed30b9c3a32499e88a729de0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a0f69b022e5996a9f3ec6fee1c608c7be</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupgradeConsLinear</name>
      <anchorfile>cons__linear_8h.shtml</anchorfile>
      <anchor>a1876fd40af473ebfcc409e9a19fcef69</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **upgdcons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linking.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__linking_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a79632aa2c9245e5f76b10dac24598fd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a36982d2d4d139d872d74d3054c71997e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *intvar, SCIP_VAR **binvars, int *vals, int nbinvars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>ae86c68e03aa84c921743b1c0cdb7d54e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *intvar, SCIP_VAR **binvars, int *vals, int nbinvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsConsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a301fd9e1b9eeb47353c16da45ad09bc0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetConsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a45f913398b4be2d09fb1a4dd9ef85e5f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetIntvarLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>af1803bfe1c3f4504432b6d0dd39f84bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a03251ced478368e3fbe59af1db88bdc3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR ***binvars, int *nbinvars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinvarsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>a00164960251507b9d7f9aadf3620a174</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetValsLinking</name>
      <anchorfile>cons__linking_8h.shtml</anchorfile>
      <anchor>acff0549ad69d9853adde7f1f5df5dd22</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_logicor.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__logicor_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>a54b04246f35c1c2968e284ee36ce620d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>ab7fa763c2b9f73c6b82fd7eefb75d6c7</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>aafa37080078bcc3086c6b6a7538f55fc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>af77292a57a30f2ef15ef309acc9c915b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>a143984b18ab9b590c27dc60a634a8052</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>a79c1bc82a011a189e7eac8f4a4d895e8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>a4356e0682bdd8e91d080ccca55900130</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>ab94278d46f448d1af6826b778d37f1bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLogicor</name>
      <anchorfile>cons__logicor_8h.shtml</anchorfile>
      <anchor>a8a013a44406d8c0ebc3b0da8c6706384</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_nonlinear.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__nonlinear_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NONLINCONSUPGD</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a0fcead67e557ca141c4aa54cc132fd90</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRGRAPHNODEREFORM</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>aed222f34e3e408afce21921ff9215be3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>aa67213183c58bf88767d4f35c2e67910</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNonlinconsUpgrade</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a6806f7983fcd79217710f3c569a0f293</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_NONLINCONSUPGD((*nonlinconsupgd)), SCIP_DECL_EXPRGRAPHNODEREFORM((*nodereform)), int priority, SCIP_Bool active, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a62af7ed0c0e59ce5acaba81543af1d0e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *nonlincoefs, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a9e5daea251efbf465154d270e418080c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *nonlincoefs, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsNonlinear2</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a769a6a007afaae28d3862de3b0feadb0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, SCIP_EXPRGRAPHNODE *exprgraphnode, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicNonlinear2</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a43211664a4d2681ba77d7b2d5ee6b52b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, SCIP_EXPRGRAPHNODE *exprgraphnode, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearVarNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a0c274e0b8026e2f767d31272937d662e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetExprtreesNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>aefb73a17ee3f20d102d6839bd7660344</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *coefs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddExprtreesNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a52ba6424bb30f9b9520c20bdbe3d1dd2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *coefs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a54c1b051b87ffa9c683351a680da2d5f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLinearVarsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a068323df507e36685558e98e43cf8a79</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLinearVarsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ad09a26c7b1d98a554315eb4abf41d2af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLinearCoefsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a5c64d5992ad65282db4d574bd115ba30</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExprtreesNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a9110a4b1a2566bba3e1425ef4bcd7bb1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRTREE **</type>
      <name>SCIPgetExprtreesNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ad22f4192a06eb2eda92da862e956d869</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetExprtreeCoefsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ac0d91dbd3c37a9a1e7b174fc384d91d6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPHNODE *</type>
      <name>SCIPgetExprgraphNodeNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ad8d80b8daa862a4640300e2be1806a5c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a1e496bef67fa65289c38a9489631d01a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>afb0cea33b7f09880d266ffbed884dfe2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCurvatureNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>af719dc41175fa6a78c7a68b5f3734933</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetCurvatureNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ab940f16c2b41fbbac7568ae8a097d84f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool checkcurv, SCIP_EXPRCURV *curvature)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetExprtreeCurvaturesNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>ae071d8848f0aec45b86f776ac3235fd6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool checkcurv, SCIP_EXPRCURV **curvatures)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetViolationNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>abeb142e4d0932b294891f8e8f745bc5d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPH *</type>
      <name>SCIPgetExprgraphNonlinear</name>
      <anchorfile>cons__nonlinear_8h.shtml</anchorfile>
      <anchor>a3235ce94488f1c3df0cb2671a6b26cc3</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_or.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__or_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>a052f1efa752e787c45ee4e90f8a5ea98</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>adcd6e0b9e7a5479c33bdf574367e6476</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>a559826e60a0619558a062bd7053001ef</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>a30f8a45450b314339dc48eee409e6183</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>aee763664193b948ae45518b345dafbcb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantOr</name>
      <anchorfile>cons__or_8h.shtml</anchorfile>
      <anchor>a1373d2cfff14234699d3a17fc7ca46ff</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_orbitope.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__orbitope_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOrbitope</name>
      <anchorfile>cons__orbitope_8h.shtml</anchorfile>
      <anchor>a73206cc40cbc76613246aaa5e5cca89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOrbitope</name>
      <anchorfile>cons__orbitope_8h.shtml</anchorfile>
      <anchor>a82bc5e111799c33d2df86b737b0a7459</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR ***vars, SCIP_Bool ispart, int nspcons, int nblocks, SCIP_Bool resolveprop, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicOrbitope</name>
      <anchorfile>cons__orbitope_8h.shtml</anchorfile>
      <anchor>aec260cc8d7596da8c1b18d07725f1910</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR ***vars, SCIP_Bool ispart, int nspcons, int nblocks, SCIP_Bool resolveprop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_pseudoboolean.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__pseudoboolean_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ARTIFICIALVARNAMEPREFIX</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a862c62ea262bf8156dc0db355216075a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LinearConsType</type>
      <name>SCIP_LINEARCONSTYPE</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>ad637d5f1b784c4d79339cc76c76a55f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_LinearConsType</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LINEARCONSTYPE_INVALIDCONS</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba5ad0e4a1446ccb5d92a7974772336818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LINEARCONSTYPE_LINEAR</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba0793be82f84241dc144a72ed4a850e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LINEARCONSTYPE_LOGICOR</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba71c51947f133076896c880f9b7cf2be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LINEARCONSTYPE_KNAPSACK</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5bace7343ec4514a11d6a927d560903f730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LINEARCONSTYPE_SETPPC</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5baf6e50adf812ff571f93c0532c3021338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LINEARCONSTYPE_INVALIDCONS</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba5ad0e4a1446ccb5d92a7974772336818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LINEARCONSTYPE_LINEAR</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba0793be82f84241dc144a72ed4a850e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LINEARCONSTYPE_LOGICOR</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5ba71c51947f133076896c880f9b7cf2be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LINEARCONSTYPE_KNAPSACK</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5bace7343ec4514a11d6a927d560903f730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LINEARCONSTYPE_SETPPC</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1c5d7733d68e0ed0d1f57d4b54175b5baf6e50adf812ff571f93c0532c3021338</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>ae4a26c35fa2d72da445fe20662192b27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsPseudobooleanWithConss</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>ad95ecd68ee2b4b9af6633bdab1f34893</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_CONS *lincons, SCIP_LINEARCONSTYPE linconstype, SCIP_CONS **andconss, SCIP_Real *andcoefs, int nandconss, SCIP_VAR *indvar, SCIP_Real weight, SCIP_Bool issoftcons, SCIP_VAR *intvar, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>adc1c338f12a7f7347d4ac99bbe2c3f63</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR **linvars, int nlinvars, SCIP_Real *linvals, SCIP_VAR ***terms, int nterms, int *ntermvars, SCIP_Real *termvals, SCIP_VAR *indvar, SCIP_Real weight, SCIP_Bool issoftcons, SCIP_VAR *intvar, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>ac3a54cffc53d21d7aecd1e0a22c91ca4</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR **linvars, int nlinvars, SCIP_Real *linvals, SCIP_VAR ***terms, int nterms, int *ntermvars, SCIP_Real *termvals, SCIP_VAR *indvar, SCIP_Real weight, SCIP_Bool issoftcons, SCIP_VAR *intvar, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a28c781f9af1b2032950ad29242153e23</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_VAR *const var, SCIP_Real const val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddTermPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a8ff922b412352663cf3870a067cc75e0</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_VAR **const vars, int const nvars, SCIP_Real const val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetIndVarPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>af517d9b542eab172b063b3e367792aca</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetLinearConsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a00e1bca75fc8e650264d3063409cebba</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_LINEARCONSTYPE</type>
      <name>SCIPgetLinearConsTypePseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a1b80714cd719ffb8e6978f5b77501dca</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLinVarsWithoutAndPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a5366a7239f4b9757ce41382e968eb23b</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLinDatasWithoutAndPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a588518002b06ef597b8265cdef02540c</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_VAR **const linvars, SCIP_Real *const lincoefs, int *const nlinvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetAndDatasPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>ac7d76b06caf1d6fe3e30c20ede2c9716</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_CONS **const andconss, SCIP_Real *const andcoefs, int *const nandconss)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNAndsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a5316c87690b2ed97ba33c3fbab00a352</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLhsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a0551806847e932813f79c7bfc40347e1</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_Real const lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRhsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a91515b8e4f8fadbafde1386a653bc3e1</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons, SCIP_Real const rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>a64623ef6cec3b092af788fa1c7aeaf40</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsPseudoboolean</name>
      <anchorfile>cons__pseudoboolean_8h.shtml</anchorfile>
      <anchor>af29673abd21a0b71e9239a34bc960420</anchor>
      <arglist>(SCIP *const scip, SCIP_CONS *const cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_quadratic.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__quadratic_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_QUADCONSUPGD</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ab2520a75c5c6c8d58d6504125ac8305e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadVarEventData</type>
      <name>SCIP_QUADVAREVENTDATA</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a2cc26bd2e51b70ab95e13b6b7588ca31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadVarTerm</type>
      <name>SCIP_QUADVARTERM</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ace676974f5d4a6c165078b47cb2d79b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BilinTerm</type>
      <name>SCIP_BILINTERM</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a98879c75a7907844ec69a01975138888</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a5896e2034e60e6cc9bd7b9350a07157e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeQuadconsUpgrade</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ac9d43a2bddcdb6e11d87f7580eb9f922</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_QUADCONSUPGD((*quadconsupgd)), int priority, SCIP_Bool active, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a1d2346bbee52968f486345828603141d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadterms, SCIP_VAR **quadvars1, SCIP_VAR **quadvars2, SCIP_Real *quadcoeffs, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ad3707e7f7166bea83b7713cf2e52b0db</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadterms, SCIP_VAR **quadvars1, SCIP_VAR **quadvars2, SCIP_Real *quadcoefs, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic2</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a66a2fcf25b6a50493d2c82934953baa2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvarterms, SCIP_QUADVARTERM *quadvarterms, int nbilinterms, SCIP_BILINTERM *bilinterms, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicQuadratic2</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a5dae528ea9ec81875f491514925ede73</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvarterms, SCIP_QUADVARTERM *quadvarterms, int nbilinterms, SCIP_BILINTERM *bilinterms, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPaddConstantQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a0b7c293397739e417e1417ee5b1626a6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearVarQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>abf317ec1649fe05ef0adc01a05d18d10</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>aa84ad0ef556d303d578931f3c21ea684</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real lincoef, SCIP_Real sqrcoef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarLinearCoefQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a2c7e75558bdc58f6583f042aa62aa353</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSquareCoefQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>acdff823cf5484c72fb4655b4c873dde1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBilinTermQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a4f6f86304a38f258eeb134a4ad33f2ce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var1, SCIP_VAR *var2, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a5df7aa538ff4e6f1695b522d0c29c4ed</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a8a653f264d9b2156c66d712d2b284b9d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a26da57063d20ac2f8bd30dcc10715702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetCoefsLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a62982a7ade04d4638da419e07deecf30</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ad9a99e0556c938bf8cef6cf482693ab8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADVARTERM *</type>
      <name>SCIPgetQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a4779a83d63a30860b969d6c8f61e0189</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsortQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>ade6d5aa54f5aee3167cd02e279860837</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfindQuadVarTermQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>aa3a3d2e43a971b831f8b184f6f1cee4d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a27f32aff75736ec8d7c0c61a7b8d2fcd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BILINTERM *</type>
      <name>SCIPgetBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a80d49a7675f67a7b9b5a53d2ccb77fdc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>aa2018705d7aa56f4fa3f37af9e7d16af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a76acc8cd5c480e94bda9529884947413</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCurvatureQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a94fd6973d1070419607c7be27d8291f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConvexQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a00ecfcb4036d55d6ad1c7e7199857afa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConcaveQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a492defe6ceaaacbfb87d47f9ac4b69b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetViolationQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a674afd3d94227b226bf82fefb10d0f3b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLinearLocalQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>adb0bd061bf7ae93b05f7bf146800228d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a9daca154fe065a93c2d01f516ea8e477</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a0b44abf4536898a60fee850e19e5709e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>adc051b266fa45419c667be6a4c391385</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetFeasibilityQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>aca8cc6af27e618b52e5ab5dea556aeba</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetActivityQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a2597327914103cfbca791b5608694a98</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLinearCoefQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a056085dcc39777a9bf8aaa1643dcb126</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgSquareCoefQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a1e5f142315e66b91f0f5a52b465c95fa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgBilinCoefQuadratic</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a4d14c25f10f00270344e9ed9193be4a1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var1, SCIP_VAR *var2, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPaddSquareLinearization</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a2bc9ac1f22bc1de825515064e2236c91</anchor>
      <arglist>(SCIP *scip, SCIP_Real sqrcoef, SCIP_Real refpoint, SCIP_Bool isint, SCIP_Real *lincoef, SCIP_Real *linconstant, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPaddSquareSecant</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a81217b5f2484dbb706ae8115e6413d3a</anchor>
      <arglist>(SCIP *scip, SCIP_Real sqrcoef, SCIP_Real lb, SCIP_Real ub, SCIP_Real refpoint, SCIP_Real *lincoef, SCIP_Real *linconstant, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPaddBilinLinearization</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>adbe41a71b5227a32ff06dba805bbbe93</anchor>
      <arglist>(SCIP *scip, SCIP_Real bilincoef, SCIP_Real refpointx, SCIP_Real refpointy, SCIP_Real *lincoefx, SCIP_Real *lincoefy, SCIP_Real *linconstant, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPaddBilinMcCormick</name>
      <anchorfile>cons__quadratic_8h.shtml</anchorfile>
      <anchor>a58088463742b57af26abc507a8b62c79</anchor>
      <arglist>(SCIP *scip, SCIP_Real bilincoef, SCIP_Real lbx, SCIP_Real ubx, SCIP_Real refpointx, SCIP_Real lby, SCIP_Real uby, SCIP_Real refpointy, SCIP_Bool overestimate, SCIP_Real *lincoefx, SCIP_Real *lincoefy, SCIP_Real *linconstant, SCIP_Bool *success)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_setppc.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__setppc_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="typedef">
      <type>enum SCIP_SetppcType</type>
      <name>SCIP_SETPPCTYPE</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a94bea5fcdd357507820ed53b380181c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_SetppcType</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_PARTITIONING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aa5d1984cfd139f3ff902eaaac7709d525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_PACKING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aada4dfae04adf02e4432f771e8d362f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_COVERING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aad611bf1c01b5d30b5c36e5e48b08019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SETPPCTYPE_PARTITIONING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aa5d1984cfd139f3ff902eaaac7709d525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SETPPCTYPE_PACKING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aada4dfae04adf02e4432f771e8d362f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SETPPCTYPE_COVERING</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aad611bf1c01b5d30b5c36e5e48b08019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a2d0a080eabfd94d487173466cac39236</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpart</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>aabe1b748b2512948b33777804e690d6d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSetpart</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a1bf681ce9ca638e5b8417519c62dbeff</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpack</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a6d08b49b7747e82ead50ca57cc265ced</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSetpack</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>ae0bf2514d43fa56e800a4957e74d70db</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetcover</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>abf7674872517990c86ee114df7f34351</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSetcover</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a8d59cdbad55501bc749d9a0a51a2012d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a943e37509aca09bd0122a3f9c705158c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a676bb79bae4bb1d0746e55d430a8a820</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>ac5a51b663b928925e8c2ece1024a8f84</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SETPPCTYPE</type>
      <name>SCIPgetTypeSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>aa177ebcc53dbd98bcccbb8b82bddb32f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>ade6d1a9212b8b6306e6127174b8f0eea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>aed1cc89c3256dcd7ac059b6d188643cd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a4816ad94eb736e32f1a52bd148074df5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedonesSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a8894ed622cd6af47236c30c26860f3d9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedzerosSetppc</name>
      <anchorfile>cons__setppc_8h.shtml</anchorfile>
      <anchor>a2e34fd6440dff7757a52074752333dbd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_soc.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__soc_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a42c8c037eb84b7c2f6f7090538227ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>ae37ea9297d888d8cf30e11001964cec1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *coefs, SCIP_Real *offsets, SCIP_Real constant, SCIP_VAR *rhsvar, SCIP_Real rhscoeff, SCIP_Real rhsoffset, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a5afb0c35e3a865f069513d4e8a44a316</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *coefs, SCIP_Real *offsets, SCIP_Real constant, SCIP_VAR *rhsvar, SCIP_Real rhscoeff, SCIP_Real rhsoffset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a35d9d0aa1eaf773716e83d73510320a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLhsVarsSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>aec5b56738403ef7ffdad6ba480e83766</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLhsVarsSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a6f3ccb05d0f9aaeb6028f55b990cc9dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsCoefsSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a6983d6344e56f175a8ea96b780fc3e3d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsOffsetsSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>af16aa54727c6a3a7227cc7340820cfce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsConstantSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>ab75bd414eeab09f6de72293a5a48ec71</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetRhsVarSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>ada9e2df6a37a488b7cd0de12ae5b24c5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsCoefSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a755da9544fbc6cbf16598054d4c21591</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsOffsetSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a785ee6cadba5f6ff215be132ac8be125</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemSOC</name>
      <anchorfile>cons__soc_8h.shtml</anchorfile>
      <anchor>a6bc0f8949db07c679040dab8073e33bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos1.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__sos1_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a57208f7b9b06d3bd60234b73eddd489f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a602170304c73ecd6a2c2c6efc5e871cc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a60d632e9919131f13e6f5262a4db7143</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a4d76e35eb4b6b44ef22fa8e384c15ffb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a7e4434fe62b09f9225e5aedfeffa798a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>ada74c232127253148e27e01d9fe76033</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>ae887e8fa5271a95fd7d20875aac6199c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a6596a6586bc237b3be0bffd150f26b43</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIGRAPH *</type>
      <name>SCIPgetConflictgraphSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>addb18de09951e223a2136b9972df639b</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSOS1Vars</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a853968b8e827b4e355ce6fae0d5ae1c7</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a20f7725a76a1741026fe5a1b3a8c8e6a</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNodeSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a85c81b6af601e2f1459f8c85de3584cd</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPnodeGetVarSOS1</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a68f22522b5d11cc3897530416bafd863</anchor>
      <arglist>(SCIP_DIGRAPH *conflictgraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeSOS1sFeasible</name>
      <anchorfile>cons__sos1_8h.shtml</anchorfile>
      <anchor>a3e67ad7967da8e5be7611648d0df9ed5</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_SOL *sol, SCIP_Bool *changed, SCIP_Bool *success)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos2.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__sos2_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>a553b36330a5538c651c0c39ee9d4186d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>aa7a96c42d087a779412ca2001f32014c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>aec28d34ec82f61a6168afa67e6a34469</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>aead66a32db6389504977e34349aa4ba9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>a5c7952f62a015dc8b94ba1f416104963</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>a6b003078ba8c81ab2c5245f2f9b23f4d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>a62dc70676518cb28c1f06a2e7633411e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS2</name>
      <anchorfile>cons__sos2_8h.shtml</anchorfile>
      <anchor>a4c5475f39692e3cc71e7e9d6653c87fb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_superindicator.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__superindicator_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSuperindicator</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>aff76d3efb05d3e5be70b6fa933fb6480</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSuperindicator</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>adc26455c79108aa604c375c0286f5a48</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *slackcons, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicSuperindicator</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>af41be8eb0fab874631735773637b7696</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *slackcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetBinaryVarSuperindicator</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>a775ddb0827cb06829c91314179996418</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetSlackConsSuperindicator</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>a065c3dde8119aa24ab19648ef32b608d</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformMinUC</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>aa0dbccddb4cc4ae551828fef51ee7f77</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__superindicator_8h.shtml</anchorfile>
      <anchor>a3a175361980fd3c71a17eea0677e4dcd</anchor>
      <arglist>(SCIPdialogExecChangeMinUC)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_varbound.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__varbound_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a54006547b31bdb0d459f136e60630eaa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>ace0f6f0f039ba125796464a119089884</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *var, SCIP_VAR *vbdvar, SCIP_Real vbdcoef, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a3cb2c3d6f0fc745e5e7d837ce82c2844</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *var, SCIP_VAR *vbdvar, SCIP_Real vbdcoef, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>aa058db2a0f701e987d72425822afc649</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>ab1e41a5b6362bb6c84254bc2942567c8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVarVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a0ba64940448ff6860c2fa9dd4555f50c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVbdvarVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>ae0f2f77277f7e2d11e2443ebaed3458f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVbdcoefVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a0e5cd4c3edc088b75374d67e2cc16f23</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>ac237dd0f126a6f5bf5fc37f315ee1f86</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a29510f6e041a53fff234f0425653b9f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowVarbound</name>
      <anchorfile>cons__varbound_8h.shtml</anchorfile>
      <anchor>a2ec527a471fbd9d2525cfdd0ab0bfaf5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_xor.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>cons__xor_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>a30be499339dda77e6ab7ec9720020285</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>a6d8ed4fefe3d67731f636c06e580750e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_Bool rhs, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBasicXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>a3bf1595c40a3e0b8edd75618073d5167</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_Bool rhs, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>a364417e8b5570ef5f4314f5150e48202</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>a4ab3ef00e1e8f471aa2e9c76eb0e0605</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetRhsXor</name>
      <anchorfile>cons__xor_8h.shtml</anchorfile>
      <anchor>ab81bc727b55b27587d6639bda9111e67</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>def.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>def_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_Bool</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a5f45b90d62d88b23ba4cf7c08d3bf358</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a77366c1bd428629dc898e188bfd182a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_VERSION</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aee6f2eecb2a9b4f572154b791c9ebfc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_SUBVERSION</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a0a6094001b8155f6cf5bf0bd155bb12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_COPYRIGHT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a4dcb3a6b4e23acffb70ace1d1e6d66d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_VARTYPE_BINARY_CHAR</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ab885d0674e94a5dff659ea18bf49c356</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_VARTYPE_INTEGER_CHAR</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a3e41d8362e5e213b7b900bfb7d6261cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_VARTYPE_IMPLINT_CHAR</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a4e8d5d02d245005a13ec951a39ff0ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_VARTYPE_CONTINUOUS_CHAR</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ad5b701c77d61ebcf5d954cb8a881b7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_Longint</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a1e6171040084cc1f39f88e386238ee10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_LONGINT_MAX</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aefadd158e2f77274a8664e2ed782ea45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_LONGINT_MIN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ac5a64d1f79e265d7ff5fa82fbe8ec3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_Real</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a7f0ca7bf9e709814432691d8173a21fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_REAL_MAX</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a5acae9c40c54f6a8eb8cae9f92b99e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_REAL_MIN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ad949cc924fd8ffb81f44ffe4a9ec6f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_REAL_FORMAT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>af9de389b27b212fa442e9260b27ffda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_INFINITY</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a015719a1a2f1f91e6b141e2b4073fc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_EPSILON</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a6ab7a841c241ef927a89668f08ab526a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_SUMEPSILON</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a3e6278f7393a7330696b68aa789a9582</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_FEASTOL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>afc1ae64e3f653b5a8e62dcc1293653d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_CHECKFEASTOLFAC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a86f2fd9b4df7a014ec881b85c241a6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_LPFEASTOL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aca8f5a4c492d93ae6d9ddd66af42443d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_DUALFEASTOL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>abf6a6d7a37305a079485312a8f8b75af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_BARRIERCONVTOL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae8d0c47ec5c029ce25b4e8ec8553f019</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_BOUNDSTREPS</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ad418e574eab69d6111513bf28c6d8c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_PSEUDOCOSTEPS</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a416b526976a9a031c95386afbbef0ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_PSEUDOCOSTDELTA</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a746f25124cb19175bb92110c7daf5639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_RECOMPFAC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a434a3ba46b34c3621f3ae30e1ceca904</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_HUGEVAL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a0d0f25136ee2600bdd718624ee3e94d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_MAXEPSILON</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae4c3ae6276a9af588dd20e262b9f6212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_MINEPSILON</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aa74b2719e163bff61141b1d983b365db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_INVALID</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a5e26fa263b7982578f3d3e3e8e876bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_UNKNOWN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a859b5e3440658faf7b69e6414d3a2907</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REALABS</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>add08ff5d5df711242962dc12240f968e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSEQ</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aa83db7188806498ec9949e12d7f2bf80</anchor>
      <arglist>(x, y, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSLT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a94356c75159ca4c0322e32778d4af57d</anchor>
      <arglist>(x, y, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSLE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a73e65eb0c61b41489b526a0ed10b1f19</anchor>
      <arglist>(x, y, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSGT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae1b3a6d97acc944fb2834cb0bde6e637</anchor>
      <arglist>(x, y, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSGE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a137dea8c69b0174a54c742bd74508901</anchor>
      <arglist>(x, y, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSZ</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>af554f2fb800893b0642af453bb74743d</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSP</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a532fed583f96de102aa5a538505f6bb6</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ab5d5afc14baf1b2f0a00a04824e7e226</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSFLOOR</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>adc5197ac72e784d66e7fd2e304365011</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSCEIL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ac727974c4f41af31763fe94fe4d9bd42</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSROUND</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a2eb976145d7a686b3041e95007974208</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSFRAC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aa4c44b5c7535fff927739b27e7c87161</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSISINT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a34a82b952322901ccbf8dfe65dadabb6</anchor>
      <arglist>(x, eps)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_MAXSTRLEN</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a092c962ca167cd52b4be9c0a29b8da6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_MAXMEMSIZE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a67a5dbe3f59805c4ce91dd34322cc822</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_PARAMS</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ac1d8db42e7d075c6172bccf71cd5d0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_NAMES</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a9f302a11523d6406821e417917435e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_CUTPOOLS</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a5bd6b8e704fc88c8ea094b379740def5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_CLIQUES</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a1a16bcc83b1742b572542cb82c684665</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_NAMES_SMALL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a6285a9862bfb7a161dbf7f0d8b44aac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_CUTPOOLS_SMALL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>abbd46308beab8ff45d72da355cacb20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_CLIQUES_SMALL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae8b2d4a7817f38ad3492ec34e2ae5bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HASHSIZE_VBC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a855470fe4a3acf54462f0cefa642527b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_MEM_ARRAYGROWFAC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae7f59e1d29e7d53778498a5e108c18ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEFAULT_MEM_ARRAYGROWINIT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a2238fe7bdbd5de5f8edb99f1e1c0fefe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPABORT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ad8669395a2a82ed74b9b364f4a310c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL_ABORT_QUIET</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a9445a9a81a050aed04e2215788e20c6a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL_QUIET</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a6cef30a52627ce05a0999879c0aabf5f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ALLOC_ABORT_QUIET</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a22db80709c85d5ce4818707dfa567e04</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ALLOC_QUIET</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ae9e82c03e820a3e93ed73e5c18726b4a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL_ABORT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>aad7a093bb0ad38d38d266256711e939e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ALLOC_ABORT</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a33f3033f05e3e4ec6eb3c2f93b7c3f31</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>afbffafd5fc40cd928e2adcaa83f10bd7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ALLOC</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a7695e892dc456d85a3654eb158976921</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL_TERMINATE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>ab08a92c491249e3624d6f6be56175247</anchor>
      <arglist>(retcode, x, TERM)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ALLOC_TERMINATE</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>a7bfc660543d5eb2262c363354e49b8b7</anchor>
      <arglist>(retcode, x, TERM)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DEPRECATED</name>
      <anchorfile>def_8h.shtml</anchorfile>
      <anchor>af55b00661aca3ef0e7a9703babc7944b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dialog_default.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>dialog__default_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a602f2dbf316244bc3c4a451776769303</anchor>
      <arglist>(SCIPdialogExecMenu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a3d8cf2663db57c874deff6f2994714c0</anchor>
      <arglist>(SCIPdialogExecMenuLazy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa857989a0554cf6112b1b474497738d4</anchor>
      <arglist>(SCIPdialogExecChangeAddCons)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a166b35137cb1c6a2c9a8efc30170bc2a</anchor>
      <arglist>(SCIPdialogExecChangeBounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9e287258de15975b6f7cf1fcb8b24050</anchor>
      <arglist>(SCIPdialogExecChangeFreetransproblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>acf88bf2f5bb3f7b1c19d34c908e1eecf</anchor>
      <arglist>(SCIPdialogExecChangeObjSense)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ae163fa28e457f706397abda217321d74</anchor>
      <arglist>(SCIPdialogExecChecksol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9eb5a10027d0a0831deb37fee277e0cf</anchor>
      <arglist>(SCIPdialogExecCliquegraph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a1c4b04c3eb36fa1748ea7f803e80ecea</anchor>
      <arglist>(SCIPdialogExecDisplayBranching)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aff24f74393b44ada20d706661d215888</anchor>
      <arglist>(SCIPdialogExecDisplayCompression)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a49e3a14cbbd10a205256aa259c8621a4</anchor>
      <arglist>(SCIPdialogExecDisplayConflict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a388e73e630207ae3984593a4587ec39c</anchor>
      <arglist>(SCIPdialogExecDisplayConshdlrs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a1e59aaed582058ed954ebd48ef9de5dc</anchor>
      <arglist>(SCIPdialogExecDisplayDisplaycols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>abba778bdf25535ba1fb0ce18ad8c487f</anchor>
      <arglist>(SCIPdialogExecDisplayHeuristics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa8c65098115a6bb0eed8560f3784f39d</anchor>
      <arglist>(SCIPdialogExecDisplayMemory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a017923aa54d69fdeb3fb23a36faea2b4</anchor>
      <arglist>(SCIPdialogExecDisplayNodeselectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a70dd57e31562ff5571447d074fa14e61</anchor>
      <arglist>(SCIPdialogExecDisplayNlpi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a0c0097d5cb1e1c6021fdb2821d911027</anchor>
      <arglist>(SCIPdialogExecDisplayParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>acc691fa5975527629a960660d744305d</anchor>
      <arglist>(SCIPdialogExecDisplayPresolvers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa49555e59cfb252c5918a97e55f8241d</anchor>
      <arglist>(SCIPdialogExecDisplayPricers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a41233f16bb0ad770f1791ce8914e2880</anchor>
      <arglist>(SCIPdialogExecDisplayProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa6d5e93fb6d5a789174c0f65399080a0</anchor>
      <arglist>(SCIPdialogExecDisplayPropagators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ad5bfbbc0b43f48d07a00b1ffeea5b1ae</anchor>
      <arglist>(SCIPdialogExecDisplayReaders)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>af8892cd6fb22cf4ea501829b2d9521ae</anchor>
      <arglist>(SCIPdialogExecDisplayRelaxators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a40104acf32aec87b40e5ab6ecb3d3667</anchor>
      <arglist>(SCIPdialogExecDisplaySeparators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a174977ec5e842b4caa26a298cde638f1</anchor>
      <arglist>(SCIPdialogExecDisplaySolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a837e39a7c08afc16d5acab392fd279ca</anchor>
      <arglist>(SCIPdialogExecDisplayDualSolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a25ae98fc2a013cbb58f78d05a6f285dc</anchor>
      <arglist>(SCIPdialogExecDisplaySolutionPool)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9636414961017fe1d1624071ead531dc</anchor>
      <arglist>(SCIPdialogExecDisplayStatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa632b1036d05436f1812ccae35a2b8eb</anchor>
      <arglist>(SCIPdialogExecDisplayReoptStatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>abeec472346440d56f6a66654b85c5d3a</anchor>
      <arglist>(SCIPdialogExecDisplayTransproblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a331f970dd150e6d3b24f075cb4a7b0e7</anchor>
      <arglist>(SCIPdialogExecDisplayValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9747f25c85162704e55e4b738a2b8b22</anchor>
      <arglist>(SCIPdialogExecDisplayVarbranchstatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a8e80b88245ea918545a91ef7dae4c713</anchor>
      <arglist>(SCIPdialogExecDisplayLPSolutionQuality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a4c7d1526b2a5a6c04ebc93fac2801378</anchor>
      <arglist>(SCIPdialogExecDisplayTranssolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a3e8353f3abff94d6aa56e32edc0cff39</anchor>
      <arglist>(SCIPdialogExecHelp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a784675e1700cba837a8aa2820624972f</anchor>
      <arglist>(SCIPdialogExecFree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>afdf7f08406269a16bc8708c89d3199d2</anchor>
      <arglist>(SCIPdialogExecNewstart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a725b8c96afe475456bc7806a62ae795f</anchor>
      <arglist>(SCIPdialogExecTransform)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a273da7da0b96c9d8b9b85a5f6ebb7d45</anchor>
      <arglist>(SCIPdialogExecOptimize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a5ea321c4fee3b48d908fc4e86f8cc0d3</anchor>
      <arglist>(SCIPdialogExecPresolve)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ae157af778966e209063b9eaa137dab5d</anchor>
      <arglist>(SCIPdialogExecQuit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a78c61bfdb09b13b2a017732c643c1e94</anchor>
      <arglist>(SCIPdialogExecRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a310c55ddb1ead3f845d43077ae819ba4</anchor>
      <arglist>(SCIPdialogExecSetDefault)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9a31e265384f2d5b2233644d48588e25</anchor>
      <arglist>(SCIPdialogExecSetLoad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a059e13325793622f46fdf6674fc7afb4</anchor>
      <arglist>(SCIPdialogExecSetSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a63cae4bdae6ff52be58086dab5821447</anchor>
      <arglist>(SCIPdialogExecSetDiffsave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9cbd809a47613fc3964ba7a4ac9714e5</anchor>
      <arglist>(SCIPdialogExecSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a75e1974af3e7e91832cad17c36596af2</anchor>
      <arglist>(SCIPdialogDescSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a4c16be4c3486175955539377da5e9abc</anchor>
      <arglist>(SCIPdialogExecFixParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a471b3fd5808ead5dada3d5a94d23c5bb</anchor>
      <arglist>(SCIPdialogDescFixParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a42d1fa9e9fe018a8ad064086ddd92ade</anchor>
      <arglist>(SCIPdialogExecSetBranchingDirection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ab64524d3993ceed8f97cd5fdd5019803</anchor>
      <arglist>(SCIPdialogExecSetBranchingPriority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a12e67d35e232e41040c41d413d044536</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a43cbfafa3f836f8b60a8f529243828e7</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aa4d9af4018b51449e545a784b13187f4</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>abed6ff055ce42d59510be83a686c4370</anchor>
      <arglist>(SCIPdialogExecSetPresolvingAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a94b65987df92acfe626918d076b715f7</anchor>
      <arglist>(SCIPdialogExecSetPresolvingFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a06c26d857e5fbb70632c8fb067a9785e</anchor>
      <arglist>(SCIPdialogExecSetPresolvingOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>adb4920c90822cb2d7ec2671de7c3f1ab</anchor>
      <arglist>(SCIPdialogExecSetSeparatingAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ab9f3ecda2ce2c91cf7c7da3284d4275a</anchor>
      <arglist>(SCIPdialogExecSetSeparatingFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ae394d44bb105edbf73b2ff6ba065306c</anchor>
      <arglist>(SCIPdialogExecSetSeparatingOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a7b269a1d3f73710230c9cacc1f866878</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCounter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a376ba9058a620353d5cf371e71803b81</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCpsolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aafc7b4800943aeea60ef027557588734</anchor>
      <arglist>(SCIPdialogExecSetEmphasisEasycip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a8ee48531b0b2f20609342dd45cad32fc</anchor>
      <arglist>(SCIPdialogExecSetEmphasisFeasibility)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a4e56fb8dbe54e8b015fead506f37b86d</anchor>
      <arglist>(SCIPdialogExecSetEmphasisHardlp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a9578cb91ee54f8477b891ee9b21275f4</anchor>
      <arglist>(SCIPdialogExecSetEmphasisOptimality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>aaec86896a44b5c7250590faf1dd29453</anchor>
      <arglist>(SCIPdialogExecSetLimitsObjective)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRootDialog</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ae11d4db95382ae0c7c3e40362a22f7b3</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **root)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefault</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>a11c47b7b6237c17fbe74f59746fda063</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefaultSet</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>acb713659d23d392931e6835f8db08c93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefaultFix</name>
      <anchorfile>dialog__default_8h.shtml</anchorfile>
      <anchor>ad5f47331d29d0d68a03a76ffb1c6d464</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>disp_default.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>disp__default_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDispDefault</name>
      <anchorfile>disp__default_8h.shtml</anchorfile>
      <anchor>a1d192c15603686a5236d440b9d0ee461</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>event_softtimelimit.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>event__softtimelimit_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeEventHdlrSofttimelimit</name>
      <anchorfile>event__softtimelimit_8h.shtml</anchorfile>
      <anchor>a7ebdeaa0de6d429e5459ed4eb6746e22</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exprinterpret.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>exprinterpret_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__expr_8h" name="type_expr.h" local="yes" imported="no">nlpi/type_expr.h</includes>
    <includes id="type__exprinterpret_8h" name="type_exprinterpret.h" local="yes" imported="no">nlpi/type_exprinterpret.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetName</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>aab5927c86d34c9735d6141e735519a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetDesc</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a4addf369b73a9b708e099bf7a4e83f93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetCapability</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a2662183d2706a17532fcee8c04304f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCreate</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>afa3d4e74943ca79f00707065f67a50af</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFree</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a83ad91aa654a0ecbbdc8093350a15dca</anchor>
      <arglist>(SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCompile</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>ad4142b870bae28b64791d55da3ff4706</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetExprtreeCapability</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>af3821c1215e5a6df4f834fa5b5e293bf</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFreeData</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>af754d568d223fea54f16d89cedec0071</anchor>
      <arglist>(SCIP_EXPRINTDATA **interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintNewParametrization</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a3d4949b971ff0ba837e39c4dc140e6d5</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEval</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a5e8e6006a0fa17a353c06ab530ebcae2</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEvalInt</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a7dc4aaad187f200f28e8c9345f83007b</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGrad</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a951003903b4819772f2643d0efc5b10a</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGradInt</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>adf40904b5c1ad96ac217d40a9ddd2aa9</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Bool new_varvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianSparsityDense</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>a4e3afb5fe90e10cb9e116b66a6a6bede</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool *sparsity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianDense</name>
      <anchorfile>exprinterpret_8h.shtml</anchorfile>
      <anchor>abd322fc0556700c1a41144bbbc0f9386</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *hessian)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exprinterpret_cppad.cpp</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>exprinterpret__cppad_8cpp</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="pub__expr_8h" name="pub_expr.h" local="yes" imported="no">nlpi/pub_expr.h</includes>
    <includes id="exprinterpret_8h" name="exprinterpret.h" local="yes" imported="no">nlpi/exprinterpret.h</includes>
    <includes id="intervalarithext_8h" name="intervalarithext.h" local="yes" imported="no">nlpi/intervalarithext.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SIGN</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a8c5ff70b6b28cd0157c50a22406f92c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPInterval_NAMESPACE</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>ac553d3acdc14013d2464ff17bdf09918</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPPAD_MAX_NUM_THREADS</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a3b5d9a3ffec073d12687214dbe2e4bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>CondExpOp</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>ae821bfe3e7e40674abc319681df0e944</anchor>
      <arglist>(enum CppAD::CompareOp cop, const SCIPInterval &amp;left, const SCIPInterval &amp;right, const SCIPInterval &amp;trueCase, const SCIPInterval &amp;falseCase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualOpSeq</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a7e581bf436df1ee06426c29b5345bca3</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalPar</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a346918acbda8013852b333d86e9c6f36</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a87b08dbfb5d5f171325d0978bc7ba128</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalOne</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>ad166d12ff16a3153e9a23bcaf0cd2535</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalEqualPar</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a1f191da11f26f8aeed424fc3e46828a4</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GreaterThanZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>ad24ec6b1ceee23cc00bd3cb4f1b60d31</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GreaterThanOrZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a30a2aa3135da3983d707eb6e57cab1aa</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LessThanZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a96206822b49249fba43d46f60c85f060</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LessThanOrZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a1da655f002979b14772f94715f481d5e</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Integer</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a914cab8d482692a04fce0b31077b6204</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a2aa292b33a64d3b41bef4cf4fed5c15f</anchor>
      <arglist>(std::ostream &amp;out, const SCIP_INTERVAL &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>exprEvalUser</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a7249a011bd8fb4cbd9b07615f61c2c1c</anchor>
      <arglist>(SCIP_EXPR *expr, Type *x, Type &amp;funcval, Type *gradient, Type *hessian)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>exprEvalUser</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a50548a834bc1b1f3f8a3e55176319772</anchor>
      <arglist>(SCIP_EXPR *expr, SCIPInterval *x, SCIPInterval &amp;funcval, SCIPInterval *gradient, SCIPInterval *hessian)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMin</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a29d2a2c50c0c8fae2ed312294b9d4872</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, const CppAD::AD&lt; double &gt; &amp;arg1, const CppAD::AD&lt; double &gt; &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMax</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a21cd725b0516cc3639c0bfbf134c96ee</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, const CppAD::AD&lt; double &gt; &amp;arg1, const CppAD::AD&lt; double &gt; &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalAbs</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a483dc283c04314aaaddb6e1b1fbe3fea</anchor>
      <arglist>(CppAD::AD&lt; SCIPInterval &gt; &amp;resultant, const CppAD::AD&lt; SCIPInterval &gt; &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetName</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>aab5927c86d34c9735d6141e735519a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetDesc</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a4addf369b73a9b708e099bf7a4e83f93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetCapability</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a2662183d2706a17532fcee8c04304f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCreate</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>afa3d4e74943ca79f00707065f67a50af</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFree</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a83ad91aa654a0ecbbdc8093350a15dca</anchor>
      <arglist>(SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCompile</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>ad4142b870bae28b64791d55da3ff4706</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetExprtreeCapability</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>af3821c1215e5a6df4f834fa5b5e293bf</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFreeData</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>af754d568d223fea54f16d89cedec0071</anchor>
      <arglist>(SCIP_EXPRINTDATA **interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintNewParametrization</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a3d4949b971ff0ba837e39c4dc140e6d5</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEval</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a5e8e6006a0fa17a353c06ab530ebcae2</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEvalInt</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a7dc4aaad187f200f28e8c9345f83007b</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGrad</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a951003903b4819772f2643d0efc5b10a</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGradInt</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>adf40904b5c1ad96ac217d40a9ddd2aa9</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Bool new_varvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianSparsityDense</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>a4e3afb5fe90e10cb9e116b66a6a6bede</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool *sparsity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianDense</name>
      <anchorfile>exprinterpret__cppad_8cpp.shtml</anchorfile>
      <anchor>abd322fc0556700c1a41144bbbc0f9386</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *hessian)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exprinterpret_none.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>exprinterpret__none_8c</filename>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="exprinterpret_8h" name="exprinterpret.h" local="yes" imported="no">nlpi/exprinterpret.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetName</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>aab5927c86d34c9735d6141e735519a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetDesc</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a4addf369b73a9b708e099bf7a4e83f93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetCapability</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a2662183d2706a17532fcee8c04304f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCreate</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>afa3d4e74943ca79f00707065f67a50af</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFree</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a83ad91aa654a0ecbbdc8093350a15dca</anchor>
      <arglist>(SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCompile</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>ad4142b870bae28b64791d55da3ff4706</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetExprtreeCapability</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>af3821c1215e5a6df4f834fa5b5e293bf</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFreeData</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>af754d568d223fea54f16d89cedec0071</anchor>
      <arglist>(SCIP_EXPRINTDATA **interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintNewParametrization</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a3d4949b971ff0ba837e39c4dc140e6d5</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEval</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a5e8e6006a0fa17a353c06ab530ebcae2</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEvalInt</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a7dc4aaad187f200f28e8c9345f83007b</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGrad</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a951003903b4819772f2643d0efc5b10a</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGradInt</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>adf40904b5c1ad96ac217d40a9ddd2aa9</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Bool new_varvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianSparsityDense</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>a4e3afb5fe90e10cb9e116b66a6a6bede</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool *sparsity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianDense</name>
      <anchorfile>exprinterpret__none_8c.shtml</anchorfile>
      <anchor>abd322fc0556700c1a41144bbbc0f9386</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *hessian)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_actconsdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__actconsdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurActconsdiving</name>
      <anchorfile>heur__actconsdiving_8h.shtml</anchorfile>
      <anchor>a1f42a9abb7691ef34f56a81a3e231e94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_bound.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__bound_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurBound</name>
      <anchorfile>heur__bound_8h.shtml</anchorfile>
      <anchor>ad6a10d633d80942c1d0279d0725dc552</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_clique.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__clique_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurClique</name>
      <anchorfile>heur__clique_8h.shtml</anchorfile>
      <anchor>a91257607097b56cb25de08c2724b0eb8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_coefdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__coefdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCoefdiving</name>
      <anchorfile>heur__coefdiving_8h.shtml</anchorfile>
      <anchor>a689b0e546db3fba8409acdf7e1aff09b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_crossover.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__crossover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCrossover</name>
      <anchorfile>heur__crossover_8h.shtml</anchorfile>
      <anchor>a10f29ebf4b2981a55aee0418a3b855ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_dins.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__dins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurDins</name>
      <anchorfile>heur__dins_8h.shtml</anchorfile>
      <anchor>a630a1a7469d47dc6943af0944237eac9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_distributiondiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__distributiondiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurDistributiondiving</name>
      <anchorfile>heur__distributiondiving_8h.shtml</anchorfile>
      <anchor>aebdea121fcd89e95118a4884c703cf1e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_dualval.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__dualval_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurDualval</name>
      <anchorfile>heur__dualval_8h.shtml</anchorfile>
      <anchor>a8c7a2d6e95a27ef4d6e41c79bcde21cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyHeurDualval</name>
      <anchorfile>heur__dualval_8h.shtml</anchorfile>
      <anchor>ac42df5bf37b66a754a9c4d831393df51</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_SOL *refpoint)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_feaspump.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__feaspump_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFeaspump</name>
      <anchorfile>heur__feaspump_8h.shtml</anchorfile>
      <anchor>aaf1ad30cc23374350da7af9b395ce72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fixandinfer.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__fixandinfer_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFixandinfer</name>
      <anchorfile>heur__fixandinfer_8h.shtml</anchorfile>
      <anchor>a1adc06a81a83662dc546a9834f8e8abf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fracdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__fracdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFracdiving</name>
      <anchorfile>heur__fracdiving_8h.shtml</anchorfile>
      <anchor>af72b9903faa0038824ee060a879d6248</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_guideddiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__guideddiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurGuideddiving</name>
      <anchorfile>heur__guideddiving_8h.shtml</anchorfile>
      <anchor>a02a08d914b9df83dd4c194845d2d6e70</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_indicator.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__indicator_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIndicator</name>
      <anchorfile>heur__indicator_8h.shtml</anchorfile>
      <anchor>a946bb28dd1e96ec622245e9ec75ca005</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPheurPassIndicator</name>
      <anchorfile>heur__indicator_8h.shtml</anchorfile>
      <anchor>a424b38529619b0d15704dea1cb4cdf5c</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, int nindconss, SCIP_CONS **indconss, SCIP_Bool *solcand)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__intdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntdiving</name>
      <anchorfile>heur__intdiving_8h.shtml</anchorfile>
      <anchor>abc7811473b5a0b310e09584ce547929c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intshifting.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__intshifting_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntshifting</name>
      <anchorfile>heur__intshifting_8h.shtml</anchorfile>
      <anchor>a6ac40914cfb6b2963ad3c231f727bd1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_linesearchdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__linesearchdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLinesearchdiving</name>
      <anchorfile>heur__linesearchdiving_8h.shtml</anchorfile>
      <anchor>a64490c04fd91ebcd8fbf56f9c11e3bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_localbranching.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__localbranching_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLocalbranching</name>
      <anchorfile>heur__localbranching_8h.shtml</anchorfile>
      <anchor>ad1eb806dcbd1cd04037c85b61f918dfa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_mutation.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__mutation_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurMutation</name>
      <anchorfile>heur__mutation_8h.shtml</anchorfile>
      <anchor>a37358e321322ec3d9e197a46deb4e533</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_nlpdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__nlpdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurNlpdiving</name>
      <anchorfile>heur__nlpdiving_8h.shtml</anchorfile>
      <anchor>aaa20b7209d2c8eac75fa1fa2c06a77bc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_objpscostdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__objpscostdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurObjpscostdiving</name>
      <anchorfile>heur__objpscostdiving_8h.shtml</anchorfile>
      <anchor>a83277a2049fe267c8634fed0df439693</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_octane.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__octane_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOctane</name>
      <anchorfile>heur__octane_8h.shtml</anchorfile>
      <anchor>af6fa668040deb871eb689ff9a329eb4c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_ofins.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__ofins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOfins</name>
      <anchorfile>heur__ofins_8h.shtml</anchorfile>
      <anchor>a12a5bae588ace6529542b4815965562d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_oneopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__oneopt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOneopt</name>
      <anchorfile>heur__oneopt_8h.shtml</anchorfile>
      <anchor>aa5d0745fe51bcdc02c655e08852a59ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_proximity.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__proximity_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyProximity</name>
      <anchorfile>heur__proximity_8h.shtml</anchorfile>
      <anchor>ae5a58ca1ee919de440f056b7c3a6c795</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Real minimprove, SCIP_Longint nnodes, SCIP_Longint nlpiters, SCIP_Longint *nusednodes, SCIP_Longint *nusedlpiters, SCIP_Bool freesubscip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurProximity</name>
      <anchorfile>heur__proximity_8h.shtml</anchorfile>
      <anchor>ab0d54c783e1d86ac22e53177536a2981</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeleteSubproblemProximity</name>
      <anchorfile>heur__proximity_8h.shtml</anchorfile>
      <anchor>abf3f4b5acf9d149e74321cb4becb8a6d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_pscostdiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__pscostdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurPscostdiving</name>
      <anchorfile>heur__pscostdiving_8h.shtml</anchorfile>
      <anchor>acd329c6cf0d396096e2e1f100fc7cd04</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_randrounding.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__randrounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRandrounding</name>
      <anchorfile>heur__randrounding_8h.shtml</anchorfile>
      <anchor>aa6d330e681a6690be521adb18f17e0bd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rens.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__rens_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRens</name>
      <anchorfile>heur__rens_8h.shtml</anchorfile>
      <anchor>afc870df390e4948c917ecc4863258a2e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyRens</name>
      <anchorfile>heur__rens_8h.shtml</anchorfile>
      <anchor>ac34b7d27d919666cc1281292fdf6d14d</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Real minfixingrate, SCIP_Real minimprove, SCIP_Longint maxnodes, SCIP_Longint nstallnodes, char startsol, SCIP_Bool binarybounds, SCIP_Bool uselprows)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_reoptsols.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__reoptsols_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptsolsGetNCheckedsols</name>
      <anchorfile>heur__reoptsols_8h.shtml</anchorfile>
      <anchor>a72aab537c07ab7e846fc7158e89ef082</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptsolsGetNImprovingsols</name>
      <anchorfile>heur__reoptsols_8h.shtml</anchorfile>
      <anchor>ab1b8e6f8299a0611fc05188c134ad5b8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurReoptsols</name>
      <anchorfile>heur__reoptsols_8h.shtml</anchorfile>
      <anchor>ac4506934d1b2e282453973549c428e14</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rins.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__rins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRins</name>
      <anchorfile>heur__rins_8h.shtml</anchorfile>
      <anchor>aa8232fb5d57a41be80de943b3fb24a2f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rootsoldiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__rootsoldiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRootsoldiving</name>
      <anchorfile>heur__rootsoldiving_8h.shtml</anchorfile>
      <anchor>afb4741efabcac9dec6fc361cca122b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rounding.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__rounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRounding</name>
      <anchorfile>heur__rounding_8h.shtml</anchorfile>
      <anchor>ac41d2df91bc5ed44380a0ef24b084e63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shiftandpropagate.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__shiftandpropagate_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8h.shtml</anchorfile>
      <anchor>a6f3a5709b90301d5fec3594edad77934</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shifting.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__shifting_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShifting</name>
      <anchorfile>heur__shifting_8h.shtml</anchorfile>
      <anchor>a5e0cd2a98d0f24ba9cc94918c26a30a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_simplerounding.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__simplerounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSimplerounding</name>
      <anchorfile>heur__simplerounding_8h.shtml</anchorfile>
      <anchor>a29047f9d88898ab396abe63917f2fd06</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_subnlp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__subnlp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>afd440078e5a49e9dfd94ac62a065a9f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateStartpointHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a7ee19adc67412b606de293e2677ab38e</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *solcand, SCIP_Real violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a8498c377ed87f40a2b191d505924d27a</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_SOL *refpoint, SCIP_Longint itercontingent, SCIP_Real timelimit, SCIP_Real minimprove, SCIP_Longint *iterused)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresolveSolHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a9d4542c72d30649145020bf2f1067099</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *sol, SCIP_Bool *success, SCIP_Longint itercontingent, SCIP_Real timelimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsToNlpHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a154c9a53d3798601d1b12c793372e751</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool addcombconss, SCIP_Bool addcontconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP *</type>
      <name>SCIPgetSubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a402c49d666dbdf7ff0a503e5b6ab9673</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingScip2SubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>af7e4d2131b7c28262221cc0b0daff1a6</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingSubScip2ScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>a32a951895814240a257776445b284346</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPgetStartCandidateHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.shtml</anchorfile>
      <anchor>ab067ba300a196af914dadd878de35656</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trivial.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__trivial_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrivial</name>
      <anchorfile>heur__trivial_8h.shtml</anchorfile>
      <anchor>ad48cca3c31e8d04be1b768dc48b1cd90</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trivialnegation.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__trivialnegation_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrivialnegation</name>
      <anchorfile>heur__trivialnegation_8h.shtml</anchorfile>
      <anchor>a36c00059c4a94e3412e7f3f3c4bf27aa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trysol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__trysol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrySol</name>
      <anchorfile>heur__trysol_8h.shtml</anchorfile>
      <anchor>a8b48de846ab94bfc544577cba35c4ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPheurPassSolTrySol</name>
      <anchorfile>heur__trysol_8h.shtml</anchorfile>
      <anchor>a0a2e22ed373a06d58af5a44895fc0e97</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPheurPassSolAddSol</name>
      <anchorfile>heur__trysol_8h.shtml</anchorfile>
      <anchor>a0accdab0c39ae62393768a82e40c26af</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_twoopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__twoopt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTwoopt</name>
      <anchorfile>heur__twoopt_8h.shtml</anchorfile>
      <anchor>ae9c02f09426e8ae55176f60f9b1836e8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_undercover.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__undercover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurUndercover</name>
      <anchorfile>heur__undercover_8h.shtml</anchorfile>
      <anchor>a2d46b93d2153054583fea5dab2da0f27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcomputeCoverUndercover</name>
      <anchorfile>heur__undercover_8h.shtml</anchorfile>
      <anchor>aa29e7b96be191137bf75e0754a1a9b6b</anchor>
      <arglist>(SCIP *scip, int *coversize, SCIP_VAR **cover, SCIP_Real timelimit, SCIP_Real memorylimit, SCIP_Real objlimit, SCIP_Bool globalbounds, SCIP_Bool onlyconvexify, SCIP_Bool coverbd, char coveringobj, SCIP_Bool *success)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_vbounds.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__vbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurVbounds</name>
      <anchorfile>heur__vbounds_8h.shtml</anchorfile>
      <anchor>a0d7289cae5cb260fe91185bc37efc079</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_veclendiving.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__veclendiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurVeclendiving</name>
      <anchorfile>heur__veclendiving_8h.shtml</anchorfile>
      <anchor>a244b3c499b28a355e18403919f0668dd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_zeroobj.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__zeroobj_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyZeroobj</name>
      <anchorfile>heur__zeroobj_8h.shtml</anchorfile>
      <anchor>af203adbb8fd520ac3499d4f8544ba34b</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Real minimprove, SCIP_Longint nnodes)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurZeroobj</name>
      <anchorfile>heur__zeroobj_8h.shtml</anchorfile>
      <anchor>abe422a2fe0b2b2b17e50925ec3e77786</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_zirounding.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>heur__zirounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurZirounding</name>
      <anchorfile>heur__zirounding_8h.shtml</anchorfile>
      <anchor>aa35b8f1c2dc826343ba3686d01654ad9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>howtoadd.dxy</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/doc/</path>
    <filename>howtoadd_8dxy</filename>
  </compound>
  <compound kind="file">
    <name>interfaces.dxy</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/doc/</path>
    <filename>interfaces_8dxy</filename>
  </compound>
  <compound kind="file">
    <name>intervalarithext.cpp</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>intervalarithext_8cpp</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="intervalarithext_8h" name="intervalarithext.h" local="yes" imported="no">nlpi/intervalarithext.h</includes>
  </compound>
  <compound kind="file">
    <name>intervalarithext.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>intervalarithext_8h</filename>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_INTERVALARITH_UNDEFFUNC</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a259e0a1a16a2adf71c034fe72df0bb83</anchor>
      <arglist>(function)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>operator+</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a1c54d76353ad3db47fb3cd53a3e44aba</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>operator-</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a15ef8d76c873b02d527afb8e07ce9fcd</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>operator-</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>afc2f84928966c76275f407518ea09c60</anchor>
      <arglist>(const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>operator*</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a9d966548f7040eaae599e3af2b165b64</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>operator/</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>abd8207f3a455c20024c0ba2287c88873</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>cos</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a2fd165ddcd66bc1c6bfb1c0242208494</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>exp</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a013a9ebc1a19afd3ef944b983675c67d</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>log</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>aabbb526d9c8ad16c6565ea88912e04b0</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>pow</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a96a9c8d3c8d817d9a162ba9a4ba0df45</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>pow</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>ac4351276802886525d6b15fc2e2da8ac</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIP_Real &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>signpow</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a1a6e6d5d579f4c5b68753e05250e29dd</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIP_Real p)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>sin</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>ac879f5928d7732578b0fb0be30d20cb4</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>square</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>afd9d202ad117d1f71f8e583feda2ea2b</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>sqrt</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a92a9f728db98c4725381e8160e4272fa</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>abs</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>a21afe0bb6fca6e2e8350ebfe49596228</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>sign</name>
      <anchorfile>intervalarithext_8h.shtml</anchorfile>
      <anchor>ae47790c3e86de14538f911af9a8dd9db</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__lpi_8h" name="type_lpi.h" local="yes" imported="no">lpi/type_lpi.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi_8h.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_clp.cpp</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__clp_8cpp</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CLP_VERSION</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a0ee1156529fc4949ac9510375ecc54dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUMINFEASBOUND</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a2fd62d75c4d7a35e2b82e2d8de9c6130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__clp_8cpp.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_cpx.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__cpx_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CPX_SUBVERSION</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a29bb0a43bd0404552a2a272ca2eef1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a87c17106a7eb32af0baa3ec076dd7b02</anchor>
      <arglist>(messagehdlr, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABORT_ZERO</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ab4db77491a6aef4d4ae9326030963918</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPX_INT_MAX</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a3c7bf5a08dbb854da26689412246e639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPX_REFACTORMAXITERS</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>abeffef0b12be236855ea95a37155a6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPX_MAGICZEROCONSTANT</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aecb702354027f565575ae77566d0d7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMINTPARAM</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a91bbe58fc774297c149f7e08a974de11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMDBLPARAM</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ac2b1b998d4ad2ba90b97c858783f1afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CPXParam</type>
      <name>SCIP_CPXPARAM</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af0dcb5d990bc73fe75d202414949d3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__cpx_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_grb.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__grb_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a87c17106a7eb32af0baa3ec076dd7b02</anchor>
      <arglist>(messagehdlr, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SVECTOR</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af2e7d05d2ba0870e8419b9ce11a70456</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRB_METHOD_DUAL</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac83a71f7ce20ef826c2fe19ded699f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRB_METHOD_PRIMAL</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aee06842200f9ea6a52cd072655bde971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRB_INT_PAR_METHOD</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a5397bab46d83535262cfd4f82ffcaf3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_SINGLEPACKETSIZE</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a61a8761942551e1cc6493516ce110ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DUALPACKETSIZE</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a95bb8b60ad68b9a3682d5a20e14c63a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRB_REFACTORMAXITERS</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af04e284c919a738abab06fecab7c74db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMINTPARAM</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a91bbe58fc774297c149f7e08a974de11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMDBLPARAM</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac2b1b998d4ad2ba90b97c858783f1afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_SINGLEPACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae7d2bc9e47996eea8779811dfab8c2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_DUALPACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>afd2fb34af6687b0159dfb63042899d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GRBParam</type>
      <name>GRBPARAM</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a193f92b4f04228b18ef2b2614e7b3e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__grb_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_msk.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__msk_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MSKCONST</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a3bbacb47eaee6da5a07e09a24e63031a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>scipmskobjsen</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a4ffda8a959d8478ff63cfa5eb4ae3fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SENSE2MOSEK</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a83144ddc2bf3095b81181be103d49155</anchor>
      <arglist>(objsen)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOSEK_CALL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5d7b4e9a27d8eae35691a4e62ecebe50</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_ABORT_FALSE</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5d02cb2567bab7e44a8cc8030aaf3c1b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_POSINF</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a12fac0c28594c5d17d380fd878379283</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NEGINF</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5c80114e75560753980d5d77727b8ea6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_PARAM_SETTING</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a411f22ac9fd8d4e38760370dd48488a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_PRINT_STAT</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aa0315e99af782010fb5bbfc57a35fb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_CHECK_DATA</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7c8072cb99d467917cf110956fb0e6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_EASY_REPRODUCE</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a11edcb5a48590b0adc6bff22884c4b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_DO_INTPNT_FEAS_CHECK</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a70fe5ec1a6d8150decc117e44c28b23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_CHECK_STATE_TOL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a21c4f1b7859a7c1d4013238815463c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOW_ERRORS</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7a4e052f8126039846d3d246b000b944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_ON_NUMERICAL_TROUBLES</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a4a7662a2657020ff50ae7803af4afa61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_ON_WARNING</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a1654a9744d660814ce0e39dc6860ef21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_MOSEK_LOG</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>acba69a85fd6ca8cbe63bd5e4a99870c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_MOSEK_SUMMARY</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>afd3a1dad41dc52d17d19a53a2586e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_NO_MAXITER</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7bdc2388fbf3621bb28558668b6e3113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_SILENCE</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>abd5b96bd381a7762ae4321f236389b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SETBACK_LIMIT</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a3dc920d5541482846ea37e7bf1394f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CONTROLS_PRICING</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8e23854969a5bca305b210b5eb89ff7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CONTROLS_TOLERANCES</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>adcad0edf3a8445f9e8a9f49d3f8452c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRONGBRANCH_PRICING</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ac2ab57241847b91b20ab708b95d75645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUPRESS_NAME_ERROR</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a33631414f370d7cc4b49a53d5a670c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DUAL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a96f6d4e603539cf12e2580b507c99eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_PRIMAL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae14be2bda28ba76080588c202b30d4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_INTPNT</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a2a4f3b23e183eeb9bb5d4d8860a5bae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_ABOVE</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aadf4f3e35492add525d672357caef22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEGEN_LEVEL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6f9f4f7171a475ff960048cc0eb1eb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALWAYS_SOLVE_PRIMAL</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aba99366ab4fefbe2c5a2bdc5288ffcec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6e51048caef6f3e17c5c862bcac7a6e0</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a67508c246cf3a7cc6c0b54ce62995625</anchor>
      <arglist>(SCIP_LPI *lpi, int row, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__msk_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_none.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__none_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LPINAME</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a58be1127a66dd66fd311c112b7c469bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LPIINFINITY</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ac6db33602b64d29282acc04b4733b868</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__none_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_qso.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__qso_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_TESTG</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a85b5308f5dd4c511a38f2e252ed5e624</anchor>
      <arglist>(A, B,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_ERROR</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aee56c3aec84b846aa922e9f123c83db3</anchor>
      <arglist>(A,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_RETURN</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ac428b82f03cafa4bb0d80bee8a5beef4</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_CONDRET</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a9fd95784f0b954994d7c1cec0d8c6d6a</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__qso_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_spx.cpp</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__spx_8cpp</filename>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>AUTOPRICING_ITERSWITCH</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a676e311311c95fd99e0259f27728226a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRONGBRANCH_RESTOREBASIS</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a027fe53ddc0e5b6b26b39e88b327ba61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_SUBVERSION</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ab25fd30369d5bbbe99b863be700fed63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WITH_BOUNDFLIPPING</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac9b507482823da9697d139b218be1ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_VERBLEVEL</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a299075656fcbf5bf26a5f170984de9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a0cd1834683d111cf9e56cc67f9e330c2</anchor>
      <arglist>(messagehdlr, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY_ABORT</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>adf442243d6e29d4324dfcf9f30061013</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>afe0e8dc7b2954cbaf84a2f92d37bdd74</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac3dec1f841744a96c8ae0a6749b5f99c</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aa535703a4b6b3ae2bce4b78d90943a07</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__spx_8cpp.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_spx2.cpp</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__spx2_8cpp</filename>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>STRONGBRANCH_RESTOREBASIS</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a027fe53ddc0e5b6b26b39e88b327ba61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_SOPLEX_PARAM</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ab1d09c1e33a15e2de36eaeb2aeb8bf28</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_SUBVERSION</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ab25fd30369d5bbbe99b863be700fed63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_VERBLEVEL</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a299075656fcbf5bf26a5f170984de9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a0cd1834683d111cf9e56cc67f9e330c2</anchor>
      <arglist>(messagehdlr, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY_ABORT</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>adf442243d6e29d4324dfcf9f30061013</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>afe0e8dc7b2954cbaf84a2f92d37bdd74</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ac3dec1f841744a96c8ae0a6749b5f99c</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aa535703a4b6b3ae2bce4b78d90943a07</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a9315c551e92d2caa54d42750f1f048cb</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__spx2_8cpp.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_xprs.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>lpi__xprs_8c</filename>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>XPRS_LPQUICKPRESOLVE</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a53b6890741ebbea8e7a77facedaa7c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPRS_LP_OPTIMAL_SCALEDINFEAS</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a78ff2d2dfbf39a02de822c512c55ba38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a87c17106a7eb32af0baa3ec076dd7b02</anchor>
      <arglist>(messagehdlr, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABORT_ZERO</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a7e29fdebd8aa0e92b52c4515f305d995</anchor>
      <arglist>(messagehdlr, retval, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae522c0e79b2f2c7d185e6b6cafec1a3d</anchor>
      <arglist>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae0b96cab8a15eba2b153ea9fbb681f2d</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsense)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a7ad90f90349349392d540c69332314ad</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjsen</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aee46b15c0fa3d6d86be4e3bf741f34b7</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealSolQuality</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a83ddb586c09a37eea2e411f1271a32f6</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a6e51048caef6f3e17c5c862bcac7a6e0</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a9dda3c2147cbb647cfb0b5d198407525</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aa516aed02ad9b303b0d51eb0c7a66f5e</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a015f424e442e74e4526ca62bdab54de1</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClearState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a1d56087500813e24687787cb90da5d93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNorms</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a868706bb40dc3fdeb76e81c56c1c4d31</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetNorms</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ad619ad2a4e65223449f5ab635985b70b</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeNorms</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a640477b756ddb94827c1a4e5e3721d38</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__xprs_8c.shtml</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>message_default.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>message__default_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__message_8h" name="type_message.h" local="yes" imported="no">scip/type_message.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateMessagehdlrDefault</name>
      <anchorfile>message__default_8h.shtml</anchorfile>
      <anchor>af0a32466f8e4f5eeb959255171df341d</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, SCIP_Bool bufferedoutput, const char *filename, SCIP_Bool quiet)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nlpi_ipopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>nlpi__ipopt_8h</filename>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlpSolverIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>a47fd0556bcabf47b634e428d2b9bd784</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverNameIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>ae21683ae568166cb905c5d12edf61695</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverDescIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>aa80725c6aad875e2676e73ddc8a7eb58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIpoptAvailableIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>ade74e40bc07334d652c4838a79a721c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetIpoptApplicationPointerIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>af49296b500550dc219d4ca1996c2358b</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetNlpiOracleIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>a0462ad0a5c02962e08454de050415fe4</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsetModifiedDefaultSettingsIpopt</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>a91c9ec8253b45c7e804dcca5a3fd509e</anchor>
      <arglist>(SCIP_NLPI *nlpi, const char *optionsstring)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>LapackDsyev</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>a77233f4a5b0792b207842fdc86e7dc44</anchor>
      <arglist>(SCIP_Bool computeeigenvectors, int N, SCIP_Real *a, SCIP_Real *w)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveLinearProb</name>
      <anchorfile>nlpi__ipopt_8h.shtml</anchorfile>
      <anchor>aea735d47a72c881657984a238da61841</anchor>
      <arglist>(int N, SCIP_Real **A, SCIP_Real *b, SCIP_Real *x, SCIP_Bool *success)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_bfs.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__bfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselBfs</name>
      <anchorfile>nodesel__bfs_8h.shtml</anchorfile>
      <anchor>aff9135930a9455940d30703aa412e2f6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_breadthfirst.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__breadthfirst_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselBreadthfirst</name>
      <anchorfile>nodesel__breadthfirst_8h.shtml</anchorfile>
      <anchor>a09bb8f9c2773d9411c028b4563573d1b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_dfs.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__dfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselDfs</name>
      <anchorfile>nodesel__dfs_8h.shtml</anchorfile>
      <anchor>a1da85e975092847abb095859bc5f9b43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_estimate.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__estimate_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselEstimate</name>
      <anchorfile>nodesel__estimate_8h.shtml</anchorfile>
      <anchor>a41df8cebd6b37634851b27c4e9afa6ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_hybridestim.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__hybridestim_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselHybridestim</name>
      <anchorfile>nodesel__hybridestim_8h.shtml</anchorfile>
      <anchor>af69387a465ea4d66b62fd8283138e77e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_restartdfs.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__restartdfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8h.shtml</anchorfile>
      <anchor>a91a31460d586f75b3f960e9ed7622290</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_uct.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>nodesel__uct_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselUct</name>
      <anchorfile>nodesel__uct_8h.shtml</anchorfile>
      <anchor>a00ec6a173c17192db6343f0138087108</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objbranchrule.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objbranchrule_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjBranchrule</name>
      <anchorfile>objbranchrule_8h.shtml</anchorfile>
      <anchor>a49b8d8910ae8e9896a830041ca3e046a</anchor>
      <arglist>(SCIP *scip, scip::ObjBranchrule *objbranchrule, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPfindObjBranchrule</name>
      <anchorfile>objbranchrule_8h.shtml</anchorfile>
      <anchor>a1af86d66171d2c597153fe69ca66ed4f</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPgetObjBranchrule</name>
      <anchorfile>objbranchrule_8h.shtml</anchorfile>
      <anchor>ad0e4efbd88ad7c10a2e51c6d4654e7e3</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objcloneable.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objcloneable_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__objcloneable_8h" name="type_objcloneable.h" local="yes" imported="no">objscip/type_objcloneable.h</includes>
  </compound>
  <compound kind="file">
    <name>objconshdlr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objconshdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objprobcloneable_8h" name="objprobcloneable.h" local="yes" imported="no">objscip/objprobcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjConshdlr</name>
      <anchorfile>objconshdlr_8h.shtml</anchorfile>
      <anchor>ab1d721734a93a449c1c4d50e0e285824</anchor>
      <arglist>(SCIP *scip, scip::ObjConshdlr *objconshdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPfindObjConshdlr</name>
      <anchorfile>objconshdlr_8h.shtml</anchorfile>
      <anchor>aad2f76b564408a5418a355df34644ff4</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPgetObjConshdlr</name>
      <anchorfile>objconshdlr_8h.shtml</anchorfile>
      <anchor>ab5fc1b1c7ad83e2bf42904d70cea432d</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdialog.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objdialog_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDialog</name>
      <anchorfile>objdialog_8h.shtml</anchorfile>
      <anchor>a6f316314b87f8da74c9717c559190b73</anchor>
      <arglist>(SCIP *scip, scip::ObjDialog *objdialog, SCIP_Bool deleteobject)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdisp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objdisp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDisp</name>
      <anchorfile>objdisp_8h.shtml</anchorfile>
      <anchor>a3e76b624704cbc16e4afa074d4c7f14b</anchor>
      <arglist>(SCIP *scip, scip::ObjDisp *objdisp, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPfindObjDisp</name>
      <anchorfile>objdisp_8h.shtml</anchorfile>
      <anchor>a62aae37638df35bffe340fb523dff6a1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPgetObjDisp</name>
      <anchorfile>objdisp_8h.shtml</anchorfile>
      <anchor>a592a269aced825020fd852a5629454f4</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objeventhdlr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objeventhdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.shtml</anchorfile>
      <anchor>acc6a8eb5be5161942f87172c1a81ca40</anchor>
      <arglist>(SCIP *scip, scip::ObjEventhdlr *objeventhdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPfindObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.shtml</anchorfile>
      <anchor>af5b930ba613debdc60b4e740296b08d8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPgetObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.shtml</anchorfile>
      <anchor>a3f6b1a35f35e58be2aa3a8a190294f14</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objheur.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objheur_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjHeur</name>
      <anchorfile>objheur_8h.shtml</anchorfile>
      <anchor>a99c80d4853bbce089f58e440e539a0a5</anchor>
      <arglist>(SCIP *scip, scip::ObjHeur *objheur, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPfindObjHeur</name>
      <anchorfile>objheur_8h.shtml</anchorfile>
      <anchor>a5e27bd2d19c03bd87c20dbe61c6a812a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPgetObjHeur</name>
      <anchorfile>objheur_8h.shtml</anchorfile>
      <anchor>af57515f8a997fb1846b5236ef90ff230</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objmessagehdlr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objmessagehdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8h.shtml</anchorfile>
      <anchor>a370817589b9d9746f9526971f9ce406d</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, scip::ObjMessagehdlr *objmessagehdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjMessagehdlr *</type>
      <name>SCIPgetObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8h.shtml</anchorfile>
      <anchor>abe21594bc3a79b7fd67c6eb1a35ce5f6</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objnodesel.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objnodesel_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjNodesel</name>
      <anchorfile>objnodesel_8h.shtml</anchorfile>
      <anchor>a2544751321a056a87467f361e72ae0b1</anchor>
      <arglist>(SCIP *scip, scip::ObjNodesel *objnodesel, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPfindObjNodesel</name>
      <anchorfile>objnodesel_8h.shtml</anchorfile>
      <anchor>acd7ffbca01a1861aeaa2bb128507ce52</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPgetObjNodesel</name>
      <anchorfile>objnodesel_8h.shtml</anchorfile>
      <anchor>ae80ffc9d111d2acf79c8c775894ddbfc</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpresol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objpresol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPresol</name>
      <anchorfile>objpresol_8h.shtml</anchorfile>
      <anchor>a3824c5e207f9b85c91e98a7b8ebe1e85</anchor>
      <arglist>(SCIP *scip, scip::ObjPresol *objpresol, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPfindObjPresol</name>
      <anchorfile>objpresol_8h.shtml</anchorfile>
      <anchor>a5b804d0c288c1980163998c081dfedf3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPgetObjPresol</name>
      <anchorfile>objpresol_8h.shtml</anchorfile>
      <anchor>a8a21e1fe03d32d3cbb54aa36521d2899</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpricer.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objpricer_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objprobcloneable_8h" name="objprobcloneable.h" local="yes" imported="no">objscip/objprobcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPricer</name>
      <anchorfile>objpricer_8h.shtml</anchorfile>
      <anchor>a88f76e0e13837e3eac2ce52f257e1500</anchor>
      <arglist>(SCIP *scip, scip::ObjPricer *objpricer, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPfindObjPricer</name>
      <anchorfile>objpricer_8h.shtml</anchorfile>
      <anchor>a8d8af9bec638d02d2fca9e840c312537</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPgetObjPricer</name>
      <anchorfile>objpricer_8h.shtml</anchorfile>
      <anchor>a9ecf4582097b9448a7e6369f5036c98d</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprobcloneable.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objprobcloneable_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__objprobcloneable_8h" name="type_objprobcloneable.h" local="yes" imported="no">objscip/type_objprobcloneable.h</includes>
  </compound>
  <compound kind="file">
    <name>objprobdata.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objprobdata_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjProb</name>
      <anchorfile>objprobdata_8h.shtml</anchorfile>
      <anchor>a51de006b2bd40f54b6948aaa7fe0aa75</anchor>
      <arglist>(SCIP *scip, const char *name, scip::ObjProbData *objprobdata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProbData *</type>
      <name>SCIPgetObjProbData</name>
      <anchorfile>objprobdata_8h.shtml</anchorfile>
      <anchor>a0ad43a5d2d4e403b9fe9b901f1d14950</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprop.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objprop_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjProp</name>
      <anchorfile>objprop_8h.shtml</anchorfile>
      <anchor>a32342d0b94105f60d450af54edb11fa0</anchor>
      <arglist>(SCIP *scip, scip::ObjProp *objprop, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPfindObjProp</name>
      <anchorfile>objprop_8h.shtml</anchorfile>
      <anchor>a31389de74903c818c6be79fe3b799f75</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPgetObjProp</name>
      <anchorfile>objprop_8h.shtml</anchorfile>
      <anchor>ad65292c7ba745b785bbe52d696490619</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objreader.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objreader_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjReader</name>
      <anchorfile>objreader_8h.shtml</anchorfile>
      <anchor>a054481946869034ab8701f4bfc58fbbe</anchor>
      <arglist>(SCIP *scip, scip::ObjReader *objreader, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPfindObjReader</name>
      <anchorfile>objreader_8h.shtml</anchorfile>
      <anchor>aa518292577a6895eac762364317ac287</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPgetObjReader</name>
      <anchorfile>objreader_8h.shtml</anchorfile>
      <anchor>a5a6b9915e6d4945c0a7d5ae6c3b3b2bd</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objrelax.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objrelax_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjRelax</name>
      <anchorfile>objrelax_8h.shtml</anchorfile>
      <anchor>a143fe864af1ce2f4181979071d239e68</anchor>
      <arglist>(SCIP *scip, scip::ObjRelax *objrelax, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPfindObjRelax</name>
      <anchorfile>objrelax_8h.shtml</anchorfile>
      <anchor>a6c15e6d30646bd160db22b74486c1358</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPgetObjRelax</name>
      <anchorfile>objrelax_8h.shtml</anchorfile>
      <anchor>ae23caa1a5846f6ce295d4ed0a02b977b</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objscip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objscip_8h</filename>
    <includes id="objbranchrule_8h" name="objbranchrule.h" local="yes" imported="no">objscip/objbranchrule.h</includes>
    <includes id="objconshdlr_8h" name="objconshdlr.h" local="yes" imported="no">objscip/objconshdlr.h</includes>
    <includes id="objdialog_8h" name="objdialog.h" local="yes" imported="no">objscip/objdialog.h</includes>
    <includes id="objdisp_8h" name="objdisp.h" local="yes" imported="no">objscip/objdisp.h</includes>
    <includes id="objeventhdlr_8h" name="objeventhdlr.h" local="yes" imported="no">objscip/objeventhdlr.h</includes>
    <includes id="objheur_8h" name="objheur.h" local="yes" imported="no">objscip/objheur.h</includes>
    <includes id="objmessagehdlr_8h" name="objmessagehdlr.h" local="yes" imported="no">objscip/objmessagehdlr.h</includes>
    <includes id="objnodesel_8h" name="objnodesel.h" local="yes" imported="no">objscip/objnodesel.h</includes>
    <includes id="objpresol_8h" name="objpresol.h" local="yes" imported="no">objscip/objpresol.h</includes>
    <includes id="objpricer_8h" name="objpricer.h" local="yes" imported="no">objscip/objpricer.h</includes>
    <includes id="objprobdata_8h" name="objprobdata.h" local="yes" imported="no">objscip/objprobdata.h</includes>
    <includes id="objprop_8h" name="objprop.h" local="yes" imported="no">objscip/objprop.h</includes>
    <includes id="objreader_8h" name="objreader.h" local="yes" imported="no">objscip/objreader.h</includes>
    <includes id="objrelax_8h" name="objrelax.h" local="yes" imported="no">objscip/objrelax.h</includes>
    <includes id="objsepa_8h" name="objsepa.h" local="yes" imported="no">objscip/objsepa.h</includes>
    <includes id="objvardata_8h" name="objvardata.h" local="yes" imported="no">objscip/objvardata.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
  </compound>
  <compound kind="file">
    <name>objscipdefplugins.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objscipdefplugins_8h</filename>
    <includes id="objscip_8h" name="objscip.h" local="yes" imported="no">objscip/objscip.h</includes>
    <includes id="scipdefplugins_8h" name="scipdefplugins.h" local="yes" imported="no">scip/scipdefplugins.h</includes>
  </compound>
  <compound kind="file">
    <name>objsepa.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objsepa_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjSepa</name>
      <anchorfile>objsepa_8h.shtml</anchorfile>
      <anchor>a80635c0b2b52a6cb0adb565961aa7c9d</anchor>
      <arglist>(SCIP *scip, scip::ObjSepa *objsepa, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPfindObjSepa</name>
      <anchorfile>objsepa_8h.shtml</anchorfile>
      <anchor>a51f1cf2dfa2c17b69486f424142ec8e1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPgetObjSepa</name>
      <anchorfile>objsepa_8h.shtml</anchorfile>
      <anchor>a73741e37ad81bf7649e91ed5e6923f8f</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objvardata.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>objvardata_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjVar</name>
      <anchorfile>objvardata_8h.shtml</anchorfile>
      <anchor>a8c9be3e5b510487d59fdc065464e401b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, scip::ObjVardata *objvardata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjVardata *</type>
      <name>SCIPgetObjVardata</name>
      <anchorfile>objvardata_8h.shtml</anchorfile>
      <anchor>ad9040be857586487508bb5740f493e19</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_boundshift.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__boundshift_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolBoundshift</name>
      <anchorfile>presol__boundshift_8h.shtml</anchorfile>
      <anchor>afa99ac24217cd1da1d17d7593a69d89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_components.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__components_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolComponents</name>
      <anchorfile>presol__components_8h.shtml</anchorfile>
      <anchor>a275577b7cb3c86187c122d0ce5935056</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_convertinttobin.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__convertinttobin_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolConvertinttobin</name>
      <anchorfile>presol__convertinttobin_8h.shtml</anchorfile>
      <anchor>ae8032ae54eb12de38f3bd50a3686bf37</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_domcol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__domcol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolDomcol</name>
      <anchorfile>presol__domcol_8h.shtml</anchorfile>
      <anchor>aa035b2447b6da573bd6f63d8a59fc384</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_dualagg.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__dualagg_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolDualagg</name>
      <anchorfile>presol__dualagg_8h.shtml</anchorfile>
      <anchor>a85d6b7ee30b8df80c8ef3296f8a591c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_dualinfer.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__dualinfer_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolDualinfer</name>
      <anchorfile>presol__dualinfer_8h.shtml</anchorfile>
      <anchor>ab2fbde209335b9ed7f947b38ba805317</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_gateextraction.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__gateextraction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolGateextraction</name>
      <anchorfile>presol__gateextraction_8h.shtml</anchorfile>
      <anchor>a703e5c7745dfd3dcc631aab58301c898</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_implfree.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__implfree_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolImplfree</name>
      <anchorfile>presol__implfree_8h.shtml</anchorfile>
      <anchor>a98306e89a956fac1bdebb7dc3abf2a28</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_implics.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__implics_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolImplics</name>
      <anchorfile>presol__implics_8h.shtml</anchorfile>
      <anchor>a643f7365c0a70f2e8026f9f18144bed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_inttobinary.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__inttobinary_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolInttobinary</name>
      <anchorfile>presol__inttobinary_8h.shtml</anchorfile>
      <anchor>a8f2ce50350284392a51a479d466f7291</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_redvub.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__redvub_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolRedvub</name>
      <anchorfile>presol__redvub_8h.shtml</anchorfile>
      <anchor>acb36109217e452a0da4c9627242265c4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_stuffing.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__stuffing_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolStuffing</name>
      <anchorfile>presol__stuffing_8h.shtml</anchorfile>
      <anchor>a1d4548edd89f9c69ba62f8f3ebcf7cef</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_trivial.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__trivial_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolTrivial</name>
      <anchorfile>presol__trivial_8h.shtml</anchorfile>
      <anchor>a3bb715e49acef67d534513924c7238a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_tworowbnd.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>presol__tworowbnd_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolTworowbnd</name>
      <anchorfile>presol__tworowbnd_8h.shtml</anchorfile>
      <anchor>abe30c9151fdc4dee1e3001816622df3a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_dualfix.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__dualfix_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropDualfix</name>
      <anchorfile>prop__dualfix_8h.shtml</anchorfile>
      <anchor>a03325f0307593a4ecef434d59d7db67d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_genvbounds.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__genvbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgenVBoundAdd</name>
      <anchorfile>prop__genvbounds_8h.shtml</anchorfile>
      <anchor>a9894cece9740a44a557cbc224e38987c</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *genvboundprop, SCIP_VAR **vars, SCIP_VAR *var, SCIP_Real *coefs, int ncoefs, SCIP_Real coefprimalbound, SCIP_Real constant, SCIP_BOUNDTYPE boundtype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropGenvbounds</name>
      <anchorfile>prop__genvbounds_8h.shtml</anchorfile>
      <anchor>a1fd40d9e150a6d977b8a130e39304563</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_obbt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__obbt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropObbt</name>
      <anchorfile>prop__obbt_8h.shtml</anchorfile>
      <anchor>aac30a64adecc4e5a9cefece894530f0d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_probing.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__probing_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropProbing</name>
      <anchorfile>prop__probing_8h.shtml</anchorfile>
      <anchor>a4ccfda990e40f085678f57b5fc422ec8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyProbingVar</name>
      <anchorfile>prop__probing_8h.shtml</anchorfile>
      <anchor>aa47e514b02eb90f8a03b2f3c74787f16</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int probingpos, SCIP_BOUNDTYPE boundtype, SCIP_Real bound, int maxproprounds, SCIP_Real *impllbs, SCIP_Real *implubs, SCIP_Real *proplbs, SCIP_Real *propubs, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeDeductionsProbing</name>
      <anchorfile>prop__probing_8h.shtml</anchorfile>
      <anchor>ab871fb0c69ce79b81c48f5a1383f9087</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *probingvar, SCIP_Real leftub, SCIP_Real rightlb, int nvars, SCIP_VAR **vars, SCIP_Real *leftimpllbs, SCIP_Real *leftimplubs, SCIP_Real *leftproplbs, SCIP_Real *leftpropubs, SCIP_Real *rightimpllbs, SCIP_Real *rightimplubs, SCIP_Real *rightproplbs, SCIP_Real *rightpropubs, int *nfixedvars, int *naggrvars, int *nimplications, int *nchgbds, SCIP_Bool *cutoff)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_pseudoobj.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__pseudoobj_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropPseudoobj</name>
      <anchorfile>prop__pseudoobj_8h.shtml</anchorfile>
      <anchor>ad2270b1d3d9470588eed66d0c2370cf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateCutoffboundVar</name>
      <anchorfile>prop__pseudoobj_8h.shtml</anchorfile>
      <anchor>a8dc11418b249e3a4b736e889241cbc4d</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_VAR *var, SCIP_Real cutoffbound, SCIP_Real pseudoobjval, SCIP_Bool *tightened)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_redcost.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__redcost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropRedcost</name>
      <anchorfile>prop__redcost_8h.shtml</anchorfile>
      <anchor>a0424451c6c7fbce88a9fa227d756bca8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_rootredcost.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__rootredcost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropRootredcost</name>
      <anchorfile>prop__rootredcost_8h.shtml</anchorfile>
      <anchor>ae3e56265adc56f60b88c8fbffd689bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_vbounds.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>prop__vbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropVbounds</name>
      <anchorfile>prop__vbounds_8h.shtml</anchorfile>
      <anchor>a4b09503d4da9ae3c4b0de53e9b96d918</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPropagatedVbounds</name>
      <anchorfile>prop__vbounds_8h.shtml</anchorfile>
      <anchor>a093dd0feb2891c368ed35a017635de35</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecPropVbounds</name>
      <anchorfile>prop__vbounds_8h.shtml</anchorfile>
      <anchor>a880ada215b1e5801e313fe97e0a725c2</anchor>
      <arglist>(SCIP *scip, SCIP_Bool force, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_branch.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__branch_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__branch_8h" name="type_branch.h" local="yes" imported="no">scip/type_branch.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a51467dda0164a7ce5fa99811dfdbd092</anchor>
      <arglist>(SCIPbranchruleComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>ad2bd8ae3d00eb77cb1041e1de2ba3d47</anchor>
      <arglist>(SCIPbranchruleCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULEDATA *</type>
      <name>SCIPbranchruleGetData</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a1d1acdd018c5e82de3ef86059362a54b</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbranchruleSetData</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>abbd7bf48bdd1e544d12104950b100bf9</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule, SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPbranchruleGetName</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a867b1582bb5edd9210eba06a78891481</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPbranchruleGetDesc</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a304d4a0778fa9d6b0bcd622fccb4032d</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbranchruleGetPriority</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a96b82084e2b2a50019e5362a8555c0c4</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbranchruleGetMaxdepth</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a2d09f1e7ce8a5fee2d5e03df93257711</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbranchruleGetMaxbounddist</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>aa8db0457258fc68301149b273a3f1db9</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbranchruleGetSetupTime</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a9f7567f3d1a8d6a08acd5040b821c93f</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbranchruleGetTime</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a6d5ae35942480e7a8ccc27ea62ac6e36</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNLPCalls</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a57d161ea95484b1b24faaadd1398f047</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNExternCalls</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>ab7e5b0f9f396e8dd286b8106c8abefb2</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNPseudoCalls</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a1357642831295ff65127e1cde89f6b15</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNCutoffs</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>ab0ee757329f55b319f070acf3dcd5eac</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNCutsFound</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>abf0a6eecd5ef04b248b3cc779ebfdac0</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNConssFound</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a46dda31322521a4899b7e283702440ee</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNDomredsFound</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a0b042ef26904df16452d98fff283ef30</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNChildren</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a6791d8dcd0d7a3756bc3deb80121c7b8</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbranchruleIsInitialized</name>
      <anchorfile>pub__branch_8h.shtml</anchorfile>
      <anchor>a03bcb9057685b9e9c4a8cc8df4b2d748</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_compr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__compr_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__compr_8h" name="type_compr.h" local="yes" imported="no">scip/type_compr.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a6e80261b90fc87024a21856021aa2e22</anchor>
      <arglist>(SCIPcomprComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a9d7d8ade987b596730d589bd8e24b1fa</anchor>
      <arglist>(SCIPcomprCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COMPRDATA *</type>
      <name>SCIPcomprGetData</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>abcf69746dbf0df77dcce1250ae025ecc</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPcomprSetData</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a5fae211501d738ce8970d6187c456312</anchor>
      <arglist>(SCIP_COMPR *compr, SCIP_COMPRDATA *comprdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPcomprGetName</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>afe5b048b1a5537978c6f0d4a804ddd09</anchor>
      <arglist>(SCIP_COMPR *heur)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPcomprGetDesc</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>ad4c6d62cc9aad0bf27a596b5c403faca</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcomprGetPriority</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a4a4dacdff0000c52aed2cfbcdbebe0f1</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcomprGetMinNodes</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>af4ba900dd14e6b339699ef6b4748e880</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcomprGetNCalls</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a6d705155d33ddf08d46619ea32a1e46c</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcomprGetNFound</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>a8ff2a1de727a66e9a81c11b530a96a11</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcomprIsInitialized</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>ae727fc082f7246f5a535d9cfc75933dc</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomprGetSetupTime</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>aaabc2153b3721e831b97bc710b722c35</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomprGetTime</name>
      <anchorfile>pub__compr_8h.shtml</anchorfile>
      <anchor>ab2c44a04a305b9e9373f7c24fba9bc16</anchor>
      <arglist>(SCIP_COMPR *compr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_conflict.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__conflict_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__conflict_8h" name="type_conflict.h" local="yes" imported="no">scip/type_conflict.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a2ddbfa2b5a6b73e1b116392745783735</anchor>
      <arglist>(SCIPconflicthdlrComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a8159e89939e9bd52f841f7b17bd73b31</anchor>
      <arglist>(SCIPconflicthdlrCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLRDATA *</type>
      <name>SCIPconflicthdlrGetData</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a80029a24ab0d3f29173c8d773f585805</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconflicthdlrSetData</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a952210a82cef8b36201c0e54e73cff4d</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr, SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconflicthdlrGetName</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a8d6d52b72055153a672a85bdb9c77d62</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconflicthdlrGetDesc</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>ab2df080d86ed46be164966ca252c8818</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconflicthdlrGetPriority</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>a335a1bc28fc06285fee89ca56fc0ebea</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconflicthdlrIsInitialized</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>ac17b7df5003c45e42fec1678082e4858</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconflicthdlrGetSetupTime</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>ada77d554c304427a9cbfcf5c017d85ae</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconflicthdlrGetTime</name>
      <anchorfile>pub__conflict_8h.shtml</anchorfile>
      <anchor>ac4ff23a2eec827a0294e437afa0a38ed</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_cons.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__cons_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8a21ab214053df193d4ad8e051a27d33</anchor>
      <arglist>(SCIPconshdlrCompSepa)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad0c4f05cec5a4f3eb007d434ecba84e6</anchor>
      <arglist>(SCIPconshdlrCompEnfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a1e88ce36888a274998f3617e33904bbc</anchor>
      <arglist>(SCIPconshdlrCompCheck)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconshdlrGetName</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a824604f44b687230945833c7c1da3dc1</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconshdlrGetDesc</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad41462cc28040f243a136fb53b5ea7cb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLRDATA *</type>
      <name>SCIPconshdlrGetData</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ab9d92094900d984f602e9f3677ec6b6c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetData</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a08f8626d002982b7ac7f76ab6064b9b3</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetSepa</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a53919e778209efc2b12dbbbffc67b913</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSSEPALP((*conssepalp)), SCIP_DECL_CONSSEPASOL((*conssepasol)), int sepafreq, int sepapriority, SCIP_Bool delaysepa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetProp</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a31ab21cc4b018fdc41c30805c39863c9</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSPROP((*consprop)), int propfreq, SCIP_Bool delayprop, SCIP_PROPTIMING timingmask)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPconshdlrGetConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>af0cc6571e2fe52789e56044a59a436f3</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPconshdlrGetEnfoConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ace9f25e0149815eae4e056bb16cf068c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPconshdlrGetCheckConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ae24a8b65477a66ff63bf9881cafaf93f</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a78089729c20937b23026f7a3cf7016db</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNEnfoConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a9e65d489b0c60f033ddb6f27ea6e28c5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNCheckConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a01386211ef9b1f8bc9927dd635d7b9f0</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNActiveConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad610bfb6d34ee998835d8b9bbbb9cf8c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNEnabledConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a7df3fd402b8711ea06e2e14e1301f993</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetSetupTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aeec7274e5883f2c8b4bcd827ecb36a63</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetPresolTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a23d02e6beb2094a6b9607c86e330aff4</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetSepaTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>afa39e4aa1da53533eae8bbd8af0bf9b6</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetEnfoLPTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a3a0220cbc0c922b4c824fc02af9d9056</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetEnfoPSTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a71f122e94d029f05e8a633cb12aaff6b</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetPropTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a6eb475c8423ad26172f2640cf3a9c0d8</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetStrongBranchPropTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a5b9d22a313fc9e7a11705a12be8f9b98</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetCheckTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a15fac15f279a0cfb09e51c5ee1e037c0</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetRespropTime</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>afc496d54fc866e1a8c2cccd41f122ec9</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNSepaCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a889f25db97a810cf791a602bf7cd795c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNEnfoLPCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>adacead9b0df3dd3a3270818c24d6e639</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNEnfoPSCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a97c52c2029b1e8b7203a42c7df2f8c85</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNPropCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>adab894345b426192997ba78d31ba423b</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCheckCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a20611ff42d5c80a6be0594ba84bdf3cc</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNRespropCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aef58ba50e9b86738a60c6e84359fe87d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCutoffs</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a7879c5d4665202a1623875e4270b605c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCutsFound</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a5ec9421404578473470043fb4b31535d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCutsApplied</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a45bbdc9029a252dc65c85de5f176d285</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNConssFound</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad4a84ee871e66faa9544129296ea6101</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNDomredsFound</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a3f104bde267ff8125cccd52407c6bf16</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNChildren</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8bd1c94d2a5164e065190638433d4994</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetMaxNActiveConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a13ff89cfe627ba18ac22775ff04d37c5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetStartNActiveConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aae02ae2a1b7b9761ae928b8532fc4407</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNFixedVars</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a33898ed9feb392c5323a9635d1af0265</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNAggrVars</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a94d14c1f7e7c2e4c5d4b852c7ad2395d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgVarTypes</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>afb975ee320a98bb5f2d3d891e57abcd8</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgBds</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ac1f9cf438f419f14bff777a9d4fabca1</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNAddHoles</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a9a0bfab3f71d49938c75b84d103de9a0</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNDelConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a88fb50a988e39daff7da3b1e12958afb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNAddConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ab8beefc0671f58b1cdd3c7c293e99f33</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNUpgdConss</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aa6a274ce42b00b4fdc22900daf8521bb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgCoefs</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a46450ef9764c3208af3c98417ca3d51e</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgSides</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a2391e57b82a421700ab05cfe9df6c78a</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNPresolCalls</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a3dae97ad0c20b9ac8ac7d358173f4349</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetSepaPriority</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a42d46bdbed068cdfba8fe5e908a8c2ea</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetEnfoPriority</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aeb8209bcaa765e524a475f3876865624</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetCheckPriority</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad711182b4d05b1586088506552e74579</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetSepaFreq</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ad90f28a4a6f1d365eca294a26711d9ce</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetPropFreq</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a763a4a1badc627e807dd4bdd979bd600</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetEagerFreq</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a2927a7bc598ad0999a7b6e414f517873</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrNeedsCons</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a9223f42551969b50f951cdff72abb8ee</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrDoesPresolve</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a3056443480ec0686ab02056a31755c71</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsSeparationDelayed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a801c95e1171ac24cba10f0aef69e4316</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsPropagationDelayed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a69d247cae177ff8e2809e2fbc4a1d7a5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasLPSeparationDelayed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8a96a07282f40fa374e8c51e4d4cfd95</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasSolSeparationDelayed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a1a00c691a1de3d804ab8ea918d8246be</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasPropagationDelayed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ab628efb1c8e990e90110189d7876932d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsInitialized</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aa18de49e2830177f7f3becd5e72b2add</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsClonable</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>afa4bde8c38ab00b0cc1bc84c83b30876</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROPTIMING</type>
      <name>SCIPconshdlrGetPropTiming</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a199cb45c1d3f7a480428e1860ac997de</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetPropTiming</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8db1ffc3e7a6b6e326e80a88a3c1a675</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_PROPTIMING proptiming)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOLTIMING</type>
      <name>SCIPconshdlrGetPresolTiming</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a36833ff08a5f9678c70fcab5d6e09e6e</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetPresolTiming</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a4c8954ce4dfe63227c6eff9277d796fe</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_PRESOLTIMING presoltiming)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconsGetName</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>af970144cfd0dcbfc2c876ad0ee62cc1c</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetPos</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a1c2f15d2c7f87079b2d08ada27471837</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIPconsGetHdlr</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>af67ca41e623b91b7a0a656dedbce12ef</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSDATA *</type>
      <name>SCIPconsGetData</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aff3396a6d8f4a6517d35021142093dfb</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNUses</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a97d7e7b2f14d3d9909335f48205dc3e8</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetActiveDepth</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a2b162acf04d82acd438c13d9487e1078</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetValidDepth</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a5803f4679a1b85236aa9100b871b5509</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsActive</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8d003272514fb88ff433a01f0ef9729a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsEnabled</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a9b22f631834598b8bd5b822490e0e9b1</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsSeparationEnabled</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aa6b386f7652c3f31c180cc2c659e7273</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsPropagationEnabled</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a3352bb8501b69f7e13d96c1c76a0b73c</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsDeleted</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a650f1dec189da590ea0b79f8383b04fb</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsObsolete</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ada62e4b9082a9fcb3647c493d8c355ac</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconsGetAge</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a20c3a9c21a0eb3cda433cbe6e547e7fc</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsInitial</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a34ab728deb645a518189f92942bcff10</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsSeparated</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>af29eb07173441fe42bbc5ffb63644b0a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsEnforced</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a7ff1cb55ce719bd1375ad7013bc79e06</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsChecked</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a6085288ebb61c8641f7492f02f79adc5</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsMarkedPropagate</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a54273e6cd82453b358c45a7f9ace03a8</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsPropagated</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a8e9766c1a978d74e3250f8878c5b2e01</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsGlobal</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a86969d2af6ef18465428681e8397b579</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLocal</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a920b332d777184223bac6899f4cf2d20</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsModifiable</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ac3bcf67f5fa97e1f216a5cc6575915fe</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsDynamic</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a1ff0674d91de264c092adffb3c117bb6</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsRemovable</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>afb4b45a4eb3a6fa7d37b980da143037f</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsStickingAtNode</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>ada7be8fb9958c8bc658c1a1cf617da32</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsInProb</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a80dd4f1056e091659cd530225417bd4a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsOriginal</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a5d363616c02c18751941252839ee0323</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsTransformed</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a7116e30a1a95e0f4bec55fe30f0e508f</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLockedPos</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a2d0e009d35d39123b880f3818aaa96d2</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLockedNeg</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a00a08fbd145e771f5d34c11435a8bade</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLocked</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>aa2962642575b19db94c8cc6939a83020</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNLocksPos</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a717bbbaf77dc6178803aa04df35c998e</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNLocksNeg</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a95beb50e731319083a54b8a8d0a966b8</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsAdded</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>acf4027a222bb2468a0f2654270ed5275</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconsAddUpgradeLocks</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a086901ea32f19d2131a2dec5a60ff889</anchor>
      <arglist>(SCIP_CONS *cons, int nlocks)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNUpgradeLocks</name>
      <anchorfile>pub__cons_8h.shtml</anchorfile>
      <anchor>a47a77f8d5cca4ba6a0a8eae91f5db4ee</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_cutpool.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__cutpool_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__cutpool_8h" name="type_cutpool.h" local="yes" imported="no">scip/type_cutpool.h</includes>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPcutGetRow</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>ab18cff123a4e20608deaafd94eeb1575</anchor>
      <arglist>(SCIP_CUT *cut)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutGetAge</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>ae860ead479f61bab6f909d260422c185</anchor>
      <arglist>(SCIP_CUT *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcutGetLPActivityQuot</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>a740f4d026753f08f175e08e06f00ca11</anchor>
      <arglist>(SCIP_CUT *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPcutpoolGetCuts</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>a72e7672b5ce3582b886a919f8fa35ed3</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutpoolGetNCuts</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>aa746b3ca90b58d330f1605d48b5ef0a7</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutpoolGetMaxNCuts</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>a9e53b63d57806a90579d990cc6120de8</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcutpoolGetTime</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>a7a7345387a7ac38671e62f1ce7250700</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcutpoolGetNCalls</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>add4aaa1577bfec85ccd8f23d6ba20eb1</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcutpoolGetNCutsFound</name>
      <anchorfile>pub__cutpool_8h.shtml</anchorfile>
      <anchor>a3ebefd0dbe01e095ed40241ce2288d67</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_dialog.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__dialog_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__dialog_8h" name="type_dialog.h" local="yes" imported="no">scip/type_dialog.h</includes>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPdialoghdlrGetRoot</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>aac5a6fadf175ca522bc31faf074d7e36</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialoghdlrClearBuffer</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a0686f8f57fcce6437e85719893a078e0</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialoghdlrIsBufferEmpty</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a32e79f62cb25182c48d8badcf0c611e5</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrGetWord</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a626c3b761f621b7f29746e45be35b547</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, SCIP_DIALOG *dialog, const char *prompt, char **inputword, SCIP_Bool *endoffile)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrAddInputLine</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a61914cd5db1159f63cc25c43221d2d9f</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrAddHistory</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a1fa9745660f0b49af2a96c9f87a0699b</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, SCIP_DIALOG *dialog, const char *command, SCIP_Bool escapecommand)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialogHasEntry</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a1ba24ae4f103ddaf0c7ddd0b78d17d29</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char *entryname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdialogFindEntry</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>adfa618e011ea25bf33a1a16fdedd9f50</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char *entryname, SCIP_DIALOG **subdialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayMenu</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>af3ed54af504c4efc38a1ffab9a312ca6</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayMenuEntry</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a8a6b313a6d0adec0891b5da71dc419c5</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayCompletions</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a782f843a91679cebf023bfaff1ad2ae1</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip, const char *entryname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogGetPath</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>afe22ca64f4629f6f84c3c1b0f53088ef</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char sepchar, char *path)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdialogGetName</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>ae2cc31e8a6459718053f29f139080667</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdialogGetDesc</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>ab35c290b0da8f1e1fcf6d66bc1179786</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialogIsSubmenu</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>ae60882a8c5b80e7e4a59fa90c50caa10</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPdialogGetParent</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a3b5f7cf8a751928a8e0e18d432e118d2</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG **</type>
      <name>SCIPdialogGetSubdialogs</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>aff557ce8866612a9dce6f5c45792b1db</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdialogGetNSubdialogs</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a844c473ec4ed2081fa3f42c59294792b</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOGDATA *</type>
      <name>SCIPdialogGetData</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>aee7e7bb6f20c22a3e68fe1ee6a260959</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogSetData</name>
      <anchorfile>pub__dialog_8h.shtml</anchorfile>
      <anchor>a41732c803a349f2e7201a9b60ae2501c</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP_DIALOGDATA *dialogdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_disp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__disp_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__disp_8h" name="type_disp.h" local="yes" imported="no">scip/type_disp.h</includes>
    <member kind="function">
      <type>SCIP_DISPDATA *</type>
      <name>SCIPdispGetData</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a200ee02655c17894718508d7f64434ae</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispSetData</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a2b38de8987ee703b37325ef7d452220b</anchor>
      <arglist>(SCIP_DISP *disp, SCIP_DISPDATA *dispdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetName</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>aab95d953a34ae3c1145cec6f49c266e8</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetDesc</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a336b0ad7e82717254e98c25580e11141</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetHeader</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>ac36200f833ec9cc76c4b12d78e707584</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetWidth</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>adb8d4e8ad8b1d70a2c90ff7aeced6e16</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetPriority</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>ad04b0ef3f425ade105a34bd69bb9bfd0</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetPosition</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>aa4dfa896d5a0802e83752342d0b843c6</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISPSTATUS</type>
      <name>SCIPdispGetStatus</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a466cbe754b38eeb06042eda0d0fb5fe4</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdispIsInitialized</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a3af5f074816fcf5584d3217e75b12dd3</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispLongint</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a17c330ddae561e6b49e51b0b86b98d2c</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, SCIP_Longint val, int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispInt</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a84195c5a6349e949a3ab6bb2f8a5147b</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, int val, int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispTime</name>
      <anchorfile>pub__disp_8h.shtml</anchorfile>
      <anchor>a7b9e3f9e08f4ce5a81ea4a3e4cf9c176</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, SCIP_Real val, int width)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_dive.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__dive_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPperformGenericDivingAlgorithm</name>
      <anchorfile>pub__dive_8h.shtml</anchorfile>
      <anchor>ac0d8ac791e2ade05782a703b986a6482</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET *diveset, SCIP_SOL *worksol, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Bool nodeinfeasible)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_event.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__event_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__event_8h" name="type_event.h" local="yes" imported="no">scip/type_event.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPeventhdlrGetName</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a80b3930a287820dd5122d5543180590a</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLRDATA *</type>
      <name>SCIPeventhdlrGetData</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>aef8adb1ec8f38014309c957472e732e6</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPeventhdlrSetData</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>ac8f6cc1f4cbc1c577be70262478bc37a</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPeventhdlrIsInitialized</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a2836464edb3b7c4e7f598b49dcd8319e</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventhdlrGetSetupTime</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a2088b0bd93c5de7bf8dfe89c39e0e403</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventhdlrGetTime</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a39221c8a404e2181f9045d6ea8d2be02</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTTYPE</type>
      <name>SCIPeventGetType</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a1d4e64ef60bc17c1c874b1c2fcfe15bd</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPeventGetVar</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a994c9f31d38b755396de9c4cca9f3706</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetOldobj</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a42e705b562857e9acf5fdb580046b729</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetNewobj</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a780d53ddd452e28c08e49581df478154</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetOldbound</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a483c59bb2077e53de4521b2cd9b4e869</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetNewbound</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>aad36fca258201c47feeb24fc4dc75e79</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPeventGetNode</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>ace6724e9c18bb3dff237ed96285263fb</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPeventGetSol</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>afb4284a8eae4d861492dc9d5ecfb3910</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetHoleLeft</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a42c60345bc77d0514dddf766fa9ce544</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetHoleRight</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a3d7bb71788150710a1ebd04ca2b16b44</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPeventGetRow</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a4d340a4edfdadae8e71bb5f8d83e3533</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL *</type>
      <name>SCIPeventGetRowCol</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a77c384793780a4bd761da05aad522e4a</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldCoefVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a00acc4b3a45d7d00549bbeff5194289f</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewCoefVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>ad53a757c92eb33e738f4cad55520cb55</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldConstVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>ae7b7129440129173bc2ea4df5cf35ddf</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewConstVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a59b6963c99aedfefdeb37c15b5df755d</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SIDETYPE</type>
      <name>SCIPeventGetRowSide</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a8a65abbbd55fe09a06caa7fee1d135bd</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldSideVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>a8e9bb33f1fd84238ed840d123accc7f3</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewSideVal</name>
      <anchorfile>pub__event_8h.shtml</anchorfile>
      <anchor>ade1d100c787fda6e5e797f5fdb81bca8</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_expr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>pub__expr_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="type__expr_8h" name="type_expr.h" local="yes" imported="no">nlpi/type_expr.h</includes>
    <includes id="type__exprinterpret_8h" name="type_exprinterpret.h" local="yes" imported="no">nlpi/type_exprinterpret.h</includes>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprcurvAdd</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>acca570d8c11e908969e55f3e8094b9c5</anchor>
      <arglist>(SCIP_EXPRCURV curv1, SCIP_EXPRCURV curv2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprcurvNegate</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af0932366868367ad4429f0e9109e5321</anchor>
      <arglist>(SCIP_EXPRCURV curvature)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprcurvMultiply</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a953f8b1e40e329d96187a160a3e6df8c</anchor>
      <arglist>(SCIP_Real factor, SCIP_EXPRCURV curvature)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprcurvPower</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a287ddd135e76773568642d4c0fea37f0</anchor>
      <arglist>(SCIP_INTERVAL basebounds, SCIP_EXPRCURV basecurv, SCIP_Real exponent)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprcurvMonomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0ef9cb8f62cdfbbf2ac60c0bae412d03</anchor>
      <arglist>(int nfactors, SCIP_Real *exponents, int *factoridxs, SCIP_EXPRCURV *factorcurv, SCIP_INTERVAL *factorbounds)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprcurvGetName</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a4e44f88bd58e37d665e58b2d3a37efb7</anchor>
      <arglist>(SCIP_EXPRCURV curv)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexpropGetName</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af1a80dd43d279ebabeb99a717a61efc7</anchor>
      <arglist>(SCIP_EXPROP op)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexpropGetNChildren</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7e5dbcdd03aeed7eee8bd07fc2d44eb2</anchor>
      <arglist>(SCIP_EXPROP op)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPROP</type>
      <name>SCIPexprGetOperator</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0fc57c277df5a8999f286180f7d23552</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetNChildren</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a241d9fbdf133cf93d35215eb185ef7c8</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPR **</type>
      <name>SCIPexprGetChildren</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5bf46444b29de80b56547c3ea29c2b32</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetOpIndex</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af09996e9175416dae554e76427d3bb93</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetOpReal</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a30db4adf5a04ae548b55c27490a1a4b5</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPexprGetOpData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7d777c7ac53d49fe631f86f1039d1d7a</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetRealPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab654b47eb34b1109ba455c0196bf10e8</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetIntPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a4f54dbfc15691b82db07f76b33cd078f</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetSignPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad445226afacd0925a35a786d6c8280d6</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprGetLinearCoefs</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a3622b0e8b3f42225474447d2a5d52452</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetLinearConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a6d5b654b0f5d330ea5d95c308f545d19</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADELEM *</type>
      <name>SCIPexprGetQuadElements</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a086c11beaf74e9b931286930ccc45d25</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetQuadConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abe9b1d1a3184ebd6de047b3a7d76ac01</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprGetQuadLinearCoefs</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7196ac7fec3f5c38531e73faab66138c</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetNQuadElements</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a95b96513dec722d7084d81b800511006</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRDATA_MONOMIAL **</type>
      <name>SCIPexprGetMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ae330fef00b656b46a3a82c05e4bbd405</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetNMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a41df92174e44481bb10b60474388cbec</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetPolynomialConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a282b396d13f3f93d16e31f022f3f552f</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetMonomialCoef</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac4f7893af3baf86dc0445c842947821a</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetMonomialNFactors</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8a71af77c61048760e0fe7001aa668dd</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPexprGetMonomialChildIndices</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a9fd82050183d79a9749bfed43dbb48a9</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprGetMonomialExponents</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af62d25255b598db8d4a41193659c9d24</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_USEREXPRDATA *</type>
      <name>SCIPexprGetUserData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abb047b8a29e05b25f656af4ffbaad6a8</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprHasUserEstimator</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>afc6a17a1aa3ec8f63f0e5d7f65b534ab</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprGetUserEvalCapability</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa27ab747055af674cc7cfcdade43cf3b</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreate</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab182312443de687163956ea5e879791b</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, SCIP_EXPROP op,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCopyDeep</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a354f2c4744f18c6c621192558b434106</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **targetexpr, SCIP_EXPR *sourceexpr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprFreeDeep</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8a03414e3d699a303f5481810d115de4</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprFreeShallow</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a286aaee5d12b2b3eb4b84ac3900db7f6</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprAdd</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aef781cb9ce6d6784c08f2ab61d10c87c</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, SCIP_Real coef1, SCIP_EXPR *term1, SCIP_Real coef2, SCIP_EXPR *term2, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprMulConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa455972ac36fd9c0923fbec4793c52f9</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, SCIP_EXPR *term, SCIP_Real factor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateLinear</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a53ace65b92ef84094762513c03ac80fc</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, SCIP_Real *coefs, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprAddToLinear</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a23067c5003bd8be0a40e223291c4782b</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, int nchildren, SCIP_Real *coefs, SCIP_EXPR **children, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateQuadratic</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a58602a2de3a7f8453d553ca0aed46eaa</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, SCIP_Real constant, SCIP_Real *lincoefs, int nquadelems, SCIP_QUADELEM *quadelems)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprSortQuadElems</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7448839a1f4d853210f0aec3c3965fd1</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreatePolynomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a9b19abb7ea396cf9c9f4076364acfe95</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, int nmonomials, SCIP_EXPRDATA_MONOMIAL **monomials, SCIP_Real constant, SCIP_Bool copymonomials)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprAddMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0cca53108f6eaed80ebbf20afcca895a</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, int nmonomials, SCIP_EXPRDATA_MONOMIAL **monomials, SCIP_Bool copymonomials)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprChgPolynomialConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abfc72d5c30a5adcc32de6dad9f03eda3</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprMultiplyPolynomialByConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a6a6c74b423eacf85ea3b8569adb65090</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_Real factor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprMultiplyPolynomialByMonomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a32d3cfb18322d4868e72f03dba73788a</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_EXPRDATA_MONOMIAL *factor, int *childmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprMultiplyPolynomialByPolynomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a941c5251cc15a1479808eecb27260f73</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_EXPR *factor, int *childmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprPolynomialPower</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a55a7d5645bf08926b05064d2398f61f6</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, int exponent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprMergeMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a97eb8c0850c519415f39e9293a709ccc</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_Real eps, SCIP_Bool mergefactors)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateMonomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af358ba7ad9cac7fc59bb73941e4b88e5</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRDATA_MONOMIAL **monomial, SCIP_Real coef, int nfactors, int *childidxs, SCIP_Real *exponents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprFreeMonomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af8db8348d0d58f0cd349ccfad7c9f390</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRDATA_MONOMIAL **monomial)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprSortMonomialFactors</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac1c75529a06aa946b8636655155f53ad</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprFindMonomialFactor</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ae0ae5371ba754fcbff4ce5de33928e3e</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial, int childidx, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprAreMonomialsEqual</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aae30dc0d141f3e5849a8c104b7db970b</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial1, SCIP_EXPRDATA_MONOMIAL *monomial2, SCIP_Real eps)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprAddMonomialFactors</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a9a8c5fbb8ec588dafdd7755d6c34698a</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRDATA_MONOMIAL *monomial, int nfactors, int *childidxs, SCIP_Real *exponents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprChgMonomialCoef</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab4d93cad3bf663e5e53f483556f96bce</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial, SCIP_Real newcoef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprMultiplyMonomialByMonomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa150275250cd34521458e83e37335cb4</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRDATA_MONOMIAL *monomial, SCIP_EXPRDATA_MONOMIAL *factor, int *childmap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprMonomialPower</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abe8b84e8d6309295163b99bdb5463d2c</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial, int exponent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprMergeMonomialFactors</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5ef8fa99b134c30bfe0e9be2a0dd869e</anchor>
      <arglist>(SCIP_EXPRDATA_MONOMIAL *monomial, SCIP_Real eps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprSortMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab131324dd52a62bf7a5d3b92f1375b73</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateUser</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa013b9819eb267e06461cddf4dacc4e9</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, SCIP_USEREXPRDATA *data, SCIP_EXPRINTCAPABILITY evalcapability, SCIP_DECL_USEREXPREVAL((*eval)), SCIP_DECL_USEREXPRINTEVAL((*inteval)), SCIP_DECL_USEREXPRCURV((*curv)), SCIP_DECL_USEREXPRPROP((*prop)), SCIP_DECL_USEREXPRESTIMATE((*estimate)), SCIP_DECL_USEREXPRCOPYDATA((*copydata)), SCIP_DECL_USEREXPRFREEDATA((*freedata)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprHasParam</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a78cd27ed57cd9c239e1bbc5d304bf7e1</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprGetMaxDegree</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a433024bed75a9372ce8b30d82ec97dc3</anchor>
      <arglist>(SCIP_EXPR *expr, int *maxdegree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprGetVarsUsage</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0ddd65b428bdd2d3a29f8e0b411e5c16</anchor>
      <arglist>(SCIP_EXPR *expr, int *varsusage)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprAreEqual</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a483972cc3ab4f2a25497caf7dbd0a403</anchor>
      <arglist>(SCIP_EXPR *expr1, SCIP_EXPR *expr2, SCIP_Real eps)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprSimplify</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a45e3fc1dd9d836c99515c21b8dc49e5a</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_MESSAGEHDLR *messagehdlr, SCIP_EXPR *expr, SCIP_Real eps, int maxexpansionexponent, int nvars, int *nlinvars, int *linidxs, SCIP_Real *lincoefs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalShallow</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a83fb170b96d1079aa10b1027759a9a0a</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real *argvals, SCIP_Real *varvals, SCIP_Real *param, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEval</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ae99abdd201bbeec826ad42e4627e64f6</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real *varvals, SCIP_Real *param, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalIntShallow</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abae3e5a1162ea7a99da022c44bccaa92</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_INTERVAL *argvals, SCIP_INTERVAL *varvals, SCIP_Real *param, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalInt</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abbbedd9621e4e33d41f1af820d46fea3</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Real *param, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalUser</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa69db41492c7cb0a74cdf1604d7d6620</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real *argvals, SCIP_Real *val, SCIP_Real *gradient, SCIP_Real *hessian)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalIntUser</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a367ccd05f678dcdaf5cfe5242fe3e82e</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_INTERVAL *argvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient, SCIP_INTERVAL *hessian)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCheckCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aceba302565dcdf432869378c61784868</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_INTERVAL *varbounds, SCIP_Real *param, SCIP_EXPRCURV *curv, SCIP_INTERVAL *bounds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEstimateUser</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a1d75fcad526a6a82388f95e9523d7ebb</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_Real *argvals, SCIP_INTERVAL *argbounds, SCIP_Bool overestimate, SCIP_Real *coeffs, SCIP_Real *constant, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprSubstituteVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a58b1843bd0262ed5b6c92fc23156cf75</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_EXPR **substexprs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprReindexVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a4278cafac2823cd273a81007f7a209d3</anchor>
      <arglist>(SCIP_EXPR *expr, int *newindices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprReindexParams</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a70f5bd66a56b47faaaf4fc45987ed4f3</anchor>
      <arglist>(SCIP_EXPR *expr, int *newindices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprPrint</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5ad1a5816511ec3c103680f8beab96b1</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char **varnames, const char **paramnames, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprParse</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>adda08b7e08556b696218d0c6833e58d7</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_MESSAGEHDLR *messagehdlr, SCIP_EXPR **expr, const char *str, const char *lastchar, int *nvars, int *varnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPR *</type>
      <name>SCIPexprtreeGetRoot</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a00b319aec4404887ce8a1cc860a83442</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeGetNVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a87f1b85b75cd0b5bd9107d5bc410d8f4</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeGetNParams</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a1a64d598f310ea0d33330aa96ed6181d</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprtreeGetParamVals</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0299ad304998c7041fb4f246844ed119</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeSetParamVal</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a02aadd64240b0aea7ba835880e8de80e</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int paramidx, SCIP_Real paramval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTDATA *</type>
      <name>SCIPexprtreeGetInterpreterData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7831d239faec0b27883ae026e85d7331</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeSetInterpreterData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad174e4bfd56c2532e0c037f9f8443aef</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_EXPRINTDATA *interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeFreeInterpreterData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>afabc4cf888ccb3d7bd2302d2198b0393</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprtreeHasParam</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab180ce02b20b12f02906dcdbcf30c861</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeGetMaxDegree</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a3fd7870d751277732ff2bb76b0fcb230</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int *maxdegree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEval</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0c4ad161b828120f5c16d3df89bfc574</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEvalInt</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a6651f0a87111d63aff16d7d5a3388920</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreePrint</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a1f9a6e483468024261dd52c61244747e</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char **varnames, const char **paramnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeCreate</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a91157b91fbe21ecb2ba61442ec33d648</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRTREE **tree, SCIP_EXPR *root, int nvars, int nparams, SCIP_Real *params)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeCopy</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8f39cbb2c6678b8a466ed16a904b53d5</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRTREE **targettree, SCIP_EXPRTREE *sourcetree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeFree</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ae32ebbf22e95f5c28c9baaa7a67bc2e0</anchor>
      <arglist>(SCIP_EXPRTREE **tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSetParams</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0313476b7ecbe0d9ed6ab25e7915a06f</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int nparams, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeGetVarsUsage</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a54d4f74d39ed15cd3b9b65cc9bf7b6a2</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int *varsusage)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSimplify</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa867f046df03c4400daa1afd2f3c53d2</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_MESSAGEHDLR *messagehdlr, SCIP_Real eps, int maxexpansionexponent, int *nlinvars, int *linidxs, SCIP_Real *lincoefs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeAddExpr</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a4eb976ecc14a170deb778ace16b197c5</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_EXPR *expr, SCIP_Bool copyexpr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeCheckCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5bd33601fab96478623a16e6bee0075f</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varbounds, SCIP_EXPRCURV *curv, SCIP_INTERVAL *bounds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSubstituteVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a709213a9aa36499fd93e8468affb7ea7</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_EXPR **substexprs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPquadelemSort</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad040344df322da549bb1083629632a44</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int nquadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPquadelemSortedFind</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a3fdd0ef020607681df3407d9514b8ec7</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int idx1, int idx2, int nquadelems, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPquadelemSqueeze</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aacce929a223789177fbbe238b57dbcb0</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int nquadelems, int *nquadelemsnew)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphCaptureNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac87cfef981129331e2bb14afdb739c96</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphIsNodeEnabled</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0aec74fa4923365c8bb0256a98239e0a</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeNChildren</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a7ce12d49650b234f1b7bf66490e35453</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPHNODE **</type>
      <name>SCIPexprgraphGetNodeChildren</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af9ef014d339c72a7a4f083b6cffec6ae</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeNParents</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0837e0e43329327e2450a2ea8c2088f7</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPHNODE **</type>
      <name>SCIPexprgraphGetNodeParents</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aea8473f9c67234799cedae4e4d552698</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeDepth</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>acedb3fac53f97e40512e9140ad15f50d</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodePosition</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aaac68443f4a6c0ede44f9f0bbb30312e</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPROP</type>
      <name>SCIPexprgraphGetNodeOperator</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa69421fb15af9b77768aac718cff45a1</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeOperatorIndex</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5d0b4757a0e17e8d9b61e2df63cfce08</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeOperatorReal</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a5d899dbc59ab9851be937f89b860832b</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPexprgraphGetNodeVar</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aaefc8948770ccadbba6bf9f96eee2bb2</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeRealPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abc5a50c992cb3516aa63081b3c5a8244</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeIntPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aa1b5fdcdfd5450eb3411f11e76369cd4</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeSignPowerExponent</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a760f19a1d43beb0346df994ba6ee1ad4</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprgraphGetNodeLinearCoefs</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a64b75f9934bb52010ff6a665a7610c7e</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeLinearConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a840e3f415de1932e816db6aaad85b231</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeQuadraticConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a694d59f907b41de180ff7b11ea9fbf1b</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprgraphGetNodeQuadraticLinearCoefs</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a96ddbb42d1679d0bb432a0d4a8e172b9</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADELEM *</type>
      <name>SCIPexprgraphGetNodeQuadraticQuadElements</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a85efccb1034902d4870c0643d29d356e</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodeQuadraticNQuadElements</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad3425f53a6bbe4f889530d7947a847a2</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRDATA_MONOMIAL **</type>
      <name>SCIPexprgraphGetNodePolynomialMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af9fdafb12044ffa7c46880eac21c123e</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNodePolynomialNMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8f0ba323284583ce43d351db9947b704</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodePolynomialConstant</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a43963a016d72a1f73ba6e0fa3d0df9d8</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphGetNodePolynomialMonomialCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>abbc0ed85b84ac566f05f397535806f3a</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node, int monomialidx, SCIP_Real infinity, SCIP_EXPRCURV *curv)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_USEREXPRDATA *</type>
      <name>SCIPexprgraphGetNodeUserData</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aef572d469f1817002b8ac06910503ebc</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphHasNodeUserEstimator</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a099afd57af6d1e6a28fc0d3284c7c04e</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_INTERVAL</type>
      <name>SCIPexprgraphGetNodeBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac5f6b7877a4f5db287979e4d56d68168</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprgraphGetNodeVal</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af47ccccd8d046cc2bba9d89a5f871dba</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRCURV</type>
      <name>SCIPexprgraphGetNodeCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af9358bf03749cc7939a9d2dff16cdf74</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreateNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aec3e3104b8cfa7e99101db6efee24d0f</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node, SCIP_EXPROP op,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreateNodeLinear</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a96c704943a2731d4a8fc86d9fbaffc2e</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node, int ncoefs, SCIP_Real *coefs, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreateNodeQuadratic</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a6d4669683634966c8f6f5c8a05a480ab</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node, int nchildren, SCIP_Real *lincoefs, int nquadelems, SCIP_QUADELEM *quadelems, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreateNodePolynomial</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a3551e6692be946aaa8c0f3d672b549df</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node, int nmonomials, SCIP_EXPRDATA_MONOMIAL **monomials, SCIP_Real constant, SCIP_Bool copymonomials)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphNodePolynomialAddMonomials</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a58a89fda9a30be8590364b2a2ce3e468</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE *node, int nmonomials, SCIP_EXPRDATA_MONOMIAL **monomials, SCIP_Bool copymonomials)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreateNodeUser</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0d77b63f8e93cf6c2b0adc486404a3a1</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node, SCIP_USEREXPRDATA *data, SCIP_EXPRINTCAPABILITY evalcapability, SCIP_DECL_USEREXPREVAL((*eval)), SCIP_DECL_USEREXPRINTEVAL((*inteval)), SCIP_DECL_USEREXPRCURV((*curv)), SCIP_DECL_USEREXPRPROP((*prop)), SCIP_DECL_USEREXPRESTIMATE((*estimate)), SCIP_DECL_USEREXPRCOPYDATA((*copydata)), SCIP_DECL_USEREXPRFREEDATA((*freedata)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphNodeSplitOffLinear</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a09b4ddffcced854c5850ea0d4c7f169c</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE **node, int linvarssize, int *nlinvars, void **linvars, SCIP_Real *lincoefs, SCIP_Real *constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphMoveNodeParents</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac9405a5738aa2aac865d9f5d1cf1b086</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE **srcnode, SCIP_EXPRGRAPHNODE *targetnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphReleaseNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a38e812142283f7c3a7a1ec8451e93294</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE **node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphFreeNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a2ca63239945baa4d12b1169c8a625bf1</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPHNODE **node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphEnableNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad05f56d4b31a46822eab3bd719af9e42</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphDisableNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a55af479acc2f1a620a54525d2e89515d</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphHasNodeSibling</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a2d7ac99b3a017df85f92981a86d16992</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphAreAllNodeChildrenVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a28fd34182398d95f5219895658f0e104</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphHasNodeNonlinearAncestor</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a41f447cb01948a3ac4fa1376004581f6</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphPrintNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac03c833b0bfbe504e29459da57413939</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphTightenNodeBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af57277e8083701f3a47ad4496bc4ac65</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node, SCIP_INTERVAL nodebounds, SCIP_Real minstrength, SCIP_Real infinity, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphUpdateNodeBoundsCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aacdcb8a59457b8239aef2b0e6cf6ccf8</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node, SCIP_Real infinity, SCIP_Real minstrength, SCIP_Bool clearreverseprop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetDepth</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a1dee03ef0432664090ce3f1c69864df5</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPexprgraphGetNNodes</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ae4780d9983b7d1fa172df57dba395620</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPHNODE ***</type>
      <name>SCIPexprgraphGetNodes</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0faf25f3df4b9dccce03a1c9d1795783</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetNVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a88c08e204d38ecc02b9f2e3050429923</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>void **</type>
      <name>SCIPexprgraphGetVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab0d076ee78d94e1f72b5c77acf3feb44</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRGRAPHNODE **</type>
      <name>SCIPexprgraphGetVarNodes</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>af9d779dda95fa37c5c4fd1d500b59ab4</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarNodeValue</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ac5b19677243ca926599d8dc6f78ec55a</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *varnode, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarsBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a4e8997475323bd4315c2b76d23daf116</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_INTERVAL *varbounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a2d283c501de935356b3976b6f93361ef</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, void *var, SCIP_INTERVAL varbounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarNodeBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a539e43cd657a0d1d0a4c70af43677bdd</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *varnode, SCIP_INTERVAL varbounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarNodeLb</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a19add920fb534a281398c0bcfb8ea668</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *varnode, SCIP_Real lb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphSetVarNodeUb</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a966ad7d37dc8fb19c912441a0e1a0ac8</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *varnode, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_INTERVAL *</type>
      <name>SCIPexprgraphGetVarsBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a81c8a32b9d3369d13b9691a34a4c6cb7</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCreate</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ab19d4e70244671d663708cdd93edf6b2</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRGRAPH **exprgraph, int varssizeinit, int depthinit, SCIP_DECL_EXPRGRAPHVARADDED((*exprgraphvaradded)), SCIP_DECL_EXPRGRAPHVARREMOVE((*exprgraphvarremove)), SCIP_DECL_EXPRGRAPHVARCHGIDX((*exprgraphvarchgidx)), void *userdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphFree</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad1b14bc2d7a2d7220c9d49685c341210</anchor>
      <arglist>(SCIP_EXPRGRAPH **exprgraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphAddNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a0439768d98f1858c395c920e507fa4cc</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node, int mindepth, int nchildren, SCIP_EXPRGRAPHNODE **children)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphAddVars</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad2704955b653f90780634347bea9b853</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, int nvars, void **vars, SCIP_EXPRGRAPHNODE **varnodes)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphAddConst</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a854a50b3f1cb037323fd43ee2b7edbeb</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real constant, SCIP_EXPRGRAPHNODE **constnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphAddExprtreeSum</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a71be9f67fcd92197a2fe55ae1c6b2812</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, int nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *coefs, SCIP_EXPRGRAPHNODE **rootnode, SCIP_Bool *rootnodeisnew)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphReplaceVarByLinearSum</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8f7084f4ba8d3204fa4cec04859e473d</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, void *var, int ncoefs, SCIP_Real *coefs, void **vars, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphFindVarNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a2f8b0129f4cd294e42b7baac3f169fe8</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, void *var, SCIP_EXPRGRAPHNODE **varnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprgraphFindConstNode</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>afd009700af7a8ec40e64b44ce4dd1857</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real constant, SCIP_EXPRGRAPHNODE **constnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphPrintDot</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a112d01041d9eb5dac684efb44faa5cf2</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char **varnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphEval</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a123f2f743e37aa2ad23c33e1375cb8b9</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real *varvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphPropagateVarBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a37b9c31ee18c9e082049a775c278b800</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real infinity, SCIP_Bool clearreverseprop, SCIP_Bool *domainerror)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphPropagateNodeBounds</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8ced65311a8205c402aa3b1826f7cccc</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real infinity, SCIP_Real minstrength, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphCheckCurvature</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>aed8a77735bf278ca521a6dc06f8817c3</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_Real infinity, SCIP_Bool clearreverseprop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphSimplify</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a072f60c7c43b5babed543d37dbda6146</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_MESSAGEHDLR *messagehdlr, SCIP_Real eps, int maxexpansionexponent, SCIP_Bool *havechange, SCIP_Bool *domainerror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphGetTree</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a2651a336ebb60975fd8d371375c6821e</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *rootnode, SCIP_EXPRTREE **exprtree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphGetSeparableTrees</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a6a06beb937c56606eb05a1422e9712f3</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node, int exprtreessize, int *nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *exprtreecoefs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprgraphGetSubtreeVarsUsage</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a8ea0a44be20eb75bad3e74afe347618e</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node, int *varsusage)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprgraphGetSumTreesNSummands</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>a00beb1b6abc8844383699fa33b66fdc6</anchor>
      <arglist>(SCIP_EXPRGRAPHNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprgraphGetSumTrees</name>
      <anchorfile>pub__expr_8h.shtml</anchorfile>
      <anchor>ad3a9c27f25617ecab1db627e687a68b8</anchor>
      <arglist>(SCIP_EXPRGRAPH *exprgraph, SCIP_EXPRGRAPHNODE *node, int exprtreessize, int *nexprtrees, SCIP_EXPRTREE **exprtrees, SCIP_Real *exprtreecoefs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_fileio.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__fileio_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <member kind="typedef">
      <type>struct SCIP_File</type>
      <name>SCIP_FILE</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a22f13c2f5424a536d50598c1d4a120a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EXTERN SCIP_FILE *</type>
      <name>SCIPfopen</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ae8e5372df387c60a3d5dbcda8f94fd4d</anchor>
      <arglist>(const char *path, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN SCIP_FILE *</type>
      <name>SCIPfdopen</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ad0e83ebe0ef5f6ea814dc0118d7fb639</anchor>
      <arglist>(int fildes, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN size_t</type>
      <name>SCIPfread</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a7cf6b6f7095ce943376e627ed46021ee</anchor>
      <arglist>(void *ptr, size_t size, size_t nmemb, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN size_t</type>
      <name>SCIPfwrite</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ac81c451126947bab6eabeb1e5948535a</anchor>
      <arglist>(const void *ptr, size_t size, size_t nmemb, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfprintf</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ae5d20980c33c9054c114c774357c2aa7</anchor>
      <arglist>(SCIP_FILE *stream, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfputc</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a3f83c889cef22534f1196afd245725e6</anchor>
      <arglist>(int c, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfputs</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>aae3ef646be2be637bffad9046c519d0b</anchor>
      <arglist>(const char *s, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfgetc</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a643e5cc943146e4a3e3ad37599ce8944</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN char *</type>
      <name>SCIPfgets</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>af42f820f34b7931cadf622a196baec01</anchor>
      <arglist>(char *s, int size, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfflush</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a7fecee225ec16e307750298c16fa13bc</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfseek</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a6b113671a2dc66a3a9320375add2fd44</anchor>
      <arglist>(SCIP_FILE *stream, long offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN void</type>
      <name>SCIPrewind</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ae3e4ddf1be864c00e879e742df869694</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN long</type>
      <name>SCIPftell</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>ae79f0b1049be2934061c3ccd0109d72e</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfeof</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a7eb81ba0310450d0e16977a6f453b9ab</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>EXTERN int</type>
      <name>SCIPfclose</name>
      <anchorfile>pub__fileio_8h.shtml</anchorfile>
      <anchor>a46d39c02b8a306380cfcac391caa0fb6</anchor>
      <arglist>(SCIP_FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_heur.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__heur_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a90df30a2ea3b521c210f2a7e640b7fb7</anchor>
      <arglist>(SCIPheurComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aff81785424acc60fb0c3e35ccea4d585</anchor>
      <arglist>(SCIPheurCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEURDATA *</type>
      <name>SCIPheurGetData</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a479444450c1bf328ef836a74ca7dc460</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetData</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>afbf429f4901517effecef3e1a66ef7ae</anchor>
      <arglist>(SCIP_HEUR *heur, SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPheurGetName</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>af66670fec7730f447b1569c409003f8d</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPheurGetDesc</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a6b313da40f29c3b8875852f467f5df6e</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPheurGetDispchar</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a0ead93f69ea40d1f3c6148eed16bf696</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEURTIMING</type>
      <name>SCIPheurGetTimingmask</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a495559ddb215f9c1b10f78e627acc078</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetTimingmask</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a77d658c96f7455e763043e51393e3aca</anchor>
      <arglist>(SCIP_HEUR *heur, SCIP_HEURTIMING timingmask)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPheurUsesSubscip</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a64bdd128970d006bc17c83db9eada0bd</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetPriority</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a607e35734789103926b0cb3a443be45d</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetFreq</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aba90dda6264c94e48ef142d9aacd90fd</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetFreq</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a6ee4ec3fb26995f2b0c3c61b8b0cbe0a</anchor>
      <arglist>(SCIP_HEUR *heur, int freq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetFreqofs</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a873c5e55c00ae21950c6959cac37c323</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetMaxdepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aa62127ccb7962dd376bf9659269ebd52</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNCalls</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a8039e238a7af4384155fed438b67f1ca</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNSolsFound</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a57690e03961390238b2ac914214beaad</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNBestSolsFound</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a657363116364c13415beeca97c0d58fe</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPheurIsInitialized</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>af24edbc2ad60dacb52a1eeef868e7350</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPheurGetSetupTime</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a987b0b13853c3e4c526e16055889c5c4</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPheurGetTime</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>ad2b70dc6374ce038b604cdade296ebc4</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIVESET **</type>
      <name>SCIPheurGetDivesets</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a23686a3bcc016bbf8c77276b91298e58</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetNDivesets</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aa6d68b6697fd4547a19132ffec2e27fb</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPdivesetGetHeur</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a7451281f845cc346360c9a53e58b6aea</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPdivesetGetWorkSolution</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a1f25ea250822a17f3d450e087cb04503</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdivesetSetWorkSolution</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>adbd2208fe7cdd8b175927b5f798e4522</anchor>
      <arglist>(SCIP_DIVESET *diveset, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdivesetGetName</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a7205b606718adda9f9a8069185d81f13</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetMinRelDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a43ea6cca468741d89574e049e1c00bc6</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetMaxRelDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a1eaae2b1cf728c36ecc24c85f7bcd96e</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPdivesetGetSolSuccess</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a45302936cb640dc1f308ffea5568a0cd</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetNCalls</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>ac993111e75963266a69b39dda7a02a15</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetNSolutionCalls</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aec96947a04a59766e23cdb6befce9ee9</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetMinDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a6f5ca324f49dbb19ed70386010af84a0</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetMaxDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a4a01b7c3e51400a3e09e265f722d21da</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetAvgDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a8e356a0c4f8801751cd1925b98f66160</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetMinSolutionDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a3206ede3e2ee9533c30dd251e8879253</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetMaxSolutionDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a5594f5e6a9c6f5d61c7c011f730a9250</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetAvgSolutionDepth</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a8c2d0be976f029e37fd784bce66cdceb</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPdivesetGetNLPIterations</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>af72d2c602c66f6b7ccd24aa6c4eeb190</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPdivesetGetNProbingNodes</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a26bbea0bbc4ab1640527861e3c6d4946</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPdivesetGetNBacktracks</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a577820ecf17182f117a548d1c6751214</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetMaxLPIterQuot</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a00f4afa341a6e66a44a2248c60a09c07</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetMaxLPIterOffset</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>afcf91668afb8f9648a740ea7cce6c162</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetUbQuotNoSol</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a1b7b03142097c791568e26d9f5a3bcd5</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetAvgQuotNoSol</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>ab3f7b670fabf70c42a0e3cf6e5d7d554</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetUbQuot</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a44188e42127c609bcae39804e9d33570</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetAvgQuot</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a3d38dfe2aec9b292d5e2c1a4274b0462</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdivesetUseBacktrack</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a3def00ab092be9d321ed9cdf212216a9</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdivesetGetLPSolveFreq</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a4122016fd175f586fa557fe1823822b3</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdivesetGetLPResolveDomChgQuot</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>aea0658154ad6e9b0f65ef07427566fa7</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdivesetUseOnlyLPBranchcands</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a7855b64bced34fec275653240e7d7558</anchor>
      <arglist>(SCIP_DIVESET *diveset)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdivesetSupportsType</name>
      <anchorfile>pub__heur_8h.shtml</anchorfile>
      <anchor>a71c4d358aad93558e1a726e3dd97d8a2</anchor>
      <arglist>(SCIP_DIVESET *diveset, SCIP_DIVETYPE divetype)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_history.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__history_8h</filename>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPhistoryGetVSIDS</name>
      <anchorfile>pub__history_8h.shtml</anchorfile>
      <anchor>aab53ebb79c8a46f9bfdd617ed297dfa1</anchor>
      <arglist>(SCIP_HISTORY *history, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPhistoryGetCutoffSum</name>
      <anchorfile>pub__history_8h.shtml</anchorfile>
      <anchor>a72173138433a66565b8b9ad2a8deafb0</anchor>
      <arglist>(SCIP_HISTORY *history, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvaluehistoryGetNValues</name>
      <anchorfile>pub__history_8h.shtml</anchorfile>
      <anchor>a2ec3fbfbdf77af5208c12c6a03775a14</anchor>
      <arglist>(SCIP_VALUEHISTORY *valuehistory)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HISTORY **</type>
      <name>SCIPvaluehistoryGetHistories</name>
      <anchorfile>pub__history_8h.shtml</anchorfile>
      <anchor>acc01b89d60a357f0e7797f4b182f6bc8</anchor>
      <arglist>(SCIP_VALUEHISTORY *valuehistory)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvaluehistoryGetValues</name>
      <anchorfile>pub__history_8h.shtml</anchorfile>
      <anchor>ac4fbb5b3cbc27f2b071254a71bb8e98e</anchor>
      <arglist>(SCIP_VALUEHISTORY *valuehistory)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_implics.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__implics_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__implics_8h" name="type_implics.h" local="yes" imported="no">scip/type_implics.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueSearchVar</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>ae7ddba099889aa42a852089b5e3d39b0</anchor>
      <arglist>(SCIP_CLIQUE *clique, SCIP_VAR *var, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcliqueHasVar</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>a918b116bd0572f2f5328a127d9c4e02e</anchor>
      <arglist>(SCIP_CLIQUE *clique, SCIP_VAR *var, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueGetNVars</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>a5ca4e2f84e7829eeaffdf43d018ff568</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPcliqueGetVars</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>a9412a1de52bdfcb107ccfefb555bf680</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool *</type>
      <name>SCIPcliqueGetValues</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>acefba0ff4e87e189f6356124090ab786</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueGetId</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>a1a4c7d99f653e844d617243114a38086</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcliqueIsCleanedUp</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>aa716f2b3a66ccb1283977f1f5a1fe313</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcliqueIsEquation</name>
      <anchorfile>pub__implics_8h.shtml</anchorfile>
      <anchor>aeb71dabed7555c02efd60b65548c287f</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_lp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__lp_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__set_8h" name="type_set.h" local="yes" imported="no">scip/type_set.h</includes>
    <includes id="type__stat_8h" name="type_stat.h" local="yes" imported="no">scip/type_stat.h</includes>
    <includes id="type__lp_8h" name="type_lp.h" local="yes" imported="no">scip/type_lp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__sepa_8h" name="type_sepa.h" local="yes" imported="no">scip/type_sepa.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__lpi_8h" name="type_lpi.h" local="yes" imported="no">lpi/type_lpi.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SCIPcolSort</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga9280fc67dc5f3384c3fb2b609cba1f49</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetObj</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga60e8cc2149d3713998ce665e7ab26dba</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetLb</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaa52fb121ea929652cabd1f106bc237b8</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetUb</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaae55f446379f772ff2fde480b16d4fe3</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetBestBound</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga99493443fa15a7e69b29de402f83ef65</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetPrimsol</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaad8dfe4530e50dcace40973f53bcb2d8</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetMinPrimsol</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga1b82154dd7c59d7e86ab15230291a30f</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetMaxPrimsol</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaf388065f45fe597b72454523efb2587d</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BASESTAT</type>
      <name>SCIPcolGetBasisStatus</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gadb8546b57618b5cca7c70b7fa1d32192</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPcolGetVar</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gae94430cb664027be0dd4534f2dc87147</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetIndex</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga9794af9c00858606285e18b8b5085cbc</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsIntegral</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga3e350bcbe852993a8d166d66a15fcd81</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsRemovable</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga2e6a046236d3af0b0d4752114d89888b</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetLPPos</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga26d319bbff50575ce36abf598f108a35</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetLPDepth</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gad0233da25643a27180d04e1568655d48</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsInLP</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gac396a6cdc07f780aa8132555922778a5</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNNonz</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga68a6d090a09fb49728514c911c9a0f42</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNLPNonz</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gabe411088770afcdc19a58b78e7cab426</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPcolGetRows</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>ga78725376bb4d4742fd6e10387d745e88</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPcolGetVals</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaaae6a87005ee5bc57e4d0d413148243d</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcolGetStrongbranchNode</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gab484986a7593c61bc7fb72968e80c3a9</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNStrongbranchs</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gac0ef7353bffa2053bd47d84d5bbd521a</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPboundtypeOpposite</name>
      <anchorfile>group__ColumnMethods.shtml</anchorfile>
      <anchor>gaeffe67ec8bab6c3e621f75c616042ea5</anchor>
      <arglist>(SCIP_BOUNDTYPE boundtype)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gab2d1441c7477d08b18fc922b91178256</anchor>
      <arglist>(SCIProwComp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwLock</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaa35d3025a3738c05ccdb24032fe83506</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwUnlock</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaab40ea4ee2b87d8669176b7c78832447</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetScalarProduct</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga210e47e1ef0847b71ed99bef762aac94</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetParallelism</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga3e6d355bb8bcca14c6cfd5a3c5c2194e</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2, char orthofunc)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetOrthogonality</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga1da290281a2143a814cec5a36b439417</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2, char orthofunc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwSort</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga01e2f5babc7d250aab1d195b228af56b</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetNNonz</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga4bbbf624eade774dee24d0c489c7d435</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetNLPNonz</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga7b035934338a39447a0612291d389a4c</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL **</type>
      <name>SCIProwGetCols</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gae7bce0efc6e4a007f7d50f6f93b38c69</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIProwGetVals</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga6bdc0a46ccec39f94e8d09f205dc0191</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetConstant</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gacf6752903a7ed39e049f259957433f0e</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetNorm</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga7d29e684cea78b9ef37bd56ec1b14ae8</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetSumNorm</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaab46833330d62c0e6daa82eb1566c27f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetLhs</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga0a8911ae1d2af432cef8e29e794d3c3c</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetRhs</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga68fba35b3a070fe4b08d39dde3e44f20</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetDualsol</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gae8bbb1d51edf13ff67d505b95f1bb0e3</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetDualfarkas</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gac28481db594a2070bf9e9b0cb72dc23d</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BASESTAT</type>
      <name>SCIProwGetBasisStatus</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaf3c45c4b08cb081f56efc7b125368517</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIProwGetName</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga221966d7fe396296f24e35e85d2a43b9</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetIndex</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gac7cab1ce5f56af4a19f945b8471d151f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetAge</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga799938b3c4fd09ba65b020a20cf07d07</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetRank</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gabd02a834d00e21620c5b3fb6897eea9f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsIntegral</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga01bc0fcf1d610b60e8a241521bc74697</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsLocal</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga8d12128cf2298b27d57bcaaa07f261fc</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsModifiable</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga0efbf798e1b4612a152c201575ec2b0f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsRemovable</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaa6d02abf025be8ccd574bddae53fffa2</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROWORIGINTYPE</type>
      <name>SCIProwGetOrigintype</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaf39d207a6033479c7ee279c7835c9e2e</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIProwGetOriginCons</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga853be131817d4dc100ebfd15af04e48a</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA *</type>
      <name>SCIProwGetOriginSepa</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga227f024bdc463e768ef2f08d75e87c68</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsInGlobalCutpool</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga54571516b18483fe94128e3e4e4fe77f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetLPPos</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga801782a69e9e78029d8cd98698557c3b</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetLPDepth</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga28d5a7bf188451877d64571b9cb43fd5</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsInLP</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gae0a474274028cc639f4e5d647f286613</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIProwGetActiveLPCount</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>ga167696383673a275a6fd36d0d7999ce4</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIProwGetNLPsAfterCreation</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaa10b26a6e0f7b2a44acf2857eac48315</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwChgRank</name>
      <anchorfile>group__RowMethods.shtml</anchorfile>
      <anchor>gaca07b300e8cf56a22c9c9433921089fb</anchor>
      <arglist>(SCIP_ROW *row, int rank)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_matrix.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__matrix_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <includes id="type__matrix_8h" name="type_matrix.h" local="yes" imported="no">scip/type_matrix.h</includes>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPmatrixGetColValPtr</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a51a86d7c7680c6a21363ad2a2b384523</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPmatrixGetColIdxPtr</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a43f07752ae857196e6477be1e9863267</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetColNNonzs</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a0e44723aff401dafb13b5cf5d2e38daa</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetNColumns</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a0d2e512683e4538dc60994a6404445de</anchor>
      <arglist>(SCIPMILPMATRIX *matrix)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetColUb</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>afe7d69c77c8585dedd28b9f25372e22b</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetColLb</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a6ffdc2429d7d35941dad7f641ca795d5</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetColNUplocks</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a712e4f92c18670b0c94d322d1c574cf9</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetColNDownlocks</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a58b0436b0e32265ed2e4537794b57869</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPmatrixGetVar</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a30eb310bf75e4b08650ecd9c6d35c8e3</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPmatrixGetColName</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>af582e9e2fe0377a28ce11d2b379d4756</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPmatrixGetRowValPtr</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>af373ad309846bdcfcb4ed83bbbfcd5c0</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPmatrixGetRowIdxPtr</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a84d077018ae28f69848e34387237796a</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetRowNNonzs</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a065374e9d5c58938c70d288136e6dc1e</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPmatrixGetRowName</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a936b45b41847a9c1e16f5f9363f25d53</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetNRows</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a516a5f9841b23c50115d73ed22d52a55</anchor>
      <arglist>(SCIPMILPMATRIX *matrix)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetRowLhs</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a69e7383db0bdf1ffa9e30a07defa44d0</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetRowRhs</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a754b96a5c724f1c45b78ebb685e9bcd3</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPmatrixIsRowRhsInfinity</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>af88740bbefd3921a4adb66ca984b0e00</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetNNonzs</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a40d5bf6ef3e72b9d48fe3b868a230aac</anchor>
      <arglist>(SCIPMILPMATRIX *matrix)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetRowMinActivity</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>ab5db233d82afa040ba79437cfb203878</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPmatrixGetRowMaxActivity</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>ae16b60a7d83676b9d1f6a4caa814e2be</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetRowNMinActNegInf</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>ac166b03d5dcc575c8747d63605fea5e2</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetRowNMinActPosInf</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>abf632946456431e8c88a491a869af6f9</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetRowNMaxActNegInf</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a10d05c13781f4873a44371ab59fc1bd4</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmatrixGetRowNMaxActPosInf</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a4129b0bfe0e39fa69080d637fa1e9e3e</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPmatrixGetCons</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>adad7cbbc10a93821706df4a65d208494</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPmatrixUplockConflict</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a40300100be163321f6b908b6fc1c601b</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPmatrixDownlockConflict</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>afc420a63710bc62d721d3086520627be</anchor>
      <arglist>(SCIPMILPMATRIX *matrix, int col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmatrixCreate</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a5edb7bd5806becbb54dbbdadc12f270b</anchor>
      <arglist>(SCIP *scip, SCIPMILPMATRIX **matrixptr, SCIP_Bool *initialized, SCIP_Bool *complete)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmatrixFree</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>afc21bf650aeced1107246a7a524d8009</anchor>
      <arglist>(SCIP *scip, SCIPMILPMATRIX **matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmatrixPrintRow</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a8cfd6980720d9fb2312b07a900e099a1</anchor>
      <arglist>(SCIP *scip, SCIPMILPMATRIX *matrix, int row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmatrixGetParallelRows</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a221d075454c50be02412137fb8c139e2</anchor>
      <arglist>(SCIP *scip, SCIPMILPMATRIX *matrix, SCIP_Real *scale, int *pclass)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmatrixGetParallelCols</name>
      <anchorfile>pub__matrix_8h.shtml</anchorfile>
      <anchor>a00ae76ae59c95aa37a129ba76cd77658</anchor>
      <arglist>(SCIP *scip, SCIPMILPMATRIX *matrix, SCIP_Real *scale, int *pclass, SCIP_Bool *varineq)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_message.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__message_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__message_8h" name="type_message.h" local="yes" imported="no">scip/type_message.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_THREADSAFE_MESSAGEHDLRS</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a5b2410c3ec27e381a80bde465d7c097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPerrorMessage</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a354566c209c3a7fe5c870d4ee8c07bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>printErrorHeader</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a00951d8a68ef01d41325675b2cbf2ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>printError</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a0892c9026c04d4165578e16746a1c6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebug</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a546d1e7b57d2c434d452c1d755a44b2c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugMessage</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a827dc20f17fd394bf206451a2289292e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugPrintf</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>abcfed97d6962c490af7c0a9a53c2f2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugPrintCons</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a6438b1491a5b96a2c23ccbf23805ba36</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPstatistic</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ac2fb34672bb8b08820b6c0c2c69a715c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPstatisticMessage</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a45b8a0f3465f679226a9d2417f82b53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPstatisticPrintf</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a802405f6d9e782a414b979499c128b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmessagehdlrCreate</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a290d22611d583bd7bfb06e582aad2e42</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, SCIP_Bool bufferedoutput, const char *filename, SCIP_Bool quiet, SCIP_DECL_MESSAGEWARNING((*messagewarning)), SCIP_DECL_MESSAGEDIALOG((*messagedialog)), SCIP_DECL_MESSAGEINFO((*messageinfo)), SCIP_DECL_MESSAGEHDLRFREE((*messagehdlrfree)), SCIP_MESSAGEHDLRDATA *messagehdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagehdlrCapture</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ae20544c28252d3830a7aa291785a5e3a</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmessagehdlrRelease</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aa7f6c01a8ed02f9c374ddba25a5503b1</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmessagehdlrSetData</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>acf969c1804b7aa63cd2582b4e8bd538e</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_MESSAGEHDLRDATA *messagehdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagehdlrSetLogfile</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a9030ed039659bccaee58e11c6059620a</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagehdlrSetQuiet</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ab25bb4a84472d441fa59625586a75e57</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aa32d2296b70368017aa0e69f57953ff7</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVPrintInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ab2b03d2b1cfac6a221e3e313c66de2d6</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageFPrintInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a707022ae76e1b0400e1187715cd6bccf</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVFPrintInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a99a8eb080a9043faab9554e1f8cf4587</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintWarning</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ab73695868f29c4bc1ab097afca40de3f</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVPrintWarning</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ada5ef3a95fb0890ef3f01d847f454d51</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageFPrintWarning</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a2cd8e430e9fdf248137ae3fee8afa3bf</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVFPrintWarning</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a791011b67904bfc12f7d1d9f5cc8b66a</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintDialog</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aa50c18a94540e198c698e65bf92898ec</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVPrintDialog</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a2d36baeae3d4c48edecce42ab728fd90</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageFPrintDialog</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aef4297051261c1a21b83419e8191d8d7</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVFPrintDialog</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a8f3a4389bebe737075621d7912e7d330</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintVerbInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ae91ba98d30b96d9127a11ddf842010bf</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_VERBLEVEL verblevel, SCIP_VERBLEVEL msgverblevel, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVPrintVerbInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a1eacf320c34f0fea4b95804227acece0</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_VERBLEVEL verblevel, SCIP_VERBLEVEL msgverblevel, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageFPrintVerbInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a64f07a5cdd28229e46d2eb638b8c5ce7</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_VERBLEVEL verblevel, SCIP_VERBLEVEL msgverblevel, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVFPrintVerbInfo</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aaa42fc62e1198b2d80f87a6420170956</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_VERBLEVEL verblevel, SCIP_VERBLEVEL msgverblevel, FILE *file, const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintErrorHeader</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>afeb0523e667af37548cc96ffafa392fd</anchor>
      <arglist>(const char *sourcefile, int sourceline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintError</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a055450874acdb78d17cc5292ba833919</anchor>
      <arglist>(const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageVPrintError</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>aa38a26fd55771e57026e34406d716b2b</anchor>
      <arglist>(const char *formatstr, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageSetErrorPrinting</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>a9dfdfa262e43e04e970548b54739732b</anchor>
      <arglist>(SCIP_DECL_ERRORPRINTING((*errorPrinting)), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessageSetErrorPrintingDefault</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ae6ba2c2cda8e127f2aed4f600bb73fe4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_MESSAGEHDLRDATA *</type>
      <name>SCIPmessagehdlrGetData</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ad0bfa8fde9490ff208e6f399ea5ad949</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>SCIPmessagehdlrGetLogfile</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>ada39fdbc87a147952565e4a7fe8f670a</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPmessagehdlrIsQuiet</name>
      <anchorfile>pub__message_8h.shtml</anchorfile>
      <anchor>abd8171c4fb505ea0cad40b3440620258</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_misc.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__misc_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__message_8h" name="type_message.h" local="yes" imported="no">scip/type_message.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIPisFinite</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>ga1c0f12e349cb69625d9d7fe9441c47b5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPstudentTGetCriticalValue</name>
      <anchorfile>group__STATISTICALTESTS.shtml</anchorfile>
      <anchor>gabbc2aac2e8da59dc39207b52c2cd6f16</anchor>
      <arglist>(SCIP_CONFIDENCELEVEL clevel, int df)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomputeTwoSampleTTestValue</name>
      <anchorfile>group__STATISTICALTESTS.shtml</anchorfile>
      <anchor>ga7064c16870f32a36aa3f0d657b397b06</anchor>
      <arglist>(SCIP_Real meanx, SCIP_Real meany, SCIP_Real variancex, SCIP_Real variancey, SCIP_Real countx, SCIP_Real county)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPerf</name>
      <anchorfile>group__STATISTICALTESTS.shtml</anchorfile>
      <anchor>gac23d54a5cc0ea1b0e70c777bf6c831a0</anchor>
      <arglist>(SCIP_Real x)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnormalGetCriticalValue</name>
      <anchorfile>group__STATISTICALTESTS.shtml</anchorfile>
      <anchor>ga81724aa0b1eb0f9e7124ec8f9867fa9e</anchor>
      <arglist>(SCIP_CONFIDENCELEVEL clevel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnormalCDF</name>
      <anchorfile>group__STATISTICALTESTS.shtml</anchorfile>
      <anchor>ga3b4a01a122602d563e49b58f3e6c6c61</anchor>
      <arglist>(SCIP_Real mean, SCIP_Real variance, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteNode</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>ga40fdd8619694bf8e0b5d732d4228231b</anchor>
      <arglist>(FILE *file, unsigned int id, const char *label, const char *nodetype, const char *fillcolor, const char *bordercolor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteNodeWeight</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>ga37dd36258f0a9b3c6cabde117b9a8dc1</anchor>
      <arglist>(FILE *file, unsigned int id, const char *label, const char *nodetype, const char *fillcolor, const char *bordercolor, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteEdge</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>gaac2a4633be2d428b9a7723bc826db9fc</anchor>
      <arglist>(FILE *file, unsigned int source, unsigned int target, const char *label, const char *color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteArc</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>gaede0b40b61c571e5f07e05aac3c3ead7</anchor>
      <arglist>(FILE *file, unsigned int source, unsigned int target, const char *label, const char *color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteOpening</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>ga739cfa7343d0c4e840c8ce5cae472215</anchor>
      <arglist>(FILE *file, SCIP_Bool directed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgmlWriteClosing</name>
      <anchorfile>group__GMLgraph.shtml</anchorfile>
      <anchor>ga47a94f613724a22ee73899487bf7e010</anchor>
      <arglist>(FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsparseSolCreate</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga6ea4184cea0a17d2c95a60469ff49fcd</anchor>
      <arglist>(SCIP_SPARSESOL **sparsesol, SCIP_VAR **vars, int nvars, SCIP_Bool cleared)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsparseSolFree</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>gaa1912d1552fc9e04caa3fb5803bd9bc9</anchor>
      <arglist>(SCIP_SPARSESOL **sparsesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPsparseSolGetVars</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga7babfe1bb55c4298018f2a22ecca59cd</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsparseSolGetNVars</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga0bcf8b0410606ec598b8b6050f4fca5a</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint *</type>
      <name>SCIPsparseSolGetLbs</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga6cc8487e1ba6b74d4b09bfb977eab897</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint *</type>
      <name>SCIPsparseSolGetUbs</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga1a64ad4a509c455337393ae36465bdd2</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsparseSolGetFirstSol</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>ga56a6b00fdcf3eefa804e814f7ee2ea46</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol, SCIP_Longint *sol, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsparseSolGetNextSol</name>
      <anchorfile>group__SparseSol.shtml</anchorfile>
      <anchor>gaed7a10e2bd49c6b18a16e98d37174498</anchor>
      <arglist>(SCIP_SPARSESOL *sparsesol, SCIP_Longint *sol, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPqueueCreate</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga6dc8027538f4898c89fd5b66a2a2690c</anchor>
      <arglist>(SCIP_QUEUE **queue, int initsize, SCIP_Real sizefac)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPqueueFree</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga4fee7625e3c63c4fb57e3a361a1b48a7</anchor>
      <arglist>(SCIP_QUEUE **queue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPqueueClear</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga94edad9c6fbfa1c8c09524964b1a677e</anchor>
      <arglist>(SCIP_QUEUE *queue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPqueueInsert</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga9d95806f2a0e8d2838f9f46fa691db2d</anchor>
      <arglist>(SCIP_QUEUE *queue, void *elem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPqueueRemove</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga3bc00e0e5b0b021aa2a4fbb411da1b7a</anchor>
      <arglist>(SCIP_QUEUE *queue)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPqueueFirst</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga13e91e15b6261afe9c85c946a2387fcd</anchor>
      <arglist>(SCIP_QUEUE *queue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPqueueIsEmpty</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga9e7f67671f7c29586116d525253201d7</anchor>
      <arglist>(SCIP_QUEUE *queue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPqueueNElems</name>
      <anchorfile>group__Queue.shtml</anchorfile>
      <anchor>ga1c13ac7b52e54fd467517c61d054eaac</anchor>
      <arglist>(SCIP_QUEUE *queue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpqueueCreate</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>ga0ff8c437c92612853adabb903362fe17</anchor>
      <arglist>(SCIP_PQUEUE **pqueue, int initsize, SCIP_Real sizefac, SCIP_DECL_SORTPTRCOMP((*ptrcomp)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpqueueFree</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>gabc7da0a14aba48a1906ab62c872ca062</anchor>
      <arglist>(SCIP_PQUEUE **pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpqueueClear</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>ga7eb08f5cc4ffe7845de3433b892e632e</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpqueueInsert</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>gad786b28e3b3f418aeaf93bd43dae8d8c</anchor>
      <arglist>(SCIP_PQUEUE *pqueue, void *elem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPpqueueRemove</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>gadfc279ce0751db7702262ffe6e45f911</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPpqueueFirst</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>ga52edb6c94c11d3a4bae5d7ce9449ed9d</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpqueueNElems</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>gade8f0e94c24f95e49768652303f6cd64</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void **</type>
      <name>SCIPpqueueElems</name>
      <anchorfile>group__PriorityQueue.shtml</anchorfile>
      <anchor>ga3233b5a2a37b51a962e2bfdd9339bd3a</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcalcHashtableSize</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga88998585e83f8b9634e3de30c0064b24</anchor>
      <arglist>(int minsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableCreate</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga710093a3fde556c004b45e027fc95544</anchor>
      <arglist>(SCIP_HASHTABLE **hashtable, BMS_BLKMEM *blkmem, int tablesize, SCIP_DECL_HASHGETKEY((*hashgetkey)), SCIP_DECL_HASHKEYEQ((*hashkeyeq)), SCIP_DECL_HASHKEYVAL((*hashkeyval)), void *userptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtableFree</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga196b167ef57e488adbf52344f6230285</anchor>
      <arglist>(SCIP_HASHTABLE **hashtable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtableClear</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga4469d030912856aa4da7a48063ab58d9</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableInsert</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gad499ca1ae44ec958411757d0cb8c2f74</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableSafeInsert</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga52179ec979e131317ffb07c9c9579ccb</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashtableRetrieve</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga38af5e199e72c2d1e9e30a50b92f02de</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *key)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashtableRetrieveNext</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gae9c4d7208c3f38957f8eafa1094410ca</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, SCIP_HASHTABLELIST **hashtablelist, void *key)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashtableExists</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga21e69c964ab3785e1aaa36b2af74c720</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableRemove</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gad1088f82af9c0d3c1768e40aff2eb588</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtableRemoveAll</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga8942889cec8c64206cf464f75f720e11</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPhashtableGetNElements</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gafd5202e03bcde6fa474a0653cb48687a</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPhashtableGetLoad</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gaa0de9e7fb99eaaa3c862ed0030ddaa6a</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtablePrintStatistics</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gac2acac23d58b25c23bbc71f48d57b256</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga52b1c0d0843ed79188f9372f1a5a6965</anchor>
      <arglist>(SCIPhashKeyEqString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga8c05b46e1e9846136e6db221a663ae91</anchor>
      <arglist>(SCIPhashKeyValString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHGETKEY</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gac7536110cb0a283654d0a5bb3d1cc6d7</anchor>
      <arglist>(SCIPhashGetKeyStandard)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>ga115b44ec1cfc1e7dbe8aefb95e293734</anchor>
      <arglist>(SCIPhashKeyEqPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>group__HashTable.shtml</anchorfile>
      <anchor>gabc4946f129b5b4672d259235fd22c021</anchor>
      <arglist>(SCIPhashKeyValPtr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapCreate</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gaa89c4efb224675b9eb02d8077d66b589</anchor>
      <arglist>(SCIP_HASHMAP **hashmap, BMS_BLKMEM *blkmem, int mapsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashmapFree</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga0608b946119ee33eddccdc7e11b536a5</anchor>
      <arglist>(SCIP_HASHMAP **hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapInsert</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga6c5891f54d8ad4b6687fbf656f7c790a</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin, void *image)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapGetImage</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga94d0a3d1317bd2c826aec734dfe7a578</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapSetImage</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga775b2bba1e36c6d7a6a88bad540cd829</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin, void *image)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashmapExists</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gaabc086ffe2d5d7a30c78fb6801d9824d</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapRemove</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gadd88c803cd5317b9dd4d3cb67356c697</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashmapPrintStatistics</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga449a592a52acdd69246f24ba02b710b5</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashmapIsEmpty</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gaaf786e6a1c5f570160cfbf980712ec97</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapGetNEntries</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gaa42e2b5696030d88b617b59635bca41c</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapGetNLists</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga1c23f5d8b09596f36095c538a3ca8b90</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HASHMAPLIST *</type>
      <name>SCIPhashmapGetList</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>ga1b4928cccf29294eb7a0eef8d513eaf0</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, int listindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapListGetNEntries</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gae5407947043ae5775285811aaca21ccd</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapListGetOrigin</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gae36533115853982dbe9abf07a66dbf4c</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapListGetImage</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gae6e3eb18475b04851577aafe1be61b41</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HASHMAPLIST *</type>
      <name>SCIPhashmapListGetNext</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gad112643475175485603d47d85a9a5839</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapRemoveAll</name>
      <anchorfile>group__HashMap.shtml</anchorfile>
      <anchor>gabe91bd21dcc1028a65d2dcde3566ec61</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPactivityCreate</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>ga35cb820e86220272113317077ac2ab1d</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY **activity, SCIP_VAR *var, int duration, int demand)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPactivityFree</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>gadcb2d60a115167c46a0ac8a303f7c2da</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY **activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPactivityGetVar</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>gaeb378f5caf6fcfa26956455f469a41fa</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY *activity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPactivityGetDuration</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>ga778948d89fbc5e213c340f2c5eb54c9e</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY *activity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPactivityGetDemand</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>gad490e91d9eba4df4009054768850458a</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY *activity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPactivityGetEnergy</name>
      <anchorfile>group__ResourceActivity.shtml</anchorfile>
      <anchor>gab94f4fc18e475b6b8e4d23d841836efd</anchor>
      <arglist>(SCIP_RESOURCEACTIVITY *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileCreate</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga7658a32b854fc5191b46810bac73d9d7</anchor>
      <arglist>(SCIP_PROFILE **profile, int capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileFree</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga7016b24a2aeb343ad69769b24a784e65</anchor>
      <arglist>(SCIP_PROFILE **profile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofilePrint</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>gafff0f400acc43043f90ccdeaa31c4371</anchor>
      <arglist>(SCIP_PROFILE *profile, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetCapacity</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>gaa8237b33dacf4c3be8b3b0a76d529509</anchor>
      <arglist>(SCIP_PROFILE *profile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetNTimepoints</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga6eaf94363c61b860d3cf903184ac0a75</anchor>
      <arglist>(SCIP_PROFILE *profile)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPprofileGetTimepoints</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>gaee9132728b61de6b1b471576abf7d2c9</anchor>
      <arglist>(SCIP_PROFILE *profile)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPprofileGetLoads</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga276aa1ac0079173408930a4f08d99347</anchor>
      <arglist>(SCIP_PROFILE *profile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetTime</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga7f086df0784e4b626fce1ce93633c2ce</anchor>
      <arglist>(SCIP_PROFILE *profile, int pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetLoad</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga727e8e5ea628d6b362a26a37d2e5226a</anchor>
      <arglist>(SCIP_PROFILE *profile, int pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPprofileFindLeft</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga68720f965a76eee6dfc162046a95b428</anchor>
      <arglist>(SCIP_PROFILE *profile, int timepoint, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileInsertCore</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>gaf308709a7674e108464c10a1d92c8b66</anchor>
      <arglist>(SCIP_PROFILE *profile, int left, int right, int height, int *pos, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileDeleteCore</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>gaab71bc5b7a851f7ac5883f44b22469f9</anchor>
      <arglist>(SCIP_PROFILE *profile, int left, int right, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetEarliestFeasibleStart</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga7a794ed1a686c2a98dd050bc652d6ac8</anchor>
      <arglist>(SCIP_PROFILE *profile, int est, int lst, int duration, int height, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetLatestFeasibleStart</name>
      <anchorfile>group__ResourceProfile.shtml</anchorfile>
      <anchor>ga2a0158b4eab283ed62ef510a2950b8a3</anchor>
      <arglist>(SCIP_PROFILE *profile, int lb, int ub, int duration, int height, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphCreate</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga68c7db9e3c65586baf542b0a681cceed</anchor>
      <arglist>(SCIP_DIGRAPH **digraph, int nnodes)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphResize</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gaed650d35fc68d98e3fd48c16447d388b</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int nnodes)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphCopy</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga32c22d7006b40ce36da378ee84b4ddb5</anchor>
      <arglist>(SCIP_DIGRAPH **targetdigraph, SCIP_DIGRAPH *sourcedigraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphSetSizes</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga81ba8c7a2c21ce9a3975101c223d0c22</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int *sizes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphFree</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gab48ddd30f440bca80a4602e0a6a47df4</anchor>
      <arglist>(SCIP_DIGRAPH **digraph)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphAddArc</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga57cea2a4d30a00fda1660a4da0e52646</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int startnode, int endnode, void *data)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphAddArcSafe</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gaa616fd8ee564c5974bf10b13e25bfda1</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int startnode, int endnode, void *data)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphSetNSuccessors</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gac7711e70983856e49e8c8a4fac6310f9</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int node, int nsuccessors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdigraphGetNNodes</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga32f09fd970e3c01855899e2065099e82</anchor>
      <arglist>(SCIP_DIGRAPH *digraph)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPdigraphGetNodeData</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga83bbfb239e98b6115abdb4b4b2de2aff</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphSetNodeData</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gac2911f35227893d529f0ee08cca3b5c1</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, void *dataptr, int node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdigraphGetNArcs</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gab5dff47ee487760c0435dd2077350576</anchor>
      <arglist>(SCIP_DIGRAPH *digraph)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdigraphGetNSuccessors</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga1751a9c083411bf978c188dd641335ce</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPdigraphGetSuccessors</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gafad223a2ce7651c447839fff8838078b</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>void **</type>
      <name>SCIPdigraphGetSuccessorsData</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga6552ad569fee1118499c0a93e85b9ef7</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphComputeUndirectedComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga176d6f151c867099d3abb72a27162d97</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int minsize, int *components, int *ncomponents)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphComputeDirectedComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gaa05682b222da4a996ea685bc5c7df6ef</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int compidx, int *strongcomponents, int *strongcompstartidx, int *nstrongcomponents)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdigraphTopoSortComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga653be9d81f37690d8c07f89d9c9acdb3</anchor>
      <arglist>(SCIP_DIGRAPH *digraph)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdigraphGetNComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gae960bbcc88860724b3f828bdf399f7f3</anchor>
      <arglist>(SCIP_DIGRAPH *digraph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphGetComponent</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga4e6a88c42edc4acc4f0bf5c9db23b797</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, int compidx, int **nodes, int *nnodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphFreeComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga1524af78e159bf5d824eead5f05ad883</anchor>
      <arglist>(SCIP_DIGRAPH *digraph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphPrint</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>gab8a3d3a074d491cca1dee036ca0072eb</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphPrintGml</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga3ea0abd797b16f531140bc168d110f7c</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdigraphPrintComponents</name>
      <anchorfile>group__DirectedGraph.shtml</anchorfile>
      <anchor>ga03d523ddef7f34ce789ea534ba7e623f</anchor>
      <arglist>(SCIP_DIGRAPH *digraph, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbtnodeCreate</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga78b8df73d8d2debaa3b8fc7554ec07a0</anchor>
      <arglist>(SCIP_BT *tree, SCIP_BTNODE **node, void *dataptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtnodeFree</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga39882d686b9bd60daff109176cf6ce5a</anchor>
      <arglist>(SCIP_BT *tree, SCIP_BTNODE **node)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPbtnodeGetData</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gade68a6c291b771f559d09f05b55ced08</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BTNODE *</type>
      <name>SCIPbtnodeGetParent</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga6a077eeaf2e1446fa4331a017ce56e9b</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BTNODE *</type>
      <name>SCIPbtnodeGetLeftchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga1091966d7b12b66985ae733b5914e8a2</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BTNODE *</type>
      <name>SCIPbtnodeGetRightchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gaaf12d817c5974f80442791b0d1ffa1b2</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BTNODE *</type>
      <name>SCIPbtnodeGetSibling</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga948a96e770be5cd71e775c4ae3f9bfef</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbtnodeIsRoot</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gaeb5f97aba4aa991030df3fc487eb9297</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbtnodeIsLeaf</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga3d6b929fee8148871a8bc17de0c734b1</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbtnodeIsLeftchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gab09a39fc1856c3253c025c9715206376</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbtnodeIsRightchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga79678bbe8032b08224c059e8d180131e</anchor>
      <arglist>(SCIP_BTNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtnodeSetData</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga5071b8644fef886a3f7c63e1aabfdc61</anchor>
      <arglist>(SCIP_BTNODE *node, void *dataptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtnodeSetParent</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga816b2c27020a5c7af8ec6fb1334a38e1</anchor>
      <arglist>(SCIP_BTNODE *node, SCIP_BTNODE *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtnodeSetLeftchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gab6a14881d02b367b50684023ad71a7ac</anchor>
      <arglist>(SCIP_BTNODE *node, SCIP_BTNODE *left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtnodeSetRightchild</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga0fac029daad26ca276ad688da26b55fe</anchor>
      <arglist>(SCIP_BTNODE *node, SCIP_BTNODE *right)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbtCreate</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga32e635b4ab57ff19c4d32b51fa96bcac</anchor>
      <arglist>(SCIP_BT **tree, BMS_BLKMEM *blkmem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtFree</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gac1b4e34e5acc37a698808c40faa15d25</anchor>
      <arglist>(SCIP_BT **tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtPrintGml</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gaefaa788143db4f31938c216c7e7868f5</anchor>
      <arglist>(SCIP_BT *tree, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbtIsEmpty</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>ga1f7787ff2552e406d6b64069566d4e65</anchor>
      <arglist>(SCIP_BT *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BTNODE *</type>
      <name>SCIPbtGetRoot</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gaf0abe2ecae545aeefd155a36acdfccd2</anchor>
      <arglist>(SCIP_BT *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbtSetRoot</name>
      <anchorfile>group__BinaryTree.shtml</anchorfile>
      <anchor>gae277f19032b7baf8fd0078dc3e2e09c3</anchor>
      <arglist>(SCIP_BT *tree, SCIP_BTNODE *root)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab19fb986ed7bd7eed096d85e62366249</anchor>
      <arglist>(SCIPsortCompInt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsort</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaac0e97a29d3007027bb1b4b9ef9b0ac2</anchor>
      <arglist>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0c1fe0f152d7e0b502d39b0425bd9f32</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga103836cd14d6a053128195fc7c845cce</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6a2f7719f1552e87bf42aba67f1864a7</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadcf9f22a04f1a2b4a18cedc2c6ef6300</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaaea12378fbf19d942f8aeea2617db398</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac2e61a64b363fc56dff42ea3d416f903</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa03ed019c7693a292dcaf8870876262b</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab093c601bdf585ac1dc6f592559335b3</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad6c8183185b0653df229df6fdd8f500e</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf4ff38122998151b620c4c8a8cb7c02b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0e990464910f3ec7e9177d318d8a13d4</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga04fef28d6d8b510f279cdba0402c4835</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3a89ea948900a2a8f8e308f5becb9379</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab09640f84657f886cc841369c980e9e5</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaac079b7a19c09e6b09a15af0798fc288</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae7d9ea0b11b91644bb98dfdbff88aece</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaaece7fe23fb40bde9c03a4bae2015152</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4adc99570f578746a1494d919e112117</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gada40be5d3ae456b7661463fc5fe649c9</anchor>
      <arglist>(SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3aefb5a6ae0b10e1cea32b684aa0269c</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga895f33e4a5924acc56132a476aa1e72f</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaccc10d8f38da571167063d7ffd58617f</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8accfee6a02f170a465b9c0466523a26</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae6791f2300abc5c4b2b0e2ee86c97fee</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae38ed4f13a26993f24d9e019c0414329</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga509c605bf0b52a1a8f4bf4ecf51193c6</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga88fc3a2f0c042af2b5c3dee19313eae7</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3af142a98e5b1efbc4bcc3097b11c578</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9666bab28bc49463557807e12b67b3d9</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga87cb27343958974d876925813c5bf52d</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf7117ac571f15acd749a3a29690bb23c</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaaa964d0415f1bf73405a1b2a292c60a2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga50fda9c79356fc79b71598db49c9fe27</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae90b24b1929ed56f59af0a9f1f3e2003</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafebedfcb716eaaa657216bda67d301b6</anchor>
      <arglist>(int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1459c044f3f78d257a8ec7aee731d5c9</anchor>
      <arglist>(int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga61f5e6c0d4b1bc21d024e32537741509</anchor>
      <arglist>(int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8869d8fe40a7dd7e977d70265dda0431</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2b7175014b131510a6b3cd77faca8a6e</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4d46cb7f885bc61f09266f59be88615e</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0677776b4caf087af2b2fce521926088</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaebfffc0e592706e78299db4a6b2adc7f</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6a126e14098adc085f3ee9f55b9c8c8d</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1d2463a2f2369a8abd8886927242d537</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga970523d02bc05f866652eaf97c42953f</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae15ccdf62d59b3384f72656ed0848069</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9538fe598b57ec44a3d80cfb18094440</anchor>
      <arglist>(SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa12c12f4875f5297607b53fcce5078c0</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7e4919b0b7d0459d9d7a04ca40541bce</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga60ad9d0f47f519d1a2fd1e84d787b2da</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa59f9cf4c99208ae037431456f1eaaf2</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga815d17d360accc8ebd7cdcee40b7fbed</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8e73c014a70752547f7aed211f268b20</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga22eff78752d127b97492bbcb70b66c43</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3bc9e484cf827b8061b60bb5723a4278</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7cd183599f5fdaa9a04b2c30c6c520aa</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9149039ad799eca87926af742bce2615</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDown</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0d7c86da256aedb5fa4773376ac73e54</anchor>
      <arglist>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafb82dba8399e90104928045d683f3b48</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1d8fe6915a069a8c1e9af1fa18be54a9</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae3e65d3151ef6438ec2e75ae5eac544f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga411d1af78dca509d0341f297f13526d0</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4d581268144e15363728a08b90a1d124</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae14243bcbee05b69985fb4f53a57eb14</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad961a8f2a993686f622cc54779c1dbb7</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9c82a6ec22c88c581fe469d62d7bbff9</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac3ade0b7a448c8cded9d0441ad58f94b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga186399601a8f141b3fa80daa86325044</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3f4625f35544d81cf6dd9caace7290ff</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga83c769947e7a805ac08faebc9aae624f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga43b302ebc8ac0ebe0f63ea157d26a51b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga103409100475e1f3e85048bbe7349c99</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga35b424caaa96ce63e41cc0c6275700c5</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab43cef21fdbf1c9c17dfde17598c0c4a</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1db3f9de34af7bd405cbf5c50f74346d</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa623c01168142d857c65130066ba26ff</anchor>
      <arglist>(SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga84840a187b87bd89c6fd1c7884013b99</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadd4f5e75a6b3302b8f95684bd73a8889</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1baa5680a01a45dc0348e41f2213db96</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga993756b97de88ce3905b70c4916b03ea</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2e907842a928670151b66d0dd0e3bcc8</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9479fd1bd7c85ee7fc8edc1c3f938e53</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga817a57f4c3b3093c0a3c40f678ecd0fb</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga696e143ef9925f77d8b4de12ac3016ac</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaadec0881bdfa6a228e0e666a7490a0c2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaaf4a84d4a734bcebc99a4420738e5e3c</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga50532e082cb45f17fd5bccf1b242e785</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4052498e105a5fd110f63d9fff7cbf0a</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga332bb52badc574cb381f44acc91b5651</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa98f80c21490cc4751fd2032348a0f0f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga589ec60c40380dd034c1704c0ceb29f1</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafc2c490292d72a2c0bba1643fcf327a5</anchor>
      <arglist>(int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga01925789e2248eb75d8285ef887e0640</anchor>
      <arglist>(int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga55b71add7fd01d9b377f78a42d16cc64</anchor>
      <arglist>(int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafe3012bbb5eb43bc8757afccafb82d03</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8011151ff7cec8ee757981bf65ae6b2a</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaea667c42803705ecdbcee0f5a8248540</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga775d4027f044f54761709621a1efb26a</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3264e0be63d9cc1179183ff0185057c7</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2bec5a6855cf1369a4a15ae1a61810ec</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5a707cc37a369b0b4cc32a88f62aa552</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga31c092ded149d84097c1b16b6a5190a5</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga65b6dcbe8e2a19882877f75ca0b3bf7a</anchor>
      <arglist>(SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga02c0c212fcce997d7fd828cba495cbbf</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafbe313d646e84532917af8565963b57d</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga452ab65806aa320bff3720b7b4b28122</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3ca8afb62ddbfd1f33e99b9d1b500af2</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab4fd456883d9706d81aa702025175de1</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5472b21dca58ff8bb22c87182ab9644b</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga643e99ceae9a6dc322f115c435dd9af5</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaabf37c20afcb335e4ef35d12e955804a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae46567014ded78d5a0ba4174e0182af1</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf03082c708f42cd3620e034238c79ee7</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadf69871e9d63b3bacc124e080afdc1d3</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad2de8244f70b7d8ed2145f4873d0f827</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga82b5b776c82e6ca892eafaf7412c6f73</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab7645aaebf00eb16762f1a77a6ec43a2</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1a2d6a8a92817d3043c49f76009a6110</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga287aaa7fb850a94b01c93da3ecc69053</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4e5b8f75079c59ef65f0822de4c4bd3a</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa6f2603ab94a9210cd0bdd9b3fbf5b9a</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga80b50a0a5c146811614ee72588c958d2</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, SCIP_Bool field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5a96ba0027ce1fb1990706d22a761bdd</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4eea85f0cafa05790ba41f868d4ccba9</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7c9b63e9f81d3abbd37f0d4f4778a32f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad39babe7886a3935819a7a8cf47bb03e</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae553cc51ee93cc46ddf9b17864356af6</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga488440566e7c8bff45ab645cb0e35a14</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae86ae870f9a6ce7955c47b49ad6d75a1</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaeaeb6ae4678972440ef6c584b759d855</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa1a64ea9660b48b17ab44fe1a019201d</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_Real keyval, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7bd94818f5da6aa73570287156de782c</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Bool field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae418cfc3d7edf6b841e3b41c05396db8</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3366a4cd7ae4a55d7ca431d7cd88b695</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6f3fa13f984b8fd47cc437a0986e0eb8</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga16f59970bfb334d816b41121c332c4dc</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, SCIP_Real keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf2c7e0b280b46ceeeb6af669a6e46ecd</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3787f348b6be92d6aacaea1b7af6d472</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa021f9bbbb629a05a94d9bc9578b4dcf</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Real keyval, void *field1val, void *field2val, int intval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae1a157e4781b1a108449aa2e6f25a8ec</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Real keyval, void *field1val, void *field2val, int intval1, int intval2, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3c2fd41694250800a33788757796766a</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac3edc085b2c5f73d7903297fc37b07ea</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, SCIP_Real keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga77d4c8c22de99edad167eabac9726137</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae42f95467cf1997a7a4a860abf197566</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga21db09a67cbaf2e5886207f85a5dfba9</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaac1815c064931394cb0b18d6b8cf4664</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, SCIP_Bool field4val, void *field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6fa297c0cd844c08ddc3c3f79a51e4ca</anchor>
      <arglist>(int *intarray, int keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf8bde4b5fa0673e8762d6e24d0a39e99</anchor>
      <arglist>(int *intarray1, int *intarray2, int keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga77913089a99756fe6d7ce65135ce05ea</anchor>
      <arglist>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8b02bc8614dceb22e56a4fef399be177</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad6e23029376ac733381d4ed263d17168</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int keyval, int field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga51aea5f6da2a3c8ab3685739f6f4b0ff</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0b94979d8d5cd5ce5847d21e9b4dd12d</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gacf26beb3678a84f4572a6d72c65214ac</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2974b694dd67accbfbe698acd3c9d06c</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab375f6f88b3cc95fc3aa1d6543641a5b</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int keyval, int field1val, int field2val, void *field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga57ac5b926580b9d84029021b208f0553</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int keyval, int field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gabf59db0222c9f6417812e55250ad5668</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf19299232a058bd53f2a21d41c415e60</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga906ab8c78435d189f9e5bca3b97f694b</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7c6e98ed28a19ddd0d6410b3e58ce580</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8b9b2aac4a28c87a0e2d22a5f65578cd</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8d578aca8107caf59dcdebf202ebd1b9</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, SCIP_Bool field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga533ef5c1fba06474716d706f27158145</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, int field4val, SCIP_Bool field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad4fad2efa21d170b320dec6726219942</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga864aaaff34e17870f10b2fe8cf96ec4f</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7ed6f2c5ff651a751d1e6f2aedf313f4</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0ef7201c7a2227f9090045b124728712</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, SCIP_Bool field3val, SCIP_Bool field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8e191e75eee6196024aaaabe93b3313d</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int keyval, void *field1val, int field2val, int field3val, SCIP_Bool field4val, SCIP_Bool field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga59c1acec2d250b84864f2e81956b7359</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaca2423e91bda64b8c7d25a54215ca3d1</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga835ec50c9f25c7ec2a416608cbc4fcb2</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa40de1dda2d8f402c0dd9a53e7cc2e38</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9d22da9fb1bfc1dc07a231b97d9d4b6f</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8f9a20c55090d404759aa36b006cffbb</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadf9daca125ab208b56bc77567aefcaf2</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad1b76a2f7426a3e41c2c14ef9dc9ef03</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4541db9ebd9ed40771619b27314ec12a</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, SCIP_Bool field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga82d01cef246898127613355ecdf89731</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga67411e7f96d4a88b59a496f9cafd4ea6</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga77ccca73a88b559d5f312a3deff81f55</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa58a2ef0e974d10bf0925ff1336de2f3</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac3bbff9dd9ab9bbbd8455c318f4f4ee9</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5c8d673903ad3ed76c109b09674b3580</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae0039d522a36fb292a1cec8084e45bc5</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae9ce0f43e93974b7d3a2e0a7a7ba432f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga08af98bef2d270020bb6964df08ff23b</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga41609bb513ec30972367fc640933211b</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Bool field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga98b6f1db459fe1f12b53be84532759e7</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6b3e2a2ecba8507c87c9f1bd2188bbff</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, SCIP_Real keyval, void *field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadf3bad34197d77b4853c02c9d4f18741</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8f002427b3b8973203bdc081525fdf47</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_Real keyval, int field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafd667e4e16cded8c1d9d67c1b1c0b9c0</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, SCIP_Real keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8a6797db23e8da203fe1f9f9d02158f4</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga887380ecc2746bbba42600646353c91b</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9387717c5e3e2d2397ecc0c69ec36a72</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Real keyval, void *field1val, void *field2val, int intval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac863ab031ebba08275ba5d6ffd262b4f</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Real keyval, void *field1val, void *field2val, int intval1, int intval2, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaabc89e8de0a2063d10d543edb0c0c00e</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8ba1f592f43ebb5d99a990e0e7c03bc2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, SCIP_Real keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaac4e81ec52dd6dce9abae8b862f4787f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga84b7efbe85e6d7b702c4d95271b660c2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga716f0b942bf42cc6256aa15b39bb1a3d</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga10f377143e98907929ca3e079482c49d</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, SCIP_Bool field4val, void *field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2eca02f3a209a20d499a54ea95940dd6</anchor>
      <arglist>(int *intarray, int keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad08f8787f4e8d9a62367554b6e6be8ee</anchor>
      <arglist>(int *intarray1, int *intarray2, int keyval, int field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaad293029f7176106c15d49266c1eadbf</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga02f50ee8d91d6725adbdef669a116c06</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int keyval, int field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga722e49d273149c8152fadfc94d2bed57</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gadd1de4af1e54953ae8711c39437ee840</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga186d21e8b10b0bc88971a515491277fc</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4e355ecc8d97dbe5563f393a9dbd70a5</anchor>
      <arglist>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga01064f36ac0aaae67a60841fc8181ef5</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int keyval, int field1val, int field2val, void *field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0783bbb5c9598db7aecb046a70c38b31</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int keyval, int field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa833d6a0de51cb62c438c97781a64c0c</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1ef18ae0406b43543d11b536cf174615</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6444f96368f219efc569757c1132d597</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga922eef52b308bcba9254755bb436f18a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7578a3f3d29473f85e6eab3b6d23ca84</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga70878e39db5ca31aa39b74078eaed71a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, SCIP_Bool field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga670bdb3eb7a949eafb359da3a8d322c8</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, int field4val, SCIP_Bool field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab8b6a9160e87c4a0f0e376c57f4ebadd</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0350b5e2e3649986aae703e2f3219920</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2225627a6cda4f7e0c156f163f1e6ef8</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga03809a9e8378a46a3932dec87ad6d7f4</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, SCIP_Bool field3val, SCIP_Bool field4val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6bd6236a63fce88b0a719841257076aa</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int keyval, void *field1val, int field2val, int field3val, SCIP_Bool field4val, SCIP_Bool field5val, int *len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1ba6bf2635678490757beddc4f0bddc2</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf6dc99f91f5c829fa749a7a997312b22</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0e84353cc889e5f4ecf7e462e7df81ca</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3ac75cc1ed130558bf1bb5e00b84b512</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad40dee1c116e8b6a50dcfa934c474702</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad92cce5a5af6dfde39eccb9c7bff7358</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaedc1ba8d1e287bfee8f327b46e1bf78b</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafea706371cf2046c34058e9f1c81b4d8</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae139cf70ab010a707bf324a82191d6c9</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6a605a457ed0de0f66ca95ca5c270a0d</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2bbd853fd6e2651a7f61b00833b5873b</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga78eb0357ed2ea2ac2e32962ec6f3549f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga019adafef0cb45339a5f171d0a0fc547</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga969950b40f484a95464e77834e01196c</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaec24a5a4635f621a2f051afceded8c84</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8a8d0602f705d27204adcf898d5e77cc</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gade80bc2016ec8a9c584744cae523c856</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad21c9cc987f9d1cd2fdb72857a2c55fe</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga898b63b8acd39bf2a668058fe5c9778e</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad213474e1a49139686bba95381f7d97f</anchor>
      <arglist>(SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa1847c5736a91aea66b0f1f0baf996fb</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga41c6f424906a7eb01e9d29c2859c24e5</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1969ee389ff9b79a83460099b15abc33</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga86f1334392ac82a6379392e6a6e5d0d0</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga09ca0b7aafd09cbb1f1e09fd1249615d</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafb455ab548c1af658dfb16cfb49ccf9b</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf06f320595327fdf006dc3f6df82e51b</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad2c530ed9592706e68bf3f7be4783971</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae00d52da1986de23e78badd586d54df8</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9a4907c0ea7cf6def5583fc2bc974448</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga933e721d0a2519df9080cb441e4bbc0f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf27dab7c724c9497338bac04b1f076af</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaea716937a0ecc8f54152b3c81399721a</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafe873202aca60be08d4fb19542ef89c9</anchor>
      <arglist>(int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8a710d458fa14f7c263497abfc82c6ba</anchor>
      <arglist>(int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae8864d8fae67aa06173a7b2ed7292806</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5cdf19876b8a3c6e183d2b958d9d8daf</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga077cfe1b5b9e2d490d67df8fe1eb280c</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaef5e46a1e943300fc1a8c26a6aa2841f</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaafd698c3897a06e8782bb8f6ac6bb388</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga12bc163a41c4f16603e4462d0c6bfc31</anchor>
      <arglist>(int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaeb4c1cf463b06c90f3f637997755d6c4</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae85b5fed9f87f736b3b93301e4198092</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3bb95046ae00481c7df0d7728d8c8835</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafba6dd480f1e08b7bd8c386fd43e9fcb</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga761d8b092913e063d05b543434013e89</anchor>
      <arglist>(SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga97ffb8d73904d1427da32adb9b2be1c9</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae4bdf5ad1bc8297b852357cda0e9736c</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0be3e7579337c65f9b04ce915fb9e12d</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0f0821b4140658c5de00134ddd4d2699</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga44260295f28fcfefc9ce852150cf97da</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaae3667acc4ee15633552653bd26c8960</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf6b4e245d8095e5721dfa66d5a28a76a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3943216cbc8a77f7e25e4924498f1ba2</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1386edd6064dde380fcca13aefd58a51</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1088531fba7ccb9e41d106ae386b3636</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab783363ddf2ba340e97bf6747f264dde</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab0954e7426d6d10c3a5ae9401523fb55</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga85ca287644b79a49fd3c8a51610df492</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad91c1063417430d845afef76d5287057</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga284ff994769f2202645978072574e8ce</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5d4e68ac26b60202866d7ccf87fd144c</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga59e24d77be67e1c6f8147686e5920360</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaf9cef7d7ef0f503ef0a99b7a6af9afb6</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga054a7cd9584a0c6310c86b4d56ba2597</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4f310645c6e36ec1a873e090ddeedd8e</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5136ee892cbf64cdaf587243acf04430</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa747a6fd7d072338e1e59432168498fd</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac418640b93b72ae5f6249b6a7e821f1b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8e0b61e8be8c0b136b036dccec6acceb</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gafbe12f544ad65593768e2e723a72f173</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrLongInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0d4a5c63ce487d4237616a7f77e14730</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrLongIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1293a56a9f59fb3d419ccc2f75ac8c47</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3b259b7163bc48bca1b03bd99fb9c3a8</anchor>
      <arglist>(SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa25c1287e7f46816b54ecc4d72ee3adb</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga659358a62bec9f196791c85aa7eb026a</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8c4fca4d4cfd5894ee201ad690294394</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2f277c08a8c62a2d616289efd9ad015a</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga58e1b790be0356015955b4be5093ae20</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac28bdb363223134c1dd0652f26658bd3</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealPtrPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa24241a6bbc8ddf35cbcfa41bbe14870</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga6e3fa773f5378aa17a8663bbe769846f</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5ffab90d7120daa257e4ffde43fa77d1</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealLongRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga9bad1c8df3ac1ff3a8b3ebc1033e5e16</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga06d0a83c6c2860d99cc0a9367270e1e0</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad6163d61719090374bfe1f7f067e52e8</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gabd2ab8586c5415a8eef0dd81c950b2c6</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga19aef1e3777aaad1d2231f56c94754d5</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealBoolBoolPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga59ee378fe34a0a982b1e9ba50cb9d99f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gad1145e63c8125a365012cb005d6daec2</anchor>
      <arglist>(int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga3592137191739688773e68ecb92a2954</anchor>
      <arglist>(int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gae23a3861de091f32d8f30df8ef96a245</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga98bcb371ffbb704f9b2a0b7e8a92eb33</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga13dbc7faac98878278a7d82f147ae93c</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gab8d853b7506c426d34ca9d56034c4f2b</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaec60c0c53ee333c2d365c982ca59bad0</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga43df436ace6011a7568d959d68f9d0a7</anchor>
      <arglist>(int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntIntPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gac81c473a2561c2cce582da84428f69af</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>gaa03f1049c7f9c0588eecb0c667e3e778</anchor>
      <arglist>(int *intarray1, int *intarray2, int *intarray3, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntPtrIntReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga60d56d852e33355b7b33ed3b09739504</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1f509f41f8dc50da314caa05b8f5b6fe</anchor>
      <arglist>(SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga82a0420979b32a33d0ac2ed1f936d82c</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga05c6ee6ce0784c5cb7171953c91fa2e0</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4401330b63fe2b84c52e8f87779e3470</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrRealRealBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga8878146d4b8d6655c6a1e7f8a1331771</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrRealRealIntBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga1d8566945198da63cc6e94169ef01969</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4bce001ffc72bbaececc5211f8c8accb</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrIntInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5229fc6dcac1bbb54697cb6584392f24</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrBoolInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga7ca8f3db0c84ecd952055c2987013bf3</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0f3cba816a16cef786e266ab3ad558a3</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntPtrIntIntBoolBool</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5b8df5f1b6979e0ea2639f2df9bf77f8</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga26d36bcbe4eb5695c83275f632b520e2</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga0a1d3f8656491206c546d51d7d3bf984</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga2df22126338d4b1c7383e3b5818e8e3f</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga4aae1f2e7c28d053b18974a066f03f2e</anchor>
      <arglist>(int *intarray, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga64379740155859235c21b655fc601f6f</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownInd</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga12f9bdff6d3008f30b5a176c72ad50df</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownPtr</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5f10914e9b9b12db9d286b1ea25a5ed5</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownReal</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga962f1cd31b5d4b6dd60032d3c3a191c7</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownInt</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga224ecda311a4771fa0a7e0d603e47710</anchor>
      <arglist>(int *intarray, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownLong</name>
      <anchorfile>group__SortingAlgorithms.shtml</anchorfile>
      <anchor>ga5cbfdcdfa4689c936ea0ee4d5df9f0cf</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcMachineEpsilon</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>gac6ef1b59cbfcd67e6d93d530b78e7b05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcalcGreComDiv</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>ga09c76e8d696f37681aa4bd6d96618488</anchor>
      <arglist>(SCIP_Longint val1, SCIP_Longint val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcalcSmaComMul</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>ga36422f92e6fe8eaed14484b069529f57</anchor>
      <arglist>(SCIP_Longint val1, SCIP_Longint val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPrealToRational</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>ga7af717ac8e971d41e58aac8c395c73b5</anchor>
      <arglist>(SCIP_Real val, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcIntegralScalar</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>gae52e2432fc460ea70a34b4921655f669</anchor>
      <arglist>(SCIP_Real *vals, int nvals, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Real *intscalar, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPfindSimpleRational</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>gafc5af4af98dabe979112c4825963dd95</anchor>
      <arglist>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPselectSimpleValue</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>ga80d505d09eb06daa3e1d18454554dbd3</anchor>
      <arglist>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPrelDiff</name>
      <anchorfile>group__NumericalMethods.shtml</anchorfile>
      <anchor>gaee193fe9f075f6b12914b1ea9243a9d4</anchor>
      <arglist>(SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRandomInt</name>
      <anchorfile>group__RandomNumbers.shtml</anchorfile>
      <anchor>gab8df37df07fa33ef9d01039302594a4e</anchor>
      <arglist>(int minrandval, int maxrandval, unsigned int *seedp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRandomReal</name>
      <anchorfile>group__RandomNumbers.shtml</anchorfile>
      <anchor>gadb68c7526c5d93416b08093b710fd25e</anchor>
      <arglist>(SCIP_Real minrandval, SCIP_Real maxrandval, unsigned int *seedp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcalcBinomCoef</name>
      <anchorfile>group__AdditionalMathFunctions.shtml</anchorfile>
      <anchor>ga120213bce932ebd1100a1916b40d3f50</anchor>
      <arglist>(int n, int m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPswapInts</name>
      <anchorfile>group__PermutationsShuffling.shtml</anchorfile>
      <anchor>ga18b8efe66f3adeeea73bd842b1a645ff</anchor>
      <arglist>(int *value1, int *value2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPswapPointers</name>
      <anchorfile>group__PermutationsShuffling.shtml</anchorfile>
      <anchor>ga431f86e1ef3e1500066fec3e3a4ace6d</anchor>
      <arglist>(void **pointer1, void **pointer2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpermuteIntArray</name>
      <anchorfile>group__PermutationsShuffling.shtml</anchorfile>
      <anchor>gac175082263a25d9ca1a1824c36e96ecf</anchor>
      <arglist>(int *array, int begin, int end, unsigned int *randseed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpermuteArray</name>
      <anchorfile>group__PermutationsShuffling.shtml</anchorfile>
      <anchor>ga6ec4d1af1c69541e0f01d439e6fb0398</anchor>
      <arglist>(void **array, int begin, int end, unsigned int *randseed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetRandomSubset</name>
      <anchorfile>group__PermutationsShuffling.shtml</anchorfile>
      <anchor>ga384de3f49754bbba1ca3dc87549f3027</anchor>
      <arglist>(void **set, int nelems, void **subset, int nsubelems, unsigned int randseed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcomputeArraysIntersection</name>
      <anchorfile>group__Arrays.shtml</anchorfile>
      <anchor>gabe890a56e769f1402e6db687b10b00a1</anchor>
      <arglist>(int *array1, int narray1, int *array2, int narray2, int *intersectarray, int *nintersectarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcomputeArraysSetminus</name>
      <anchorfile>group__Arrays.shtml</anchorfile>
      <anchor>gadbaec4de39935e6fcd9e28eea94789f6</anchor>
      <arglist>(int *array1, int narray1, int *array2, int narray2, int *setminusarray, int *nsetminusarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmemccpy</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>gadfc413b0c78b3d68f34895dae202c958</anchor>
      <arglist>(char *dest, const char *src, char stop, unsigned int cnt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintSysError</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga5e2316e35529d93dbfa735b10664e07c</anchor>
      <arglist>(const char *message)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPstrtok</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>gaadc7dc75eacf8821453262816efbb912</anchor>
      <arglist>(char *s, const char *delim, char **ptrptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPescapeString</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga4123f87ca6ab7b2d52977ad740976c34</anchor>
      <arglist>(char *t, int bufsize, const char *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsnprintf</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga12978de6e896abef8c5784a521d6326b</anchor>
      <arglist>(char *t, int len, const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPstrToIntValue</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga05b8771e48755de9eb571e888a086820</anchor>
      <arglist>(const char *str, int *value, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPstrToRealValue</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga2d02c64c4ef4b1265a2764239e2de842</anchor>
      <arglist>(const char *str, SCIP_Real *value, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPstrCopySection</name>
      <anchorfile>group__StringMethods.shtml</anchorfile>
      <anchor>ga585e90a5b270e3bdda15d38ff49bbcf4</anchor>
      <arglist>(const char *str, char startchar, char endchar, char *token, int size, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPfileExists</name>
      <anchorfile>group__FileMethods.shtml</anchorfile>
      <anchor>ga26a194b806c67fca42015976a3b0b2ab</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsplitFilename</name>
      <anchorfile>group__FileMethods.shtml</anchorfile>
      <anchor>gae6ca8a02a5500ad60a834a41588f632b</anchor>
      <arglist>(char *filename, char **path, char **name, char **extension, char **compression)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_nlp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__nlp_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__message_8h" name="type_message.h" local="yes" imported="no">scip/type_message.h</includes>
    <includes id="type__set_8h" name="type_set.h" local="yes" imported="no">scip/type_set.h</includes>
    <includes id="type__stat_8h" name="type_stat.h" local="yes" imported="no">scip/type_stat.h</includes>
    <includes id="type__nlp_8h" name="type_nlp.h" local="yes" imported="no">scip/type_nlp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__expr_8h" name="type_expr.h" local="yes" imported="no">nlpi/type_expr.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPexprtreeGetVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a8f53f40f9614373d84c0e93d654799df</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSetVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a5628774d690600a9dcb0907f4f6aa2bc</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeAddVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ab08a7398c48311738ffc27d6f949d4f4</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreePrintWithNames</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>aa220b4210d0399c0e2114af22a026035</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeFindVar</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>abf30b7e88de6d8ccd7eee9273af32e4b</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetConstant</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ab9f628ac0c1bf96d58baea98c9342730</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNLinearVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a90d579ae11ca7bcc8ce1aa66f7276f40</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPnlrowGetLinearVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>aad3c7866f2277cdcd05824cd8ec7b3b0</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPnlrowGetLinearCoefs</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a345cda0724da42340d0f48e20b0b579a</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNQuadVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ab51dfc0445e8fad9abe1781c09591ec5</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPnlrowGetQuadVars</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a35b6ed602ef3150e0977eda650de0fec</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowSearchQuadVar</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a4a178fbe0e2d73a729cac3f884a7dd44</anchor>
      <arglist>(SCIP_NLROW *nlrow, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNQuadElems</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a4fb89aca4f1e2db04d7c07ed89f1e6d4</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADELEM *</type>
      <name>SCIPnlrowGetQuadElems</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ac1f01e012def3af00b1854a1b0291fc8</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnlrowGetQuadData</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a18b42b53039054759e8fb4936424e1d6</anchor>
      <arglist>(SCIP_NLROW *nlrow, int *nquadvars, SCIP_VAR ***quadvars, int *nquadelems, SCIP_QUADELEM **quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRTREE *</type>
      <name>SCIPnlrowGetExprtree</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a899c1a1f044a54e8ce0e7350b33b018b</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetLhs</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a5f79e46fd3a4c49302470f3fe461c6af</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetRhs</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a189829d97a13c378af1eddeee0af7060</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnlrowGetName</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>aa584087de7cfd80d60852881d3a523a6</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNLPPos</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>a8142efc0a68b75006225329289e3eba0</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnlrowIsInNLP</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ac44bb34b85579ed5ac12576b7dfd473b</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetDualsol</name>
      <anchorfile>pub__nlp_8h.shtml</anchorfile>
      <anchor>ab9742290c407ebc7797b6ed4f9e89a6a</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_nodesel.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__nodesel_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__nodesel_8h" name="type_nodesel.h" local="yes" imported="no">scip/type_nodesel.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnodeselGetName</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a51d17e2523f2b02fc0fa122bda3046da</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnodeselGetDesc</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a7e2b07f7eaf295bb5b09cf17246f1598</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeselGetStdPriority</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>aa0a76d00605d09e3d1fa4d189508fa08</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeselGetMemsavePriority</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a9b886aec71e65c1f90414f9d49de09e4</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESELDATA *</type>
      <name>SCIPnodeselGetData</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a0c79cf659c11d6d73a073ce16bb2f7b4</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeselSetData</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a2ddf703bc23daa537c1eda4e5c2d904e</anchor>
      <arglist>(SCIP_NODESEL *nodesel, SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeselIsInitialized</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>a51551efbe3f3d35fe2da45fff65a6efb</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeselGetSetupTime</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>ac2e4ba7ea5e335f316def972255dbafa</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeselGetTime</name>
      <anchorfile>pub__nodesel_8h.shtml</anchorfile>
      <anchor>ac599f68d5f3418a642c05c256e3b10ef</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_paramset.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__paramset_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__paramset_8h" name="type_paramset.h" local="yes" imported="no">scip/type_paramset.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="function">
      <type>SCIP_PARAMTYPE</type>
      <name>SCIPparamGetType</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a52ef84b77971fad59a5aafa2a5905f32</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPparamGetName</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>aee4b2fa3c28bedbcf3eb3a6f9023cdde</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPparamGetDesc</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a6e1879b7360e21552247a159eb2f61c9</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAMDATA *</type>
      <name>SCIPparamGetData</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a37d3a83666bad785b27f3575aa221bbd</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamIsAdvanced</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a4ff8b8a465deaa777ac4833d05d8f5a8</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamIsFixed</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>afa2e40ab32329028d9ccc1bd3547bb75</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPparamSetFixed</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a58c40882be73c50f46e0797b0103cd78</anchor>
      <arglist>(SCIP_PARAM *param, SCIP_Bool fixed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamGetBool</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a6c44e72f165aa3772fe668efbf763489</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamGetBoolDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a7e9d15106790bd8cba2faebdb0d03b23</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetInt</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a7913f014556f615bb5b62600bd41fc80</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntMin</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a572caa3969913d9f86877a7d012d757c</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntMax</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a88b716859aff14957134888979c9ceca</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a8d4e12bd7a5064d578437d3b4b35aadf</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongint</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a956e5d081423ccec807625b5243bb315</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintMin</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a59a66b66fbe038fc78838e3f8d5ec536</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintMax</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a959d3ceaff0b224444b5ecbc2e83fff1</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>ad76b7648cec1752fbd549072b92203be</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetReal</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a8bd82bfd949e3d8c041e770ff821d04c</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealMin</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a18cc82a9bcb8b49b1a601a77cb545702</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealMax</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a98c937c13a6356356ee116296c180a0b</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>ae3bcda028f9c250957a1dbbb1512125e</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPparamGetChar</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a93d764b63c69476c3fa631a87e2285f0</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPparamGetCharAllowedValues</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a5394433e6c9ac497b126b5235e5d15b4</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPparamGetCharDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a1b0b1e1106e9b1b1b27f6d1d31f6638d</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPparamGetString</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a3ea926f573681490671f9bca23e80aa0</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPparamGetStringDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a1b4314fc46e6f14c29a1c66eda7dacc1</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamIsDefault</name>
      <anchorfile>pub__paramset_8h.shtml</anchorfile>
      <anchor>a130083b5c60a4dc02592fc62c6deb3a3</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_presol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__presol_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__presol_8h" name="type_presol.h" local="yes" imported="no">scip/type_presol.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a41c8fc327bfbc26ddaaaf8787815187e</anchor>
      <arglist>(SCIPpresolComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a65d99817f378b1e02677cf2f28fe3749</anchor>
      <arglist>(SCIPpresolCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOLDATA *</type>
      <name>SCIPpresolGetData</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>afb2b373efb83578989b3ea0fbc0a335a</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpresolSetData</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a4f850dc99207d36799313c512cc6799a</anchor>
      <arglist>(SCIP_PRESOL *presol, SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpresolGetName</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>ab4da0149ec216805f478356f4f7be686</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpresolGetDesc</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a28a3d9e3f94190ab73b4789eb9f91749</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetPriority</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a77bcf44c1105f284bfecf3cf4adef002</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetMaxrounds</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>ac05fe5b54a9e776c0fa9009eff5ba96d</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOLTIMING</type>
      <name>SCIPpresolGetTiming</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>ae9e45b0546d982f458b10bc0742b23a0</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpresolSetTiming</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a2dae8310ead370407a05a2e915c8bb9e</anchor>
      <arglist>(SCIP_PRESOL *presol, SCIP_PRESOLTIMING timing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolIsDelayed</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a58856573ee9c87218cf8a6caac3a8bb2</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolWasDelayed</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>adebe02dc339510977cbaa39610d1f8f7</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolIsInitialized</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a108a13dc67365903f5ecb3ead79a2ca2</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpresolGetSetupTime</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a092f58278dd7ddd69c176960506a0c4b</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpresolGetTime</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a627d044db169bf18864a67feb0152b4b</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNFixedVars</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a8d5774f8a2ff447c8bd296f01d02ca3a</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNAggrVars</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a0e9b79c7844166e3ce2f1d7335bb0521</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgVarTypes</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a633793b87e754b54ab6957f4e34e9932</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgBds</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>aa41d3188385cec6660b5e7fb7d856c4e</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNAddHoles</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a346792d6e0a32af9c648c2b372066ecf</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNDelConss</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a280254c8a6fc88e8c57564d4c7fcc440</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNAddConss</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>aaa256aa566ab50b98f27da0f4e00ef25</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNUpgdConss</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a1ae0be1eb24c38c73671c64370b7759e</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgCoefs</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a2d837ebf379bbaf4a1d98f2f1da6dc70</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgSides</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a7ccedf915c941a5ea4ca15af85762de0</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNCalls</name>
      <anchorfile>pub__presol_8h.shtml</anchorfile>
      <anchor>a20d42d7c5f334195bc309591fc1d9180</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_pricer.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__pricer_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__pricer_8h" name="type_pricer.h" local="yes" imported="no">scip/type_pricer.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>acd2ed4dbe806ada8ec0b91c80889100f</anchor>
      <arglist>(SCIPpricerComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>ab7478cd27b0cd77b3582d3452abf57aa</anchor>
      <arglist>(SCIPpricerCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICERDATA *</type>
      <name>SCIPpricerGetData</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a851e1927f2a86bce542393876a7760f9</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpricerSetData</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a5dc785e3e8101bb9e5cca1686e37eaca</anchor>
      <arglist>(SCIP_PRICER *pricer, SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpricerGetName</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a18627610344b514e1741e1c8b49b95c2</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpricerGetDesc</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>aabaa5b871421bded6b765c7327b33059</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetPriority</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a82ebd53263ed1183798ae39c272df801</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetNCalls</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>ac9997a2959c42720ba6399eb25b11dd7</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetNVarsFound</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a195b1b745d4e2c81bda5660d2dbe6a09</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpricerGetSetupTime</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>ac25a1b07683de95e6608b67d33fdaafa</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpricerGetTime</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>ac52a598a357313a8c30572a647ce1b24</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsActive</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a821009258009c428745fe1f141d4e223</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsDelayed</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>a325ed765c8acc5956bab87ec4158f1e3</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsInitialized</name>
      <anchorfile>pub__pricer_8h.shtml</anchorfile>
      <anchor>ab21ba9a84d5652fbecd638a3af8cd491</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_prop.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__prop_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__prop_8h" name="type_prop.h" local="yes" imported="no">scip/type_prop.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ae1352ca4ee6d6a392f8c6cb2cfc948e5</anchor>
      <arglist>(SCIPpropComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>aa7cec3c85b1256d1b3c6fa0dab64a9d2</anchor>
      <arglist>(SCIPpropCompPresol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a53007b620b75c71a563e64eef1bef744</anchor>
      <arglist>(SCIPpropCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROPDATA *</type>
      <name>SCIPpropGetData</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a5f6fee69ad19acc0e29b3320d9fc6914</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpropSetData</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a3856a3a25ff2a9092ce2013579b4e8b9</anchor>
      <arglist>(SCIP_PROP *prop, SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpropGetName</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a475b9ebd1a43e13ea858d5d47b5d0334</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpropGetDesc</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a77fc07ae47a1b179e8e46e17d262c88e</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetPriority</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ab4755eac25bf339cd2744300d7158fc8</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetPresolPriority</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a953b8d2fc1d0bafb76756fb726990fdf</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetFreq</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a5f4ad04478ff3568ffe4449c92687176</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetSetupTime</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a3400fabb856d55e6d36500dbd8f01597</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpropSetFreq</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ab86c0d18a6f76f96a8d28b8fe6265c53</anchor>
      <arglist>(SCIP_PROP *prop, int freq)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetTime</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ac5910f895fa4039c9dc165e1b15023e5</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetStrongBranchPropTime</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a56e9d36bcda19b41cc296daa9ad62fed</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetRespropTime</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a11b6386da0f08c176bc6b612397478f3</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetPresolTime</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a1f7f4b1d489e8d1f8183409d799e65d5</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNCalls</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ae468ac9db37ca0cb89fbc6ee213c2191</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNRespropCalls</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a4d86419438580a7062745ab29ed37689</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNCutoffs</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a32ee34c8e160736fb7438f8372f43d35</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNDomredsFound</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a5c25fba9efe57903f290276f49fd6ff2</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropIsDelayed</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a1bf7d8d81c583546d32f4f3a4d68f530</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropIsPresolDelayed</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ad2ffb8530a02bc95a923aa87d3ec5f39</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropWasDelayed</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a2b6ce81da4542f40691ec2e8c7b2648b</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropWasPresolDelayed</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a00f41b4cd2c32a1a09e39b457a51dc74</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropIsInitialized</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ad9c470f54c6829a273e8300aca8238d2</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNFixedVars</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a954da0d32794a6168da171c49d09bc25</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNAggrVars</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a7a75740faabc398ae0c1bc8244c4cac4</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNChgVarTypes</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ad429c5cded81f98e0819aeba96c28407</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNChgBds</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a36fa9fd6d93a021eb661821d913ee6b6</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNAddHoles</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a36837886633532a0f2123d77a770cc7c</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNDelConss</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>af782afc26c0631ecf4283db0278364b2</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNAddConss</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>aa21faa2621c4add64e81d4226a7292b0</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNUpgdConss</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a3ba6706e10ffca456cefeda26e520999</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNChgCoefs</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a6b77e66b58e648c2f6fe9ee3a7202acc</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNChgSides</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a3869978f0b661365457b7fff335aade4</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetNPresolCalls</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a43d87742440513e4a2bbeb848ba30c32</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROPTIMING</type>
      <name>SCIPpropGetTimingmask</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>af53df6d5651cd87a2c959018877c9e04</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropDoesPresolve</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a0db59311062f69045a2beea7e4e97dca</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOLTIMING</type>
      <name>SCIPpropGetPresolTiming</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>ad674026e2ccd971e68c987745664b0f0</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpropSetPresolTiming</name>
      <anchorfile>pub__prop_8h.shtml</anchorfile>
      <anchor>a296379bf05f14acf79ac643cb8a53cd5</anchor>
      <arglist>(SCIP_PROP *prop, SCIP_PRESOLTIMING presoltiming)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_reader.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__reader_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__reader_8h" name="type_reader.h" local="yes" imported="no">scip/type_reader.h</includes>
    <member kind="function">
      <type>SCIP_READERDATA *</type>
      <name>SCIPreaderGetData</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>a8e7f3cb738a0452ef74836d07683443d</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPreaderSetData</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>a97ef0e6de622d6dd85e090a7c3fc2755</anchor>
      <arglist>(SCIP_READER *reader, SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetName</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>a55ec40002b75749e352907e871311b97</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetDesc</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>a18b3b75626dec25a5311ce224ff5bb84</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetExtension</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>a798d8e17992e9ed6ecd2d16ba1bc43f5</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPreaderCanRead</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>aa8e487dd3f7d05bb4647cbc1473692c2</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPreaderCanWrite</name>
      <anchorfile>pub__reader_8h.shtml</anchorfile>
      <anchor>ab86fa39266a71765a5fa60f436dd3927</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_relax.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__relax_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__relax_8h" name="type_relax.h" local="yes" imported="no">scip/type_relax.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a7e7799f32423c82e3f4f6a2e6a55b3ce</anchor>
      <arglist>(SCIPrelaxComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a53fbfb41e501efabd7b6f782156978b9</anchor>
      <arglist>(SCIPrelaxCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAXDATA *</type>
      <name>SCIPrelaxGetData</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>aec025ad74eecd07f6ed16f8e9df5296c</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPrelaxSetData</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>aa5770bcfe63a450133408625714d7570</anchor>
      <arglist>(SCIP_RELAX *relax, SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPrelaxGetName</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a7ef292e485b94c609c925914d13d0f43</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPrelaxGetDesc</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a7d43d6112151ddb93446ab35afbbeb8f</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPrelaxGetPriority</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>ad4a916bee9dac2a47fde066f76706112</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPrelaxGetFreq</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a52ca03f93ecf0768ef99bed3338ed08a</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPrelaxGetSetupTime</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a857c3371cfc4bed86b7b9b97f937c547</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPrelaxGetTime</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a524075022f6a06c3fddd6d2c92194948</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPrelaxGetNCalls</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>ae2a3f07b5f8e1978740f90368bdd2456</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPrelaxIsInitialized</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a4c239d276edd51989800b3e0a329626d</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPrelaxMarkUnsolved</name>
      <anchorfile>pub__relax_8h.shtml</anchorfile>
      <anchor>a03d88a51d54f0fa0b015d777c969f4f1</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_reopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__reopt_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__reopt_8h" name="type_reopt.h" local="yes" imported="no">scip/type_reopt.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptnodeGetNVars</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a9af871aa5e1f6ae2f1c7f5ce3193c118</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptnodeGetNConss</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a8fe9acbdcb4ece2a214c1d82609a5f90</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptnodeGetNDualBoundChgs</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>ae04583d2c7971c39f66c902d268715ac</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptnodeGetNChildren</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>ade243263a6b7424e79bd62667b0efce2</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPreoptnodeGetLowerbound</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a6163ca28435ca12fbd176e56dce34900</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_REOPTTYPE</type>
      <name>SCIPreoptnodeGetType</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>aa9fc609319f3edee8f0027f1687a927c</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPreoptnodeGetSplitCons</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a76c87b3863f7ad011b707fc9bfb09313</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode, SCIP_VAR **vars, SCIP_Real *vals, REOPT_CONSTYPE *constype, int conssize, int *nvars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPreoptnodeGetConss</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a28187fd74011e58dea4d6c6be03989a8</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode, SCIP_VAR ***vars, SCIP_Real **vals, int mem, int *nconss, int *nvars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPreoptnodeSetParentID</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a6db6b565d67920495b96262dc7fa0c69</anchor>
      <arglist>(SCIP_REOPTNODE *reoptnode, unsigned int parentid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNRestartsGlobal</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>aeb6ce1483a19c53be8a58e7ebb795ae2</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNRestartsLocal</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a61917626877eb66f90c8f132a0003026</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNTotalRestartsLocal</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a20da77555fc3f4048f546ef518df4b33</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetFirstRestarts</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a18b359c7d992ca8375467827c8cc1237</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetLastRestarts</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a98f604a5dc2abd5a72aca4f194b46d8d</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNFeasNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a58424105304e486dc8c822228c79c05a</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNTotalFeasNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a13def212c87eb8dc326ed25f932988b9</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNPrunedNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a5829d5c1aeece8d1f9796825f69b38d8</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNTotalPrunedNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a0effd3883301477dfe719d7befe10309</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNCutoffReoptnodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>ad93a003ecd7fd438fbc17c9a40117b77</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNTotalCutoffReoptnodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a9d789baf507a341f0cb695f0796bc619</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNInfNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>afe4095a1804de4ff36aa335bb64db29e</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNTotalInfNodes</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>ab7e07a96683c7eea0552e6559c765ed4</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPreoptGetNInfSubtrees</name>
      <anchorfile>pub__reopt_8h.shtml</anchorfile>
      <anchor>a68b6975a610c50dbc759d3897e2db88c</anchor>
      <arglist>(SCIP_REOPT *reopt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_sepa.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__sepa_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__sepa_8h" name="type_sepa.h" local="yes" imported="no">scip/type_sepa.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ab3710b60505804eb6985974254f5e63b</anchor>
      <arglist>(SCIPsepaComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>acdf24007ac37dfef01cb0c6a06ffedbb</anchor>
      <arglist>(SCIPsepaCompName)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPADATA *</type>
      <name>SCIPsepaGetData</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a341f3e892ec263f93b27fa99fc3cf01c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsepaSetData</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>add74d1e411d7b64de54123096cec6762</anchor>
      <arglist>(SCIP_SEPA *sepa, SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPsepaGetName</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a291ee01c331500ccf5d10fcad2b185cc</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPsepaGetDesc</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a24cc355ba0f1d0a644eddd5c64fc8b68</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetPriority</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a220ef12b33cbab733bded7015b71c051</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetFreq</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a52a6e1a8ebe64b88da2b3cda6b604e26</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsepaSetFreq</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>af6dd9b5696ce1635d82cbe29bf7c2cc6</anchor>
      <arglist>(SCIP_SEPA *sepa, int freq)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsepaGetMaxbounddist</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a23050fec5334f8e03e81c887764a2941</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaUsesSubscip</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ae32b9bc40cf669e34fd5588c813be382</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsepaGetSetupTime</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ae4779b28fd1272819e40385784e9e211</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsepaGetTime</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a8c2b8e73ecf9f52615c157815da0e772</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCalls</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>afebd7deeb34d35020860370128dd49e5</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetNCallsAtNode</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a67943561f0952dcc249693d37ecc74f3</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutoffs</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a1dd6383af4a1f2c00f3deebfe9e5376e</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutsFound</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ae7c469334f84fd86e05d93d21ef7000c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutsApplied</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a006d712ecdbbb12b2303df3914aee962</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutsFoundAtNode</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ae4a9b18a106a99140242d74821036336</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNConssFound</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>ab10fd5eaa679364aabbd3d2f74c33f6c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNDomredsFound</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a6cc882dfd5a54a5f68ecd92dea51a0d7</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaIsDelayed</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>abd8bd599973e3aa117e95af33067e6d6</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaWasLPDelayed</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a9f318fd92c6fedcfd00259c7de69d2a6</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaWasSolDelayed</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a1318111e813ebe4fdf568b704d4b439a</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaIsInitialized</name>
      <anchorfile>pub__sepa_8h.shtml</anchorfile>
      <anchor>a923d4a8d1deee47ffee6b60040e0244a</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_sol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__sol_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <member kind="function">
      <type>SCIP_SOLORIGIN</type>
      <name>SCIPsolGetOrigin</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>a04ac0840c36094c37d757373d32beb75</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsolIsOriginal</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>a8ffe34365f909d7babb1d1354da22e05</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsolGetOrigObj</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>a1aa14f2e6c428b90d99f68c20dd2ae19</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsolGetTime</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>a45333d240ddfa77d972aedfecdcc91c8</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetRunnum</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>abd3a91a71fd08f774cec8bf57d50cd56</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsolGetNodenum</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>a56ee2643b4f36c8e2696e271419e5f54</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetDepth</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>aa6234c5a9da2abe11282747d312d733c</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPsolGetHeur</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>ace72fa5363732cbb845042c587f118b2</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsolSetHeur</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>aef4d96221f087dff159cdc170373a1d0</anchor>
      <arglist>(SCIP_SOL *sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetIndex</name>
      <anchorfile>pub__sol_8h.shtml</anchorfile>
      <anchor>aa38934ed0a9818dd75a75351eb30df85</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_tree.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__tree_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <includes id="type__reopt_8h" name="type_reopt.h" local="yes" imported="no">scip/type_reopt.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>aedf77fbfe045de88a78951fa77bb7ec9</anchor>
      <arglist>(SCIPnodeCompLowerbound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetParentBranchings</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a3869a3566609b6e46875886c10cdd7eb</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetAncestorBranchings</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a11f71eebec5565f38b48466592cc015f</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetAncestorBranchingsPart</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a33e398caaaf51f53fa042739eccdabfd</anchor>
      <arglist>(SCIP_NODE *node, SCIP_NODE *parent, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnodePrintAncestorBranchings</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>aeb0ac37dae31e70b6749156eb6698e2c</anchor>
      <arglist>(SCIP_NODE *node, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetAncestorBranchingPath</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a4e4c5ce0cf69d803a727a0564f7f16da</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize, int *nodeswitches, int *nnodes, int nodeswitchsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodesSharePath</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>aab61395f88809805047dcd95c00f9203</anchor>
      <arglist>(SCIP_NODE *node1, SCIP_NODE *node2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPnodesGetCommonAncestor</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>af4abc073453e05486ce9543b00fb2ac7</anchor>
      <arglist>(SCIP_NODE *node1, SCIP_NODE *node2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODETYPE</type>
      <name>SCIPnodeGetType</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a3f5311e3a578be0890a7a3f3746a7088</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPnodeGetNumber</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a991b33c0e4deb2cde2adf02cadc4bcd4</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeGetDepth</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>ac76c988a601008c2e57c4cdac98c9c42</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeGetLowerbound</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a4bf2eedb575230a17714ea304ed86afa</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeGetEstimate</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>ac22ad62a838ed69f6d240b5588320280</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_REOPTTYPE</type>
      <name>SCIPnodeGetReopttype</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>ad3a7cbebaabe4ed277857978040fbfc9</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>SCIPnodeGetReoptID</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>ad81a732c6af223bca9de3dbe9211495a</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeSetReopttype</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a2533f7e98b5e69e6a580ed5789f4b433</anchor>
      <arglist>(SCIP_NODE *node, SCIP_REOPTTYPE type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeSetReoptID</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a3212c9e55cb67b765d1f98d7d76b97fd</anchor>
      <arglist>(SCIP_NODE *node, unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetNDomchg</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a5da2421d308a3166d1ef08cec1e0971b</anchor>
      <arglist>(SCIP_NODE *node, int *nbranchings, int *nconsprop, int *nprop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DOMCHG *</type>
      <name>SCIPnodeGetDomchg</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>acd8d7b8799702a22b4df3fcd736d0f54</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPnodeGetParent</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>ad2078624cb4982d919befc95171ac5a5</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeIsActive</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>a6a22ff0058a342889b62939fcf463b1d</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeIsPropagatedAgain</name>
      <anchorfile>pub__tree_8h.shtml</anchorfile>
      <anchor>adbd3349e2d76a32af4f07b583fd84da8</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_var.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>pub__var_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__history_8h" name="type_history.h" local="yes" imported="no">scip/type_history.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__implics_8h" name="type_implics.h" local="yes" imported="no">scip/type_implics.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNLocksDown</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a355a3dfa07ca22bf7ad42b48d58d7ca4</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNLocksUp</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ac32a4ea0812029dc023a53ec7d97c5f9</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarMayRoundDown</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a46f0170550cf27e9b83157fc53a97e11</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarMayRoundUp</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a12db6e7bd03ee2c1caabed271da34f2b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarCompareActiveAndNegated</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a03148e0bd74ef6c65206020c8664d02a</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a49cc8459c943c961c4b190f668ed3e0b</anchor>
      <arglist>(SCIPvarCompActiveAndNegated)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarCompare</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>abc50899938ebb76b389c0e54a5a5ec87</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>afa888382dd2ea3da4c74a39770ec4a60</anchor>
      <arglist>(SCIPvarComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>acc76c443b0261325685a3e3f459db4b3</anchor>
      <arglist>(SCIPvarCompObj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHGETKEY</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3d8785085e66bdf69c0052d62bcdf6b0</anchor>
      <arglist>(SCIPvarGetHashkey)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9e97a5bfa3f3893dfaa77abea445e2c1</anchor>
      <arglist>(SCIPvarIsHashkeyEq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab89262d32e8c5cb1d5676bb77ca92993</anchor>
      <arglist>(SCIPvarGetHashkeyVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarsGetProbvar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a16c63cffbe431b454462bbe80acb8fc5</anchor>
      <arglist>(SCIP_VAR **vars, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetProbvar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a4ee10c1d3097424d9e551fef0d6f0565</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarsGetProbvarBinary</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aedec63daf6f203fdddb5bd5d41456871</anchor>
      <arglist>(SCIP_VAR ***vars, SCIP_Bool **negatedarr, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarBinary</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>abf8fe9adb50e1c593d64f2cadf5ddca6</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarBound</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0abc3cafafc55449b21eb621a215acc7</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *bound, SCIP_BOUNDTYPE *boundtype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarHole</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa8b9c60842872deec6b33242bbe569ed</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *left, SCIP_Real *right)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetOrigvarSum</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0726ded27e5e512f12927a1ddd5248be</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *scalar, SCIP_Real *constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsTransformedOrigvar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8702e6be6a710d89f823a8cdafd2034b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPvarGetNBranchings</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa4a03580e1ab8cef6c5c22871a39fc03</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPvarGetNBranchingsCurrentRun</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ac0a855279533227b587af5675ae78bad</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetInferenceSum</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a2fc9c113a2f80508f835539d2b13672d</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetInferenceSumCurrentRun</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad5a0482bdb76b5d5813039f8879f7168</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetCutoffSum</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>af596106c799c3a5c243ba7443ba64132</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetCutoffSumCurrentRun</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>abdf3ce5ee3dfa8783fdfa526b77ef696</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgBranchdepth</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a21f8069353c0f04a021a3fbfd5ff1245</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgBranchdepthCurrentRun</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a12b1e37f97c94207823cc37113aac868</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarHasImplic</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a295800404f206ef23b87f915c7d7418e</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_BOUNDTYPE impltype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarHasBinaryImplic</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a7121d080a6259c0ae87b72d94d73c71f</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_Bool implvarfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarsHaveCommonClique</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad5b82eaf0cf1d6e161e76adc2ec74083</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_Bool value1, SCIP_VAR *var2, SCIP_Bool value2, SCIP_Bool regardimplics)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetAggregatedObj</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3519b0d1c75e3bf1c39981b9433b9a31</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Real *aggrobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarSetInitial</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a51fe507baf4f1e5913d041f9972db982</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool initial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarSetRemovable</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a983a092ddf919b49f235d5e7342f71ac</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPvarGetName</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab08e0f2c3971fe89bc2959a6fb196383</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNUses</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5f2054889ea8e4e002e59e570c10e8bd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARDATA *</type>
      <name>SCIPvarGetData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a68189ccd1f497e166986ed5ed94f7bcb</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8f17b03288d34f2fac86f1f7dd22ed7e</anchor>
      <arglist>(SCIP_VAR *var, SCIP_VARDATA *vardata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetDelorigData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a041c7d9d30c1766187f66240e2ed99d6</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARDELORIG((*vardelorig)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetTransData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1fba1af0993948f359f7ea98bc9e1587</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARTRANS((*vartrans)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetDeltransData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3afd6b21bc53e155dbe673b368381854</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARDELTRANS((*vardeltrans)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetCopyData</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aec4f545344f36cc0bfbcebbc98464493</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARCOPY((*varcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARSTATUS</type>
      <name>SCIPvarGetStatus</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a2babbbbd0d346e6af3e4128770e0a0bd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsOriginal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aae5d06a0eb52d5627a555e81f0e99a02</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsTransformed</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3e41017f1a3955ebacb61b0f7927642a</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsNegated</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9de9946c754b88110b45997762bc9910</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARTYPE</type>
      <name>SCIPvarGetType</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a4e486bdb8625d736a0962923ff1a4e80</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsBinary</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1bd0696bf88d004255be462f22c9d612</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsIntegral</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a86b37a794f4d1ad3889b8d405032e08d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsInitial</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0173c404b0c42640d2bd5b0659861f38</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsRemovable</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9afb8b03bd046d26c5612c42e29431dd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsDeleted</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0d41609825264dd6dbf30e8dc89b2693</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarMarkDeletable</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3f47c9e7e057200e54e1b5858f5ca428</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarMarkNotDeletable</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab303f2053d2fcdadf30de3af2df17140</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsDeletable</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8451cabc6004d2e476f8ab3883d7e795</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsActive</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1afd61922a1042e1b8515a91bc2c49cc</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5864aa0e6ff4dfa4fed18e178b644cbd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetProbindex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a661c5d1f7f4e09471f8d2898b5bda91c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetTransVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad3fb7925b32ab4d248131bb7eed9143d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL *</type>
      <name>SCIPvarGetCol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a75111eed912d3f76ec076b787f7a0b12</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsInLP</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>af80ac08c4a0f337d152898e5c7eb6b20</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetAggrVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a77868654522f38513a64b92fbdf0bdb7</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAggrScalar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a49c6d314048eaeefc7970953e97fa817</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAggrConstant</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a2fd91a7378eed18a8d10c031a23cfed3</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetMultaggrNVars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a97a86ea0ff5d4e7280eeaaad0a4b90f1</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetMultaggrVars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0b04d71e1c33d5609de000604d505d45</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetMultaggrScalars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab939a181ca5289fa27acb17309dd5895</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetMultaggrConstant</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a137fb47be6bb6e08d2ee32b507f57cf2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetNegatedVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a49dc5b4648f8796de7af0d8841182175</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetNegationVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0711d01bc5b33614363d50cf82adc88c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetNegationConstant</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0df9d4352f047fdcdbbe2862fb99a66c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetObj</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a491a828fd85a9bd3e055ce67831e612c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUnchangedObj</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>af5124b6cfa735a8b5fd498311a3fb902</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbOriginal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3b8cdee5573f5b8fe8c6587ad1ea4364</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbOriginal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a6bcf8502fb2e6b103277cef8aa1f1316</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistOriginal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>acbea52862bae4d3f281f5b3f6a3e02e3</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbGlobal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab0eaccfc16b577470ba4526bb7173911</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbGlobal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a50c332fe6b9e89e78588b5fa8e9a02f8</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistGlobal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8d715a4ea83fa790661f96742f1dc45c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestBoundGlobal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a228ddd7dd3218968c7fd6f8280768d2b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetWorstBoundGlobal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a6d7f89b524443fc2a40d4e023eaf32e9</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbLocal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9dc3107400e7a0a52f9c5a84ad1e6106</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbLocal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a35584d0cef32cfbfc7d40148ffd71beb</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistLocal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8790408c0041e1c7a1f59d2b3275f4ca</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestBoundLocal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a7b399e7a1ec64c86e7abaecfdab956a8</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetWorstBoundLocal</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5f10adc9bd65d618ad0b9d69e34504eb</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPvarGetBestBoundType</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a149e2effcd312cb91185644c0b7c4a99</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPvarGetWorstBoundType</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad06ecd2db32c5a221906e42631531074</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbLazy</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>af6e8ecba7fae29086d3bf013c94ea066</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbLazy</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a87929eb208b171d78f0c8893af8bba19</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBranchFactor</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a7ea7752a0ae8a7dd70543c3a3769c5d2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetBranchPriority</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aacf94c529766169739e6ac18a204cbb5</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHDIR</type>
      <name>SCIPvarGetBranchDirection</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8c411c36f82de1f5085e82b0fc9051c9</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNVlbs</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0a73ce48405736fc83c2bfa29c7eab79</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetVlbVars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aab6ae97670db43871d13d5471f95c97a</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVlbCoefs</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a37ac3fd8724ad7b089b5710e371804dd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVlbConstants</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1f8a4e93e49112dc2338dedad0b7ad88</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNVubs</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a7c2ce9b2f433602d5d5a0329567ce42d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetVubVars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a82b950f4963b7bb16502c952d2e8592e</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVubCoefs</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a57b6a5636331bde0eb90ea22cee594c5</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVubConstants</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1cd1b24b22cee3cc7514ab351e5c2851</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNImpls</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a2a55382fbfa13f5a3f5640b83543d3da</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetImplVars</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>af6d18a4b726482e883a11e8df5ec6569</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE *</type>
      <name>SCIPvarGetImplTypes</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3a8afc0a15ca5a8f9dc0765d56b4f63f</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetImplBounds</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a85753dff191242f295d147f4e32ae3ff</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPvarGetImplIds</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a0f7453e57ae73a9a86ebb0efc3edefb0</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNCliques</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9beee972309b5f9f4ba145a14dc78431</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CLIQUE **</type>
      <name>SCIPvarGetCliques</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aef0cdf6c72c435b4046ca3d02c15074c</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLPSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a90ddaecb3d677f1204549292a6db9019</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetNLPSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ac97f55d178e9dcf573aca8c03937bb64</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetBdchgInfoLb</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a3683bd42f195469cc73ecbae92227062</anchor>
      <arglist>(SCIP_VAR *var, int pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNBdchgInfosLb</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ae2931a8d8ac10291f3993de7ae6eed01</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetBdchgInfoUb</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a329f268bdfe510f7ffb059953b6469c7</anchor>
      <arglist>(SCIP_VAR *var, int pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNBdchgInfosUb</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>acb2b85af48e09485b9d1662886ae694b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VALUEHISTORY *</type>
      <name>SCIPvarGetValuehistory</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa4e0c485178931982457ca53bf426b98</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLPSol_rec</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a01f6981cd14ef86e8eb83b57cd31fcc1</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetNLPSol_rec</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5b8ff3b528f6b014ed788d3f05db9748</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetPseudoSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a88890ba4946444cc1a6e009b5c295d7c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a16d1467c170150942eab2743452f2d90</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool getlpval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetRootSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a78ea1976be7ce9909629c135864325b2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestRootSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a39198bdc56cb11a4b75545e28d640a5b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestRootRedcost</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ab31bcc0f7311d4984fc069a508cb37aa</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestRootLPObjval</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>abf43616778226fd887163d422c988998</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetBestRootSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a52a18b104d50dc9bfedfc22065732775</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Real rootsol, SCIP_Real rootredcost, SCIP_Real rootlpobjval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgSol</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8345c51f4b6cd8a520c0cc8457059971</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetLbchgInfo</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad641d1c38d10aac2c0a9287a501f196d</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetUbchgInfo</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aed405d2ff5f67560b010aaaead0a1d4b</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetBdchgInfo</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a141e5c841d104d519cdae2edd7289b13</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbAtIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>abf655bf729d472d207ea61c628aca7c4</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbAtIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ae0e30a0524730fb4a4d176fb607bc4e0</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBdAtIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad7f8ef0420a54e35e73fdfaae5440212</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarWasFixedAtIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a11fcda08c9b188b28299a70128b1296a</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGIDX *</type>
      <name>SCIPvarGetLastBdchgIndex</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a4f5a75f2914757afc03aa63ac0092560</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetLastBdchgDepth</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ae2d1a700f5c4ae28643b1aea1c73cf99</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarWasFixedEarlier</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a24708a25840970228de5ea4692dfe402</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchgidxIsEarlier</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a23fca46cd3ad5f688e54137d20532ded</anchor>
      <arglist>(SCIP_BDCHGIDX *bdchgidx1, SCIP_BDCHGIDX *bdchgidx2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchgidxIsEarlierNonNull</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ad62af5c2177603dedeb37df179cdcb9e</anchor>
      <arglist>(SCIP_BDCHGIDX *bdchgidx1, SCIP_BDCHGIDX *bdchgidx2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbdchginfoGetOldbound</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a85bb9ba16f601027148f1843b5a4bac0</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbdchginfoGetNewbound</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ada932ca4a3bf05573daa045bfb9c1257</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPbdchginfoGetVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a50ff311153ede62964d80f2ec7f00b70</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHGTYPE</type>
      <name>SCIPbdchginfoGetChgtype</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a9c84faa2a937a5c0a46d69a6ab53ea64</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPbdchginfoGetBoundtype</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>acd2c02df2b42e3849815f265e885f771</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetDepth</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a56b4b92b797d7c538dd5e0a50905d153</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetPos</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5d0d79dd71f0de8411869e5c05955e9c</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGIDX *</type>
      <name>SCIPbdchginfoGetIdx</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>ac0a634d34a9056376e5e66f5ab05c88d</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPbdchginfoGetInferVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa70881f86d34ceacc6c7cb0dec27cf4b</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPbdchginfoGetInferCons</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a42471a8c41fbeb8031cabc30af23939b</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP *</type>
      <name>SCIPbdchginfoGetInferProp</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa441836fba901cf2d613c83960e0ac33</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetInferInfo</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a577b8b938b9d3b83718075937e918182</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPbdchginfoGetInferBoundtype</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8e3bbbf054ad4411747810e33ce67ef8</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoIsRedundant</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a11bd726658bec8608823d6fdef1b17d4</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoHasInferenceReason</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa33dae554e0a5b4c6fda2ec2eb599205</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoIsTighter</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a97188a791a257a985ebd8bc0984dbdc1</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo1, SCIP_BDCHGINFO *bdchginfo2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPboundchgGetNewbound</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a45940d56c97637152f81b1828f362439</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPboundchgGetVar</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a40ae6ae67312bcf6235f609ad30847fb</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHGTYPE</type>
      <name>SCIPboundchgGetBoundchgtype</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a2f815d272056ccfbc864672df7bbc9b2</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPboundchgGetBoundtype</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1d6e9a36ddd5bd60a945d7806e22cc8f</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPboundchgIsRedundant</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aa3df503f6a6399f1b751347779c90ff0</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdomchgGetNBoundchgs</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a65b0301c0a177928352957762f37bc50</anchor>
      <arglist>(SCIP_DOMCHG *domchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHG *</type>
      <name>SCIPdomchgGetBoundchg</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a8fffc109eb5d72cec634a371695094b8</anchor>
      <arglist>(SCIP_DOMCHG *domchg, int pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPholelistGetLeft</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>aaab9f8d881dca504cbd3c008912f3195</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPholelistGetRight</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a1f99ffa81e4e86f22cbff0024f4e88c0</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPholelistGetNext</name>
      <anchorfile>pub__var_8h.shtml</anchorfile>
      <anchor>a5a3fb872fab6cbc4c65cf6647e6c91d3</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_bnd.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__bnd_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderBnd</name>
      <anchorfile>reader__bnd_8h.shtml</anchorfile>
      <anchor>ad1911ac93f71fa4d4cb1d8585bcfa821</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ccg.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__ccg_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCcg</name>
      <anchorfile>reader__ccg_8h.shtml</anchorfile>
      <anchor>a29ef0299799e53bb94135c12aa229d8f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteCcg</name>
      <anchorfile>reader__ccg_8h.shtml</anchorfile>
      <anchor>a46ea596358868833c8acaa21cf06c01c</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__cip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCip</name>
      <anchorfile>reader__cip_8h.shtml</anchorfile>
      <anchor>a8b24d222417f41d7f7b1b163df196bb8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cnf.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__cnf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCnf</name>
      <anchorfile>reader__cnf_8h.shtml</anchorfile>
      <anchor>a53f13fb7c826188c6f334e120a9fd600</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_diff.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__diff_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderDiff</name>
      <anchorfile>reader__diff_8h.shtml</anchorfile>
      <anchor>a9d7ab2cb501c4bb832e2e1bde384d1fa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadDiff</name>
      <anchorfile>reader__diff_8h.shtml</anchorfile>
      <anchor>aa1bd31c40f352b3c6ed6b932194405c6</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteDiff</name>
      <anchorfile>reader__diff_8h.shtml</anchorfile>
      <anchor>a30169fea12b89915ac25e1ce763dfaed</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fix.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__fix_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFix</name>
      <anchorfile>reader__fix_8h.shtml</anchorfile>
      <anchor>a9f1368e04b9ad67c2b5894b66ba100a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fzn.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__fzn_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFzn</name>
      <anchorfile>reader__fzn_8h.shtml</anchorfile>
      <anchor>ae6972c6c7ed500468e82491b8fab9d09</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSolReaderFzn</name>
      <anchorfile>reader__fzn_8h.shtml</anchorfile>
      <anchor>ac5b4d33e28f4c078205ff6c04bcebdf3</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_gms.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__gms_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderGms</name>
      <anchorfile>reader__gms_8h.shtml</anchorfile>
      <anchor>abd9efbb868163f97238c34e074107adb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteGms</name>
      <anchorfile>reader__gms_8h.shtml</anchorfile>
      <anchor>a52791ee2f1321079be2dd9b4da70ba9f</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_lp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__lp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderLp</name>
      <anchorfile>reader__lp_8h.shtml</anchorfile>
      <anchor>a657d2b3e5cce4ef0eb3ebcc2d258dcd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadLp</name>
      <anchorfile>reader__lp_8h.shtml</anchorfile>
      <anchor>a4f163cae89f0ca82cdc21e2d5a7e12a5</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLp</name>
      <anchorfile>reader__lp_8h.shtml</anchorfile>
      <anchor>a63c41ab5750c9121f0a2816b1460dc36</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_mps.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__mps_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderMps</name>
      <anchorfile>reader__mps_8h.shtml</anchorfile>
      <anchor>a66b59f3480cb38476c29a159f8ee5719</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_opb.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__opb_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderOpb</name>
      <anchorfile>reader__opb_8h.shtml</anchorfile>
      <anchor>a037e7727fded09d930fddc129efc0167</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadOpb</name>
      <anchorfile>reader__opb_8h.shtml</anchorfile>
      <anchor>a6d8d7dc8a548f9399fd390a6774e4fcf</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOpb</name>
      <anchorfile>reader__opb_8h.shtml</anchorfile>
      <anchor>a0f80f0c5b17a0440f37cb3b95cdd6bad</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_VAR **fixedvars, int nfixedvars, SCIP_CONS **conss, int nconss, SCIP_Bool genericnames, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_osil.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__osil_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderOsil</name>
      <anchorfile>reader__osil_8h.shtml</anchorfile>
      <anchor>ae1880db3c4f1b77a4237fea5c8df4762</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_pbm.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__pbm_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPbm</name>
      <anchorfile>reader__pbm_8h.shtml</anchorfile>
      <anchor>a88dfeb16ba550eddc860419dcacedf1b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwritePbm</name>
      <anchorfile>reader__pbm_8h.shtml</anchorfile>
      <anchor>a9fde6d4d53f46bb630c46d5c59be6e69</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_READERDATA *readerdata, SCIP_Bool transformed, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_pip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__pip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPip</name>
      <anchorfile>reader__pip_8h.shtml</anchorfile>
      <anchor>ad80770c7dcf279bb8a84f21ae9f81148</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadPip</name>
      <anchorfile>reader__pip_8h.shtml</anchorfile>
      <anchor>a6b4d28f4d8e409ae0bc595c5a98eeee1</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwritePip</name>
      <anchorfile>reader__pip_8h.shtml</anchorfile>
      <anchor>a6b05af081bcbe666cd93cc4dacc9841e</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ppm.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__ppm_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPpm</name>
      <anchorfile>reader__ppm_8h.shtml</anchorfile>
      <anchor>a13673a8710604f2930d5dbdcf1d92775</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwritePpm</name>
      <anchorfile>reader__ppm_8h.shtml</anchorfile>
      <anchor>aee6f240f18c029c12d6eea4ec738454a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_READERDATA *readerdata, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_rlp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__rlp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderRlp</name>
      <anchorfile>reader__rlp_8h.shtml</anchorfile>
      <anchor>a994be78cbab76a49834148cac1d45ab2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_sol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__sol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderSol</name>
      <anchorfile>reader__sol_8h.shtml</anchorfile>
      <anchor>a76f7fca69576620a4adffa98dc81be43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_wbo.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__wbo_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderWbo</name>
      <anchorfile>reader__wbo_8h.shtml</anchorfile>
      <anchor>aa12a3d59eb24c97a73d8db90624fcac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_zpl.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>reader__zpl_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderZpl</name>
      <anchorfile>reader__zpl_8h.shtml</anchorfile>
      <anchor>aa6e6950ec1d97af8f38a5d10dd4b5271</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>scip_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__clock_8h" name="type_clock.h" local="yes" imported="no">scip/type_clock.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__timing_8h" name="type_timing.h" local="yes" imported="no">scip/type_timing.h</includes>
    <includes id="type__paramset_8h" name="type_paramset.h" local="yes" imported="no">scip/type_paramset.h</includes>
    <includes id="type__event_8h" name="type_event.h" local="yes" imported="no">scip/type_event.h</includes>
    <includes id="type__lp_8h" name="type_lp.h" local="yes" imported="no">scip/type_lp.h</includes>
    <includes id="type__nlp_8h" name="type_nlp.h" local="yes" imported="no">scip/type_nlp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__prob_8h" name="type_prob.h" local="yes" imported="no">scip/type_prob.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__branch_8h" name="type_branch.h" local="yes" imported="no">scip/type_branch.h</includes>
    <includes id="type__conflict_8h" name="type_conflict.h" local="yes" imported="no">scip/type_conflict.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <includes id="type__dialog_8h" name="type_dialog.h" local="yes" imported="no">scip/type_dialog.h</includes>
    <includes id="type__disp_8h" name="type_disp.h" local="yes" imported="no">scip/type_disp.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <includes id="type__compr_8h" name="type_compr.h" local="yes" imported="no">scip/type_compr.h</includes>
    <includes id="type__history_8h" name="type_history.h" local="yes" imported="no">scip/type_history.h</includes>
    <includes id="type__nodesel_8h" name="type_nodesel.h" local="yes" imported="no">scip/type_nodesel.h</includes>
    <includes id="type__presol_8h" name="type_presol.h" local="yes" imported="no">scip/type_presol.h</includes>
    <includes id="type__pricer_8h" name="type_pricer.h" local="yes" imported="no">scip/type_pricer.h</includes>
    <includes id="type__reader_8h" name="type_reader.h" local="yes" imported="no">scip/type_reader.h</includes>
    <includes id="type__relax_8h" name="type_relax.h" local="yes" imported="no">scip/type_relax.h</includes>
    <includes id="type__sepa_8h" name="type_sepa.h" local="yes" imported="no">scip/type_sepa.h</includes>
    <includes id="type__prop_8h" name="type_prop.h" local="yes" imported="no">scip/type_prop.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <includes id="pub__branch_8h" name="pub_branch.h" local="yes" imported="no">scip/pub_branch.h</includes>
    <includes id="pub__conflict_8h" name="pub_conflict.h" local="yes" imported="no">scip/pub_conflict.h</includes>
    <includes id="pub__cons_8h" name="pub_cons.h" local="yes" imported="no">scip/pub_cons.h</includes>
    <includes id="pub__cutpool_8h" name="pub_cutpool.h" local="yes" imported="no">scip/pub_cutpool.h</includes>
    <includes id="pub__dialog_8h" name="pub_dialog.h" local="yes" imported="no">scip/pub_dialog.h</includes>
    <includes id="pub__disp_8h" name="pub_disp.h" local="yes" imported="no">scip/pub_disp.h</includes>
    <includes id="pub__event_8h" name="pub_event.h" local="yes" imported="no">scip/pub_event.h</includes>
    <includes id="pub__fileio_8h" name="pub_fileio.h" local="yes" imported="no">scip/pub_fileio.h</includes>
    <includes id="pub__heur_8h" name="pub_heur.h" local="yes" imported="no">scip/pub_heur.h</includes>
    <includes id="pub__compr_8h" name="pub_compr.h" local="yes" imported="no">scip/pub_compr.h</includes>
    <includes id="pub__history_8h" name="pub_history.h" local="yes" imported="no">scip/pub_history.h</includes>
    <includes id="pub__implics_8h" name="pub_implics.h" local="yes" imported="no">scip/pub_implics.h</includes>
    <includes id="pub__lp_8h" name="pub_lp.h" local="yes" imported="no">scip/pub_lp.h</includes>
    <includes id="pub__nlp_8h" name="pub_nlp.h" local="yes" imported="no">scip/pub_nlp.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <includes id="pub__nodesel_8h" name="pub_nodesel.h" local="yes" imported="no">scip/pub_nodesel.h</includes>
    <includes id="pub__paramset_8h" name="pub_paramset.h" local="yes" imported="no">scip/pub_paramset.h</includes>
    <includes id="pub__presol_8h" name="pub_presol.h" local="yes" imported="no">scip/pub_presol.h</includes>
    <includes id="pub__pricer_8h" name="pub_pricer.h" local="yes" imported="no">scip/pub_pricer.h</includes>
    <includes id="pub__reader_8h" name="pub_reader.h" local="yes" imported="no">scip/pub_reader.h</includes>
    <includes id="pub__relax_8h" name="pub_relax.h" local="yes" imported="no">scip/pub_relax.h</includes>
    <includes id="pub__sepa_8h" name="pub_sepa.h" local="yes" imported="no">scip/pub_sepa.h</includes>
    <includes id="pub__prop_8h" name="pub_prop.h" local="yes" imported="no">scip/pub_prop.h</includes>
    <includes id="pub__sol_8h" name="pub_sol.h" local="yes" imported="no">scip/pub_sol.h</includes>
    <includes id="pub__tree_8h" name="pub_tree.h" local="yes" imported="no">scip/pub_tree.h</includes>
    <includes id="pub__var_8h" name="pub_var.h" local="yes" imported="no">scip/pub_var.h</includes>
    <includes id="lpi_8h" name="lpi.h" local="yes" imported="no">lpi/lpi.h</includes>
    <includes id="pub__expr_8h" name="pub_expr.h" local="yes" imported="no">nlpi/pub_expr.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a69bb8c4b5c729a6bc77a39fec688ef7f</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2e9869c02c5edcfbed011d68ffc7ca92</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocClearMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61f66ea72c67950e9d1278aa4856c201</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab140f477213da7ac288a0724310fde5d</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a20e80b236a1b02f31bc161789aa92bf0</anchor>
      <arglist>(scip, ptr, newnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acad34844be85b4449216c2ccd497709f</anchor>
      <arglist>(scip, ptr, newsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf16b11e01d9975ab61f43b1544f4dda</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7bf1b0212707c10cd8f75ed4bc3d4163</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a98ff2645b1fedf0c324cf9f9521112d8</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7726daa48af0e1e735c3a07ed5a23241</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a83405eb60ac3084508f14d96ffcb057c</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryArrayNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15097ac98d84a45e19449bf62bf2de7b</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61d218357d6bd83a6698e942a65999a6</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemorySizeNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2059093fd0da269516d38dcc7ee54451</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae80dc62a38e224199b3bbbe98689bc9a</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa66577fa64e76c373c343e9245fecf21</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abe43a7160843a5eeb9ccd01174469416</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocClearBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3afdb3a88c9fcad9189ef7ac58bc8b5d</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf3a00d8990be5f31185cdaca9e92355</anchor>
      <arglist>(scip, ptr, oldnum, newnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBlockMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af723bf97debedd8abef5d2d8630eec3a</anchor>
      <arglist>(scip, ptr, oldsize, newsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBlockMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2d521c5d6675385dcc2641142a4413ed</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aebb4b739a5130a72765e9c8b4a4c6209</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPensureBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f6e0de0970205fd23e27c4abf07d94c</anchor>
      <arglist>(scip, ptr, arraysizeptr, minsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abfd452f3193371cdf445274f4e09c600</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae1bb30061d794a4837b1b35b18988893</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1688d33950532ec7e43a9ac8bfcf7818</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryArrayNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac90a2bac8f2b464f32b4dc43507dd97c</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemorySize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac397b4d47c189ae8b24c63a813cd574b</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemorySizeNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a875519c06e080d6303b38e6553732c26</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa76d3698235585cabdb680561740ad0a</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a50dbfd1d4da55dd4f7a8efbd3535577f</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocClearBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a433998489f57bdce774236dc5cddb639</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a60e2d6c96f86d889e50cbb7b4992bc5c</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aee18beb49ae38cf4c838ad5e45a82cf8</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8dabe10c58f640cc0864017ac31d7930</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0e1c6a591d440eadf004aa7c4fd6381c</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae9fb600d607d0826acdcc2599e6ad694</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a76b05271bb27a75ebbe902125bec6782</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferArrayNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae46d28746546790d08ac7e3843d9b3fc</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocCleanBuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2965d0a16e817343abdbc4d4947a38a</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocCleanBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a11c9a6e3b9eb81c15d84e2ef636c40d0</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeCleanBuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a46fa92f99a091bf16a0df411adc7c41f</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeCleanBufferNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a875bb20317111e26a093d52d7a8be64f</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeCleanBufferArray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a053759fbea49d0d4fd40c25eda5be21c</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeCleanBufferArrayNull</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a462b723cfa70d9ec750f78d18628a211</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPversion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa6bd4ec02060cb8abac4bdc254b22f98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmajorVersion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad75a4783b7164191b3e35560130b3911</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPminorVersion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8480404a196ebd5812c733be7255d822</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPtechVersion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4301f3a3e1601d9afdcfb807d9b10b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsubversion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a23ec8370d5d433e1cb47922a170d9abf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintVersion</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad3aa1f3e6c37f8eff1a821ab4d98e73a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintError</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a21911e73db9bd476b9c386667497f71f</anchor>
      <arglist>(SCIP_RETCODE retcode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPstoreSolutionGap</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa4baa0db5ea93f4f420010ab1b8f148c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acf9182389e37e83d75f471f907250081</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbb652f903ff17766b15cf578c717e71</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STAGE</type>
      <name>SCIPgetStage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aecb56f0f1a9be97fda98ea9fdcf61d2c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a29b05cad88abcc216a8f4f6974b3caa0</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STATUS</type>
      <name>SCIPgetStatus</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adfa940b47f19c0863d400b554378ef45</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatus</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a80b0dfb8dfac80f47a11cef68019a21a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisTransformed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a276205c51844317fddb4015d27cad154</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisExactSolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afe5d752623d89a0be8804a7ca97fa85b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPresolveFinished</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4fc24c6140921c7137d91d6a1e043cff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasPerformedPresolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a606fbae06d2a3ee94aa8100fa6bc6f08</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpressedCtrlC</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7fbd6310ff628af203e56df753c93419</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisStopped</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abaf6b1008463bd1c0459ea7b8f97976f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetMessagehdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1574545252914854ba968ccda5c0f1aa</anchor>
      <arglist>(SCIP *scip, SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_MESSAGEHDLR *</type>
      <name>SCIPgetMessagehdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0ca42c6dfef9cb32d764b1d396bd022a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsetMessagehdlrLogfile</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad00afebfc7d281845e52f15d4ff7fe26</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsetMessagehdlrQuiet</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>add04befbbea2ee42599ee26db33d52c9</anchor>
      <arglist>(SCIP *scip, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPwarningMessage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afaa9f9ffb1a1f75969243eda111fb122</anchor>
      <arglist>(SCIP *scip, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogMessage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9714c0ef46d46c786c8b22fadd5cd72b</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPinfoMessage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0539bdb9cd224f8b4bceafb87accfe1a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPverbMessage</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15a74fb5047e7a4241df8cd139e2570a</anchor>
      <arglist>(SCIP *scip, SCIP_VERBLEVEL msgverblevel, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VERBLEVEL</type>
      <name>SCIPgetVerbLevel</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a171ae3f547f462b5ecaa5db6442dae65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyPlugins</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0e6de807a0a78ee8dbc8910b408e2d39</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_Bool copyreaders, SCIP_Bool copypricers, SCIP_Bool copyconshdlrs, SCIP_Bool copyconflicthdlrs, SCIP_Bool copypresolvers, SCIP_Bool copyrelaxators, SCIP_Bool copyseparators, SCIP_Bool copypropagators, SCIP_Bool copyheuristics, SCIP_Bool copyeventhdlrs, SCIP_Bool copynodeselectors, SCIP_Bool copybranchrules, SCIP_Bool copydisplays, SCIP_Bool copydialogs, SCIP_Bool copynlpis, SCIP_Bool passmessagehdlr, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abd6765ce6f54b3cd51312436be17f5e3</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyOrigProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af5e224f5a44195909f99e0f00bfde301</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af13dc1d0d91e2c427f456949e65fea4c</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_VAR *sourcevar, SCIP_VAR **targetvar, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1805aa332d0b93f7f255d719eebea066</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyOrigVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1b1c56504cbef3c60bbc86eef6fce2c3</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmergeVariableStatistics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa4d9ee9e93eceab3a5c0936172d2b675</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_VAR **sourcevars, SCIP_VAR **targetvars, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetConsCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6e0b613906dbabb0d812e0d24e35f504</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_CONS *sourcecons, SCIP_CONS **targetcons, SCIP_CONSHDLR *sourceconshdlr, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad9e82dbef9b681fc0063ea36e5cc4671</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyOrigConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8fefd4fdea66b67b9b82dac16a71b7ee</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPconvertCutsToConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4c7625e50ce436ba43b6bac16261137</anchor>
      <arglist>(SCIP *scip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, int *ncutsadded)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aabe4dd67738ea2a6019c62ee3835b480</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, int *ncutsadded)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyImplicationsCliques</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a18951e4095c8838e9071be2c901dde00</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, SCIP_Bool *infeasible, int *nbdchgs, int *ncopied)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyParamSettings</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ade1245b4b0ecd94c85251d9330ed85ef</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetSubscipDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa05a11efe70183a3b710680dc8a22b3b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae0f9695c2985d240e1f09ec6a6fb640a</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *suffix, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool passmessagehdlr, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyOrig</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a044905371ef7247b6bb211f6221db281</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *suffix, SCIP_Bool enablepricing, SCIP_Bool passmessagehdlr, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBoolParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad6b8cd6aca5599ac7a6d672c925a00ea</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Bool *valueptr, SCIP_Bool isadvanced, SCIP_Bool defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddIntParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a21615f4989022ab770f3dfdd68467f48</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int *valueptr, SCIP_Bool isadvanced, int defaultvalue, int minvalue, int maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLongintParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0afd51696f55ab5000e82f4603c3466a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Longint *valueptr, SCIP_Bool isadvanced, SCIP_Longint defaultvalue, SCIP_Longint minvalue, SCIP_Longint maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRealParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4b1bf7a9fc9d69430ed67c6fdb1dfe9c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Real *valueptr, SCIP_Bool isadvanced, SCIP_Real defaultvalue, SCIP_Real minvalue, SCIP_Real maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCharParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1978388236498b6fc623317e00a73937</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char *valueptr, SCIP_Bool isadvanced, char defaultvalue, const char *allowedvalues, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddStringParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a45be3ad6cfa4f827ddc23cb7f6974c85</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char **valueptr, SCIP_Bool isadvanced, const char *defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisParamFixed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15c9bb1e879ba02fe00e8050b9cb4096</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAM *</type>
      <name>SCIPgetParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae63ee78e4e80e20a877feff96c45c2f1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBoolParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a032d442659fb5a2dba465cd2fc699aa7</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetIntParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ade9cb72570b041b5c5549ce36be944ee</anchor>
      <arglist>(SCIP *scip, const char *name, int *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLongintParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad742f55244be27341d49c1e1d204c8d4</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetRealParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6f8029234396592dc48285f35e9eacf2</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetCharParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afd8cf8567761340ea093c9398e44bfeb</anchor>
      <arglist>(SCIP *scip, const char *name, char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetStringParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac09875c22b4979b6102f3023d5e4354e</anchor>
      <arglist>(SCIP *scip, const char *name, char **value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aec683acde22622afb9a8f9699d7a2f78</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunfixParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c0507f9848612e1b4c54a91a83b4fc9</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af0d896242f28ebc3bfc7d33e6b375a6e</anchor>
      <arglist>(SCIP *scip, const char *name, void *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgBoolParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa03523834dadab8b829999a40a533c7d</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeb1efbc3feae45fbfe8776f96f7cc6c1</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckBoolParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0e88d87cb3eed74aab39f09fc4577ee2</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgIntParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aecfedd9835362ffd3bfd6450983c1200</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, int value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a623d0ee8fcfea556a1a060863c6d41e5</anchor>
      <arglist>(SCIP *scip, const char *name, int value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLongintParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4d82ce8868d72494966022f4a94af78</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, SCIP_Longint value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLongintParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a46a3604d3c1eafa2c0bbc3f6da6bc014</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckLongintParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4f66c66eba1bef1a04658c6f976fecc5</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, SCIP_Longint value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRealParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2648803c7f8dbba7701e4301c710b10</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af367ec136692408de9b4d9f126792292</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgCharParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1a7c5d280e13ea7e0160ab69814ccb76</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, char value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetCharParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab739570062ae299c4cf96f07e5c581ac</anchor>
      <arglist>(SCIP *scip, const char *name, char value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCharParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a950c360eb8f0f8225c35016ae759b5e8</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, const char value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgStringParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2ca9e3ed7434b4526dcba898746b50b0</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetStringParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abded6552fdd02388b762c79f0782405f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckStringParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad542af1a52aa3fd5e4bba85662a3adae</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a888d25795f5442b4f53ea2ecbd1a3988</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ace34cc58d5e24c3b1f4bb70cd4de382b</anchor>
      <arglist>(SCIP *scip, SCIP_PARAM *param, const char *filename, SCIP_Bool comments, SCIP_Bool onlychanged)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9ded708f49a2be041bb9f0fa50aabe27</anchor>
      <arglist>(SCIP *scip, const char *filename, SCIP_Bool comments, SCIP_Bool onlychanged)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0328c5017b76792d6f13e4cd9670d2e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15d4e88fa7b7d26d4530127baf25c67b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEmphasis</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2bc4ccd8d9797f1e1b2d7aaefa6500e</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMEMPHASIS paramemphasis, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSubscipsOff</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6de4d1f7072ecd38201c92f0638098bc</anchor>
      <arglist>(SCIP *scip, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeuristics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4c6399f0b7350398902a5e5dcaa7343c</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolving</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa40bcb511bcc988f381902d8e719631e</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSeparating</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af91abf95639f1bf2022c11d13a032b10</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAM **</type>
      <name>SCIPgetParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5c513e97e96e80e3e9a119c93fed30d4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3f11e69843067b4da6e7317a3ce155fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReader</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a08baa19972eb93902b49828126781590</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *extension, SCIP_DECL_READERCOPY((*readercopy)), SCIP_DECL_READERFREE((*readerfree)), SCIP_DECL_READERREAD((*readerread)), SCIP_DECL_READERWRITE((*readerwrite)), SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a08d426fada6b364610c0e2a8ba8c3d6e</anchor>
      <arglist>(SCIP *scip, SCIP_READER **readerptr, const char *name, const char *desc, const char *extension, SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetReaderCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1ff8ce8ebbe8d46a3623dc0e6052cbf3</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, SCIP_DECL_READERCOPY((*readercopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetReaderFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c00cf7232551ed24eed9127bf5a5289</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, SCIP_DECL_READERFREE((*readerfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetReaderRead</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf531cb363c336364b897e3521aaace4</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, SCIP_DECL_READERREAD((*readerread)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetReaderWrite</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afdab5a2c2f76158f10e60b1b920e76f5</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, SCIP_DECL_READERWRITE((*readerwrite)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER *</type>
      <name>SCIPfindReader</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a211ed53db6f2439f75a56d9d98516b2c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER **</type>
      <name>SCIPgetReaders</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e33bcf8c4113365b354a2503209ed21</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReaders</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a778e973b21037618f175b48eb1ace9cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePricer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac677945e92f9eb7b2ea34820dab4e7b8</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_Bool delay, SCIP_DECL_PRICERCOPY((*pricercopy)), SCIP_DECL_PRICERFREE((*pricerfree)), SCIP_DECL_PRICERINIT((*pricerinit)), SCIP_DECL_PRICEREXIT((*pricerexit)), SCIP_DECL_PRICERINITSOL((*pricerinitsol)), SCIP_DECL_PRICEREXITSOL((*pricerexitsol)), SCIP_DECL_PRICERREDCOST((*pricerredcost)), SCIP_DECL_PRICERFARKAS((*pricerfarkas)), SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePricerBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab92545fa7fef7452886320c2ca67d7f9</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER **pricerptr, const char *name, const char *desc, int priority, SCIP_Bool delay, SCIP_DECL_PRICERREDCOST((*pricerredcost)), SCIP_DECL_PRICERFARKAS((*pricerfarkas)), SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a03b1919015a85db059010b40b6669a95</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICERCOPY((*pricercopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa25f08fb539e8371ba6968dfcc52ced6</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICERFREE((*pricerfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a68af275482f66f92b50c4c7b1a61d1b7</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICERINIT((*pricerinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a75febe22e185bc7aef3c83e756beb179</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICEREXIT((*pricerexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1a1b0662569b2e1cadd73ae172c676a2</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICERINITSOL((*pricerinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2000bca7dad2ae8e55cd7dbdd11c96fb</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_DECL_PRICEREXITSOL((*pricerexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER *</type>
      <name>SCIPfindPricer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a82153a7b60f2f2e2d6ca33d693116aa8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER **</type>
      <name>SCIPgetPricers</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a548921cc3a565a75a773e5eaa614c0a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricers</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8f5c3f95531a275209efb42f13891126</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActivePricers</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad8c2bd945c08e5c5bcd8616af949ddc0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a494da8f84cd394cbf2923b744ad479ba</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPactivatePricer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a866b071558016fab02981ed0f0f566c8</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeactivatePricer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7fc05af91ad4efb4ebc434afe0c7067</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af913a2c5ad81ed9ece8d3f8f39eadae0</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int sepapriority, int enfopriority, int chckpriority, int sepafreq, int propfreq, int eagerfreq, int maxprerounds, SCIP_Bool delaysepa, SCIP_Bool delayprop, SCIP_Bool needscons, SCIP_PROPTIMING proptiming, SCIP_PRESOLTIMING presoltiming, SCIP_DECL_CONSHDLRCOPY((*conshdlrcopy)), SCIP_DECL_CONSFREE((*consfree)), SCIP_DECL_CONSINIT((*consinit)), SCIP_DECL_CONSEXIT((*consexit)), SCIP_DECL_CONSINITPRE((*consinitpre)), SCIP_DECL_CONSEXITPRE((*consexitpre)), SCIP_DECL_CONSINITSOL((*consinitsol)), SCIP_DECL_CONSEXITSOL((*consexitsol)), SCIP_DECL_CONSDELETE((*consdelete)), SCIP_DECL_CONSTRANS((*constrans)), SCIP_DECL_CONSINITLP((*consinitlp)), SCIP_DECL_CONSSEPALP((*conssepalp)), SCIP_DECL_CONSSEPASOL((*conssepasol)), SCIP_DECL_CONSENFOLP((*consenfolp)), SCIP_DECL_CONSENFOPS((*consenfops)), SCIP_DECL_CONSCHECK((*conscheck)), SCIP_DECL_CONSPROP((*consprop)), SCIP_DECL_CONSPRESOL((*conspresol)), SCIP_DECL_CONSRESPROP((*consresprop)), SCIP_DECL_CONSLOCK((*conslock)), SCIP_DECL_CONSACTIVE((*consactive)), SCIP_DECL_CONSDEACTIVE((*consdeactive)), SCIP_DECL_CONSENABLE((*consenable)), SCIP_DECL_CONSDISABLE((*consdisable)), SCIP_DECL_CONSDELVARS((*consdelvars)), SCIP_DECL_CONSPRINT((*consprint)), SCIP_DECL_CONSCOPY((*conscopy)), SCIP_DECL_CONSPARSE((*consparse)), SCIP_DECL_CONSGETVARS((*consgetvars)), SCIP_DECL_CONSGETNVARS((*consgetnvars)), SCIP_DECL_CONSGETDIVEBDCHGS((*consgetdivebdchgs)), SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a43103b3b01b70a7993bba030e18e7619</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR **conshdlrptr, const char *name, const char *desc, int enfopriority, int chckpriority, int eagerfreq, SCIP_Bool needscons, SCIP_DECL_CONSENFOLP((*consenfolp)), SCIP_DECL_CONSENFOPS((*consenfops)), SCIP_DECL_CONSCHECK((*conscheck)), SCIP_DECL_CONSLOCK((*conslock)), SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrSepa</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a384da58baccb69e56ed8111a7653db7f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSSEPALP((*conssepalp)), SCIP_DECL_CONSSEPASOL((*conssepasol)), int sepafreq, int sepapriority, SCIP_Bool delaysepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ae7bdbc6bd9fa99203adbb071b82e5e</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSPROP((*consprop)), int propfreq, SCIP_Bool delayprop, SCIP_PROPTIMING proptiming)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a976659afac4b6c7a86f3db7e8e30761f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSHDLRCOPY((*conshdlrcopy)), SCIP_DECL_CONSCOPY((*conscopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6de32d50806e9bc26bffc3c63fb5d9ad</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSFREE((*consfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a26b7223224aed5dbe5b77fb3c3a15de6</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSINIT((*consinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7c0faa4ac34533b1b20c5994bcc54ae9</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSEXIT((*consexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac600a1b8900309373d5c7434cbe0fb76</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSINITSOL((*consinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab5b9e0d407f55313365bd66cf51f852e</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSEXITSOL((*consexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrInitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a325340423d13316650d0395cf1469518</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSINITPRE((*consinitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrExitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8a2d9ce1f5be183e6158d639cadaa3d6</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSEXITPRE((*consexitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrPresol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2259d41eda7f1ecbcb9018ffcb796846</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSPRESOL((*conspresol)), int maxprerounds, SCIP_PRESOLTIMING presoltiming)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrDelete</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c042dc5af9a523540d57f3e06e2692b</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSDELETE((*consdelete)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrTrans</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac7d6ecaca1211da4660217484b740bb6</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSTRANS((*constrans)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrInitlp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac58c69932e4d0c4025d03395ec6767ff</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSINITLP((*consinitlp)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrResprop</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac823c6c5b33f1b62ddde084ff37e0e07</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSRESPROP((*consresprop)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrActive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae64b7725dfe8903a785a08062bb3bdbd</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSACTIVE((*consactive)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrDeactive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a54b76900d20d7d0035cfb41dc7433b8a</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSDEACTIVE((*consdeactive)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrEnable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1ed31188e389118fb41c15cdf82a4728</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSENABLE((*consenable)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrDisable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a472d4215997bb7262cd673f4b8d1c94b</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSDISABLE((*consdisable)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrDelvars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac137d145da42b440c3a74e4c329a8377</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSDELVARS((*consdelvars)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrPrint</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af0a0cc3a8fd10efc1c19e24537db5915</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSPRINT((*consprint)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrParse</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0767fd0eddb906b5314e10f79ffae6a4</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSPARSE((*consparse)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrGetVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f47d47e77dc32f6570e8574b40612e0</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSGETVARS((*consgetvars)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrGetNVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad8014a89048fbc68683ba2d26fa7ac2f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSGETNVARS((*consgetnvars)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConshdlrGetDiveBdChgs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7984c90ad62ca96824901ebb38b5bc19</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_DECL_CONSGETDIVEBDCHGS((*consgetdivebdchgs)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIPfindConshdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adad138e3d0ff91c16b93d11e75731eb9</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR **</type>
      <name>SCIPgetConshdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae47f44194e8110f7e65e1630242884d8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConshdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3be289ebb05ff65ba463d6a72de21665</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConflicthdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aea34c108ef1b1a846af0e5b0e9e16cf6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_DECL_CONFLICTCOPY((*conflictcopy)), SCIP_DECL_CONFLICTFREE((*conflictfree)), SCIP_DECL_CONFLICTINIT((*conflictinit)), SCIP_DECL_CONFLICTEXIT((*conflictexit)), SCIP_DECL_CONFLICTINITSOL((*conflictinitsol)), SCIP_DECL_CONFLICTEXITSOL((*conflictexitsol)), SCIP_DECL_CONFLICTEXEC((*conflictexec)), SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConflicthdlrBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af21f7abb092c81578cbb8823de5fe8b2</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR **conflicthdlrptr, const char *name, const char *desc, int priority, SCIP_DECL_CONFLICTEXEC((*conflictexec)), SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa01dd4ceb89b496065c55c007ceffad1</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTCOPY((*conflictcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af8ed9ec428b3a3a7c1a4717f445778a6</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTFREE((*conflictfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af37439474320a755fc9e7fa0e6c21407</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTINIT((*conflictinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a406b4b174145343bbea170d9b50d510c</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTEXIT((*conflictexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8f7fe97ac537abec552d2e1704cb3d2a</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTINITSOL((*conflictinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0998cf6ef23e3b0dfcfa7e08dd33971d</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, SCIP_DECL_CONFLICTEXITSOL((*conflictexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR *</type>
      <name>SCIPfindConflicthdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a809ecf7415b588b9d073d057c99343ee</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR **</type>
      <name>SCIPgetConflicthdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6df6dfa39724da63c9dc955d1ec1e6be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflicthdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7e194cbede0e996ca08bea37acc62cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aec576eb568feb5d1688107aa4c9586f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3da2cd3b179157e186014af5c0427f2d</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxrounds, SCIP_PRESOLTIMING timing, SCIP_DECL_PRESOLCOPY((*presolcopy)), SCIP_DECL_PRESOLFREE((*presolfree)), SCIP_DECL_PRESOLINIT((*presolinit)), SCIP_DECL_PRESOLEXIT((*presolexit)), SCIP_DECL_PRESOLINITPRE((*presolinitpre)), SCIP_DECL_PRESOLEXITPRE((*presolexitpre)), SCIP_DECL_PRESOLEXEC((*presolexec)), SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac348be8560e1ae3d894efb21127af2ac</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL **presolptr, const char *name, const char *desc, int priority, int maxrounds, SCIP_PRESOLTIMING timing, SCIP_DECL_PRESOLEXEC((*presolexec)), SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab332d9855cd54572db03717b6ee43303</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLCOPY((*presolcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a871f8b755fcb70ea221ed262a24a1692</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLFREE((*presolfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a79dff197e25a49de3bdd6f2c0cf3ab22</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLINIT((*presolinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa2938218c5aa50146de249d7e5e13340</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLEXIT((*presolexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolInitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad28a81261839434cdf42848aa4839630</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLINITPRE((*presolinitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolExitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7910f945daf0e372f4771ac1296e869e</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_DECL_PRESOLEXITPRE((*presolexitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL *</type>
      <name>SCIPfindPresol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a392a6f5aeb8bc4ee7a4566858cc5500e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL **</type>
      <name>SCIPgetPresols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0a672e98ce284c1a922be543398e5a79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPresols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa79a49272f4ae34b90ceb2d91b9b93fe</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9dafa8435e229d73b7b1e1aa131f3396</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeRelax</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a13611bf68d15df7245ae993ac3994154</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_DECL_RELAXCOPY((*relaxcopy)), SCIP_DECL_RELAXFREE((*relaxfree)), SCIP_DECL_RELAXINIT((*relaxinit)), SCIP_DECL_RELAXEXIT((*relaxexit)), SCIP_DECL_RELAXINITSOL((*relaxinitsol)), SCIP_DECL_RELAXEXITSOL((*relaxexitsol)), SCIP_DECL_RELAXEXEC((*relaxexec)), SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeRelaxBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acae0b82f95cbd7912ce0e8e920d07e60</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX **relaxptr, const char *name, const char *desc, int priority, int freq, SCIP_DECL_RELAXEXEC((*relaxexec)), SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a039a48d5a7013a594787388eddb10b12</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXCOPY((*relaxcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9b82ab1d22fb58d4ccda9d712519c494</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXFREE((*relaxfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9ddb1611bb3cea495f7505bf6bfbee0b</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXINIT((*relaxinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a851e7ab503998d0eb6fbfcbab25a0eac</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXEXIT((*relaxexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2697f2a2afd8f4d9b29e84cb9dfbecd</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXINITSOL((*relaxinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a503c280ca69e25bfd726cc4e0423999f</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_DECL_RELAXEXITSOL((*relaxexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX *</type>
      <name>SCIPfindRelax</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aade5c7432d4446054eeb03c58ce88915</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX **</type>
      <name>SCIPgetRelaxs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a06933c29ccbb89e8275189240edb1e1c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRelaxs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1bdd4521104a0017395cca067a6a0ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8a2f8201d8abe0c31b090fea675d3caf</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepa</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aae39c83f65cb1f5eeced4a147d82335a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay, SCIP_DECL_SEPACOPY((*sepacopy)), SCIP_DECL_SEPAFREE((*sepafree)), SCIP_DECL_SEPAINIT((*sepainit)), SCIP_DECL_SEPAEXIT((*sepaexit)), SCIP_DECL_SEPAINITSOL((*sepainitsol)), SCIP_DECL_SEPAEXITSOL((*sepaexitsol)), SCIP_DECL_SEPAEXECLP((*sepaexeclp)), SCIP_DECL_SEPAEXECSOL((*sepaexecsol)), SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5083ae9ae952efd677f5c5f006f156ce</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA **sepa, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay, SCIP_DECL_SEPAEXECLP((*sepaexeclp)), SCIP_DECL_SEPAEXECSOL((*sepaexecsol)), SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af63904f6ac3676403ce12b28ac1568e0</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPACOPY((*sepacopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a67fab24f7f7648cd1b046b1f81e98b06</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPAFREE((*sepafree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afdbbd418e1789cf9acc83eca2c6192bf</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPAINIT((*sepainit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a011d6542407d5fcaceae23ca4147afd1</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPAEXIT((*sepaexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a09e633ec5625674cf7b36f57a1830784</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPAINITSOL((*sepainitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab5baaf657bb724ba6d13cfa0466134f3</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_DECL_SEPAEXITSOL((*sepaexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA *</type>
      <name>SCIPfindSepa</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac9acfc257cbd5b48348c3e124faf03b2</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA **</type>
      <name>SCIPgetSepas</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae9f1410ae78b2a4cd1c730c47f76f9ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepas</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a09b59c2b8901d1cde32d3748ac7f2a77</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d6ea123fb44c10e6e37a2626a1a73f1</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac00a3d2f91d6950a737332bef350408a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay, SCIP_PROPTIMING timingmask, int presolpriority, int presolmaxrounds, SCIP_PRESOLTIMING presoltiming, SCIP_DECL_PROPCOPY((*propcopy)), SCIP_DECL_PROPFREE((*propfree)), SCIP_DECL_PROPINIT((*propinit)), SCIP_DECL_PROPEXIT((*propexit)), SCIP_DECL_PROPINITPRE((*propinitpre)), SCIP_DECL_PROPEXITPRE((*propexitpre)), SCIP_DECL_PROPINITSOL((*propinitsol)), SCIP_DECL_PROPEXITSOL((*propexitsol)), SCIP_DECL_PROPPRESOL((*proppresol)), SCIP_DECL_PROPEXEC((*propexec)), SCIP_DECL_PROPRESPROP((*propresprop)), SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aefb3bfc1f2266fcd396cac8d9c13316f</anchor>
      <arglist>(SCIP *scip, SCIP_PROP **propptr, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay, SCIP_PROPTIMING timingmask, SCIP_DECL_PROPEXEC((*propexec)), SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae91d26e34b8755c41ea53dd79f327969</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPCOPY((*propcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acc14892bef00a6b01b477d6635a029c1</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPFREE((*propfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abcecd8a99dc59001305d9fbe46829726</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPINIT((*propinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a974c9568a073bc1cda87d9e9d46982f0</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPEXIT((*propexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5de828670e8aaca8f47f892d1f513481</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPINITSOL((*propinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae9ceed0c708e41752af58dcbb6e4555e</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPEXITSOL((*propexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropInitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac09c0e2ccb0d63530ba9f2f6f01285b5</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPINITPRE((*propinitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropExitpre</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a80c206cf2ba13af3bab5095a3b2d21c6</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPEXITPRE((*propexitpre)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropPresol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7d4ce4cca3cbdcb20fb1c37b6a127a45</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPPRESOL((*proppresol)), int presolpriority, int presolmaxrounds, SCIP_PRESOLTIMING presoltiming)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropResprop</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a66c4de23fd96f7a81f112b509a76d203</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_DECL_PROPRESPROP((*propresprop)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP *</type>
      <name>SCIPfindProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a87ae3339fc365baf0620aed731125342</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP **</type>
      <name>SCIPgetProps</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4b6b82051c6b3b5a20e1b996c1dc0803</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNProps</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7879100c363d7d31dc7cb4efd8d0cb99</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ba1a41bdeaf7304ba47a1b8a87d1613</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropPresolPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6a548be7891b6c6ba507fcc332337fa3</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, int presolpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeur</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3b878bb9c0c9337bf53df5aabcb696c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip, SCIP_DECL_HEURCOPY((*heurcopy)), SCIP_DECL_HEURFREE((*heurfree)), SCIP_DECL_HEURINIT((*heurinit)), SCIP_DECL_HEUREXIT((*heurexit)), SCIP_DECL_HEURINITSOL((*heurinitsol)), SCIP_DECL_HEUREXITSOL((*heurexitsol)), SCIP_DECL_HEUREXEC((*heurexec)), SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9d914e49edfebd25dcee46fc3dbeade4</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR **heur, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip, SCIP_DECL_HEUREXEC((*heurexec)), SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a114bead8078a887b8263c1aeff3e36ec</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEURCOPY((*heurcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a33db18a5824f137b85419ea0e58b9fae</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEURFREE((*heurfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4cb8439874a67e51b46d6b61682a5d9</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEURINIT((*heurinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a60b66d5349c03750f4af66f83cf8436f</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEUREXIT((*heurexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a83fc22003a2656604be144a195e24879</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEURINITSOL((*heurinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0ecc9f4f73da4f96f7adc185b8b1e25e</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_DECL_HEUREXITSOL((*heurexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPfindHeur</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c65034d0af7042da92e552f71bd043a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR **</type>
      <name>SCIPgetHeurs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4f5073b16c2470e3fb5d6610084f0002</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNHeurs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7795002b03c7490648ee3e151d4d63da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a07dfe26f10f38217feef352d98b386c7</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeCompr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a485bf1014bf4e139c9a6a9da6833d6ec</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int minnnodes, SCIP_DECL_COMPRCOPY((*comprcopy)), SCIP_DECL_COMPRFREE((*comprfree)), SCIP_DECL_COMPRINIT((*comprinit)), SCIP_DECL_COMPREXIT((*comprexit)), SCIP_DECL_COMPRINITSOL((*comprinitsol)), SCIP_DECL_COMPREXITSOL((*comprexitsol)), SCIP_DECL_COMPREXEC((*comprexec)), SCIP_COMPRDATA *comprdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeComprBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a64a27c4d96c0106c138013283ca34337</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR **compr, const char *name, const char *desc, int priority, int minnnodes, SCIP_DECL_COMPREXEC((*comprexec)), SCIP_COMPRDATA *comprdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a07098cd5d1f565ea601f2f26a83736ac</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPRCOPY((*comprcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a084c7d7666fc734f40dead453a094647</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPRFREE((*comprfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab7537305dc2fc2f18f70ad952536411c</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPRINIT((*comprinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0134dd46c902ad79e1df69c99f1b7097</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPREXIT((*comprexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a07da251bcab6ea2ec08c299082edb43e</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPRINITSOL((*comprinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a03d33a60e118d33b4acb0e30f5bbe807</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, SCIP_DECL_COMPREXITSOL((*comprexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COMPR *</type>
      <name>SCIPfindCompr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ed81a6216a7dc33aa15a76539a62e91</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COMPR **</type>
      <name>SCIPgetComprs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af3b19335b73086ed58d2f163fee5cbf8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCompr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a96040ac34f978d97b21630f18eca41e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetComprPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a384d9d13ffb37116c002d6624f23cfec</anchor>
      <arglist>(SCIP *scip, SCIP_COMPR *compr, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateDiveset</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a217f509151bfef4791230f4f0d03a9ff</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET **diveset, SCIP_HEUR *heur, const char *name, SCIP_Real minreldepth, SCIP_Real maxreldepth, SCIP_Real maxlpiterquot, SCIP_Real maxdiveubquot, SCIP_Real maxdiveavgquot, SCIP_Real maxdiveubquotnosol, SCIP_Real maxdiveavgquotnosol, SCIP_Real lpresolvedomchgquot, int lpsolvefreq, int maxlpiterofs, SCIP_Bool backtrack, SCIP_Bool onlylpbranchcands, SCIP_Bool specificsos1score, SCIP_DECL_DIVESETGETSCORE((*divesetgetscore)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeEventhdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a36b7b33964c406f53edea2502caf1d35</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_DECL_EVENTCOPY((*eventcopy)), SCIP_DECL_EVENTFREE((*eventfree)), SCIP_DECL_EVENTINIT((*eventinit)), SCIP_DECL_EVENTEXIT((*eventexit)), SCIP_DECL_EVENTINITSOL((*eventinitsol)), SCIP_DECL_EVENTEXITSOL((*eventexitsol)), SCIP_DECL_EVENTDELETE((*eventdelete)), SCIP_DECL_EVENTEXEC((*eventexec)), SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeEventhdlrBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a523c2801fff76c1a87f05afbae745eb5</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR **eventhdlrptr, const char *name, const char *desc, SCIP_DECL_EVENTEXEC((*eventexec)), SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a44565b3fc4401560e133b0132ad0b0f7</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTCOPY((*eventcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad57479ab20bfa860badcadfb3c51ce5f</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTFREE((*eventfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aee5c62632e60f6717f755f05aa5058ef</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTINIT((*eventinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae026b86ad51dd2b9f7cfb625fd21f6f0</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTEXIT((*eventexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a21d4eacacda83f70989f0a791fccc318</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTINITSOL((*eventinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abcdfa2e6de77c43264f9dec4cf327fb6</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTEXITSOL((*eventexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEventhdlrDelete</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4358c708d61f2cdde46039d7514d38ed</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_DECL_EVENTDELETE((*eventdelete)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR *</type>
      <name>SCIPfindEventhdlr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a934b7ee85fb94e1086f41859282660d3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR **</type>
      <name>SCIPgetEventhdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac6906fba3863bdd322ec6fbd7280b627</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEventhdlrs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca8d7609b2fc33de2d5542cccd2eeb19</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodesel</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad99b44a10a59bc0e7fafc003d7fc090d</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int stdpriority, int memsavepriority, SCIP_DECL_NODESELCOPY((*nodeselcopy)), SCIP_DECL_NODESELFREE((*nodeselfree)), SCIP_DECL_NODESELINIT((*nodeselinit)), SCIP_DECL_NODESELEXIT((*nodeselexit)), SCIP_DECL_NODESELINITSOL((*nodeselinitsol)), SCIP_DECL_NODESELEXITSOL((*nodeselexitsol)), SCIP_DECL_NODESELSELECT((*nodeselselect)), SCIP_DECL_NODESELCOMP((*nodeselcomp)), SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a08b55ae7643f31ee22ef8b98934c4f8f</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL **nodesel, const char *name, const char *desc, int stdpriority, int memsavepriority, SCIP_DECL_NODESELSELECT((*nodeselselect)), SCIP_DECL_NODESELCOMP((*nodeselcomp)), SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acdc1f93a7b2d9415c42aa1eb383302aa</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELCOPY((*nodeselcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a421c268b028b0adb48ce78013429fa6b</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELFREE((*nodeselfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9852658f7cebd53cc585a44f3ef361ff</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELINIT((*nodeselinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8fe441a9b6978933b18396d55ed2f12c</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELEXIT((*nodeselexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af556937ac3e24e8fe99962d96fa5dc0f</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELINITSOL((*nodeselinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aee83712c1cc9cfddf21118078199b4a8</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_DECL_NODESELEXITSOL((*nodeselexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPfindNodesel</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7fb676dfa03a6f660888f1d29db2c354</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL **</type>
      <name>SCIPgetNodesels</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab3670034787cfbddac86f7ead0a3b5c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesels</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab251ed96ee18630298d044a97e26a4c3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselStdPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a240493a26ac21386396d1ba4a5c9b3ee</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselMemsavePriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad2d0f3ced90ade604cb51bb7deb4f3a8</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPgetNodesel</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5bb5e015af66b528895e7d671e18877f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrule</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abc1584df8f91652ee0e2dfc58e87c285</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist, SCIP_DECL_BRANCHCOPY((*branchcopy)), SCIP_DECL_BRANCHFREE((*branchfree)), SCIP_DECL_BRANCHINIT((*branchinit)), SCIP_DECL_BRANCHEXIT((*branchexit)), SCIP_DECL_BRANCHINITSOL((*branchinitsol)), SCIP_DECL_BRANCHEXITSOL((*branchexitsol)), SCIP_DECL_BRANCHEXECLP((*branchexeclp)), SCIP_DECL_BRANCHEXECEXT((*branchexecext)), SCIP_DECL_BRANCHEXECPS((*branchexecps)), SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4f07cd8ed0b5779012d5d5a8110a0220</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE **branchruleptr, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist, SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4d5b1499a92350c1d567d9cfcc2f45b0</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHCOPY((*branchcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7df3af9934cdeae0ca3d5a0f4de63890</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHFREE((*branchfree)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleInit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a94baef4a5e8cb44983583e0801f3d227</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHINIT((*branchinit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleExit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a269fed5f35288630f2d4d6d60250b460</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHEXIT((*branchexit)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad1efb5958f6ecc2d74c5796a647ed2bb</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHINITSOL((*branchinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9371202ef4cc631bf257f1c36c2c3fc8</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHEXITSOL((*branchexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleExecLp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a40083cac3482b70d3dc5ca542606411f</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHEXECLP((*branchexeclp)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleExecExt</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a014be004d96552977f5e8508524ee169</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHEXECEXT((*branchexecext)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleExecPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5b15bffaaf54f5e9881d87be5b4189f5</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_DECL_BRANCHEXECPS((*branchexecps)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE *</type>
      <name>SCIPfindBranchrule</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5e3e59aad82224804d26fb84925efcb3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE **</type>
      <name>SCIPgetBranchrules</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2c916aabbaccad48d5d51995ffc1564e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBranchrules</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adf8c5a3d21831c9dc0eb46559590267d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchrulePriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab715344f533d6066a8c79064acd60aee</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxdepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae5dcaf1cd845d98239be6d455139c315</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int maxdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxbounddist</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad69f37ff3ea128715b71464e2e572564</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Real maxbounddist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDisp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa1c30dc6bab73c41e6718f49121932be</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *header, SCIP_DISPSTATUS dispstatus, SCIP_DECL_DISPCOPY((*dispcopy)), SCIP_DECL_DISPFREE((*dispfree)), SCIP_DECL_DISPINIT((*dispinit)), SCIP_DECL_DISPEXIT((*dispexit)), SCIP_DECL_DISPINITSOL((*dispinitsol)), SCIP_DECL_DISPEXITSOL((*dispexitsol)), SCIP_DECL_DISPOUTPUT((*dispoutput)), SCIP_DISPDATA *dispdata, int width, int priority, int position, SCIP_Bool stripline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP *</type>
      <name>SCIPfindDisp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aafc23cb8c281b7118414b10b2963005e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP **</type>
      <name>SCIPgetDisps</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3a74a293bb852b65634edfff5b9fb805</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDisps</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a43f06cbf08f1f241940fd7727174ddcb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPautoselectDisps</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa50fd7e41e4d065f2fc35445e6260109</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNlpi</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3494767e3556b98fe34585f68d23a24</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI *</type>
      <name>SCIPfindNlpi</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9656beff1923e7132c185efee1fd34fc</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI **</type>
      <name>SCIPgetNlpis</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8be6e127a2ef2ca9c5dbf5fd1856248b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNlpis</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af17164e56637001da868f8874fac987d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlpiPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5d0234cb28dcf3f1cbd2265cfdd134f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeExternalCodeInformation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a22a72b9ce4ef0e6cd080ef1a160af00f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *description)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>SCIPgetExternalCodeNames</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acb0099d16825936dfbd10871c30423e7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>SCIPgetExternalCodeDescriptions</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad9562e70d1eff1e307c55c692313b8b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternalCodes</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4e6693d630645d39d34d84c0b882cc9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintExternalCodes</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7d584a114aa5e22c44266e9a6f2554a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2569322285b7ad3455ea4164fb81b286</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog, SCIP_DECL_DIALOGCOPY((*dialogcopy)), SCIP_DECL_DIALOGEXEC((*dialogexec)), SCIP_DECL_DIALOGDESC((*dialogdesc)), SCIP_DECL_DIALOGFREE((*dialogfree)), const char *name, const char *desc, SCIP_Bool issubmenu, SCIP_DIALOGDATA *dialogdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a117acfa90723a698ff3af446a944c9b4</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4e916caa40d6577f60aeb43a1ea0f363</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0f3481d904ab9daaa5eba60086d99d90</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRootDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7f76c206229ec13d077d8d9e9651cc4d</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPgetRootDialog</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab285c99d3a00215a9d0e690c03c2b8a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogEntry</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ca45fcec64280040a7d357a07dac3a0</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog, SCIP_DIALOG *subdialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogInputLine</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adce214fd73c717bb37fbb256ff6e635b</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogHistoryLine</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac46ae5836821975293123e671d5c8d6c</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartInteraction</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7109df053dd40a20afa6991fb7866ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3a6c0d98f4b395ae14374565a0a54df</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_DECL_PROBDELORIG((*probdelorig)), SCIP_DECL_PROBTRANS((*probtrans)), SCIP_DECL_PROBDELTRANS((*probdeltrans)), SCIP_DECL_PROBINITSOL((*probinitsol)), SCIP_DECL_PROBEXITSOL((*probexitsol)), SCIP_DECL_PROBCOPY((*probcopy)), SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateProbBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad3b129b7c6ea8eb3a0af5d9291f8f8ab</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbDelorig</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a74cd31024a2e8408b74ec1260ad8505a</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBDELORIG((*probdelorig)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbTrans</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a72d7c748b95d968ddff5d2e60b5012f5</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBTRANS((*probtrans)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbDeltrans</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a416795884627dea0afbb0daa9399e652</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBDELTRANS((*probdeltrans)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbInitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab70d32a6d24c276015563a9edc2ec723</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBINITSOL((*probinitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbExitsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a655ad193e9e0844c48734c6241c81898</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBEXITSOL((*probexitsol)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aefc804ee5269d1e0ca60faed5164b562</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_PROBCOPY((*probcopy)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af86148a97b0123d44562de425346a4c7</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOrigProblem</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f6d67a1ccef7a6363e6d6a56523c0d0</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteTransProblem</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada41a57fc5a464ad565763d24e588d3a</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c7bee6cab2932a89e63bfb62053d72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpermuteProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15692dc3b258fc48103f8910d8cd6980</anchor>
      <arglist>(SCIP *scip, unsigned int randseed, SCIP_Bool permuteconss, SCIP_Bool permutebinvars, SCIP_Bool permuteintvars, SCIP_Bool permuteimplvars, SCIP_Bool permutecontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROBDATA *</type>
      <name>SCIPgetProbData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa49ecadcab6a4085933352f7a7e0750e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3e190835aa7114e9557f3c44d6c0fbe</anchor>
      <arglist>(SCIP *scip, SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetProbName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a88671b657291dfdf5c28b28090271b53</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d2b26268637b29981a0bd73bd3f9d11</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_OBJSENSE</type>
      <name>SCIPgetObjsense</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad7e1b206b58e4cc72297225693f57720</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjsense</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acaafd4da695b9da0944066c0a2e842f0</anchor>
      <arglist>(SCIP *scip, SCIP_OBJSENSE objsense)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddObjoffset</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a82e04ca49cec47883fea80effd1d0431</anchor>
      <arglist>(SCIP *scip, SCIP_Real addval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddOrigObjoffset</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad34679fea62a786f4d4882c4ae980b27</anchor>
      <arglist>(SCIP *scip, SCIP_Real addval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjoffset</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a59c91333c2b235724c903f3950e185d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjscale</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2b49a4faeeac43dc32fa78de755b3937</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjoffset</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4883711f4d331a693d540a8bcd59438a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjscale</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aef2ecea696400cc683703572bb2f2e1d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjlimit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3fd90b931b38d2d8f344114babc2a67e</anchor>
      <arglist>(SCIP *scip, SCIP_Real objlimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjlimit</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8260017eb459df02bbc7a906ebe3ed32</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a25eb39191c5832ce2b39d3a2895cec7d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisObjIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af0bb84247a426afaee84ec8ec55bb3b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjNorm</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa39982e4dd7ded03cc2c931c23b163c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1274092a607fc948803c8731f3dc26b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPricedVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2a4364fac6acb390e82d163d78dd939b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac71becc93e5ec956c878d36edd0468d1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool *deleted)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a56aec2d4153071f0ede755f2f2892e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a990fb4f42228e44ec54d16855eac5070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a86c71c9c58dac31be892721f1b9819b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeb541d48cb8b33adb07c721c15250b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNIntVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1d71a70818b9eeb4e4b9fe0a554d33a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a272f3ceba4a29b4f222905cbfa7cddaf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNContVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a28da7a0e0f57edb5cac29d448b7a5e4f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNObjVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a09c33591e08bb872250f872fbe81d094</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetFixedVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a82001d53885377c57d0f775ec8c55fa6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adf2d390d059230dcc067138a89c6aec8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetOrigVarsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a26493edb8b80908a3c46ed8d66e335e9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetOrigVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abec020b8686cac2812d1028deece85f9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aac6e0dce5ed1e58242b015a469b7ce16</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigBinVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5627592739228c27bc44505e9926c79c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigIntVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c4a087b20095944017d1fceb8823d37</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigImplVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a755ff7825cba845a96da5ffb016ca2f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigContVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61a8e5bd255dfb692bd7e0cd0ba569a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNTotalVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aef2b5fdba37eec562585bd768c5285f0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVarsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a182c44ef45bd12a2f4f8ae4b7ad53dd8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPfindVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a20111cfbd93f5dc4c98108110ea856eb</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallVarsInProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa67159c654dad0d66f0cf4a03c167e9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a90f174ec35b95e762a2d9d09bf9b3d3a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9aa8d02a007554a57d0277c9a2ddae8e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPfindOrigCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac3f1aba776d94230889aee051054e84f</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPfindCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d31b66b9dc4523ba7d9942bbd99480c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNUpgrConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8464874b5ad3272145264c21e37ccc17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9abdfcf450cb861852f342e4265644c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1a4423f74fedb75f4c3b830653146aac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a585df643d1a638a9669e374b2c1fe1a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetOrigConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adcffd20ece2ba0d2f895acaa593e2513</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCheckConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a28f7fa666b1080781cfb05c3fbb52372</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5fcf2b01b3850c5220113b2056b28152</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeca8a3bd1ae7520ec26740fb100cfdea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2b6b0c525ffb2fd47da3dea12d8f64ab</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4ece982fbd8fd41e86aea7df84be304f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalOrigEstimate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3119f839770f71a66948db469a044175</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalTransEstimate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af835eb011977a39e5bc8721c3bc83d3d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aebd11b66e4b6d9a14beee63f8bc69902</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa07bfcab1e81fe74c27bea0ea3dcfe5d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a135b276b666f7283ce8a47a72e8698e5</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af365112efafb8219d42ee2ab205be2e1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa911fe60542e7c0b508b34043a22e22d</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0a5dd08e62fcdcf3fc7e3386b39c6230</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae991e5646cb4436977ecb2e7c2aecb81</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a03aa7633fb3c060f7cbcc7529e51d5fc</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgChildPrio</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada44d4f2570b32e08905114615fb976b</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *child, SCIP_Real priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformProb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a04a0271b46551b48cbcee3eff245ca94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpresolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5c4fd2a3c79f2b14a746d5b3e4cccc8b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada79e0a57f2f33cf847831b66f70afec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abd364f669ccdd7eba0a76c05c4320cbd</anchor>
      <arglist>(SCIP *scip, SCIP_Bool restart)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeTransform</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c2399c2334680cd8ad14a1a5ac31622</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinterruptSolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab207a6210ea634cca6fae72dde4d9a91</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrestartSolve</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a08e665c374c599f96c4968ce8cf108ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableReoptimization</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaa4367a7871ee95d524119f3b7691409</anchor>
      <arglist>(SCIP *scip, SCIP_Bool enable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisReoptEnabled</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a86fdf823df9f2c038aa8edd8c3270503</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetReopSolsRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7c93ac93b861255ffd43438bbdc6dc0b</anchor>
      <arglist>(SCIP *scip, int run, SCIP_SOL **sols, int allocmem, int *nsols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPresetReoptSolMarks</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3c0f7e38f3dda1ed074a2b15a07ec836</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckReoptRestart</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a71810bebf36995a08edda34e93a7dd24</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Bool *restart)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddReoptDualBndchg</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7a0890c196063a8a383ef3433b6e75b4</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound, SCIP_Real oldbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPgetReoptLastOptSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e47d7870b08501f873b1e638ad331e9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetReoptOldObjCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a55976aac07a75970e60fe2a35648e407</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int run, SCIP_Real *objcoef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInRestart</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac64bb7328f10a53cca876473fed57495</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aadcc57e6efe08c07a23643d0e7fb3151</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_DECL_VARCOPY((*varcopy)), SCIP_VARDATA *vardata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateVarBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac0121ed98c509e16fbc4db2bc56cfb51</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac66398e06aef85099277390f02b91de7</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR *var, SCIP_Bool type)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsList</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd2011f8b65b8bbf1867f01c3c6d90a7</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, int nvars, SCIP_Bool type, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsLinearsum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad31442179d8a3c229bffd035749bae96</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, SCIP_Real *vals, int nvars, SCIP_Bool type)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsPolynomial</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa25a519b2c015bafcb96b35b95e27806</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR ***monomialvars, SCIP_Real **monomialexps, SCIP_Real *monomialcoefs, int *monomialnvars, int nmonomials, SCIP_Bool type)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4e47846cf781c8cf5a64a7886553e989</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *str, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARCOPY((*varcopy)), SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_VARDATA *vardata, char **endptr, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4dced114542f3ef38ae949c50d563bdb</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **var, char **endptr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarsList</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3f8c67997baed436d42610ec73a4438b</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **vars, int *nvars, int varssize, int *requiredsize, char **endptr, char delimiter, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarsLinearsum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a814a0dec7e6ec79ca2360d49777fea14</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **vars, SCIP_Real *vals, int *nvars, int varssize, int *requiredsize, char **endptr, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarsPolynomial</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbb3f6350430c843e133002532cb210b</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR ****monomialvars, SCIP_Real ***monomialexps, SCIP_Real **monomialcoefs, int **monomialnvars, int *nmonomials, char **endptr, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPfreeParseVarsPolynomialData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6dce8445b11244e03f79d9a8978fed69</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ****monomialvars, SCIP_Real ***monomialexps, SCIP_Real **monomialcoefs, int **monomialnvars, int nmonomials)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae5c349629db606a8f1f466a5fd8b002f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a738c6f77f0dcbe17cf8faa97c7573585</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a310301c7473d55771c9f260757f04948</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aae5d1f2ae5de0dc9d0b7600e488ca5cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a68533d7aeaf9c6baadcbd3c12a4e9cfd</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae01de0744cef850ee4971ca3f53aa062</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a29c5500e7db8b5b0dec01232a2198038</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNegatedVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a94ec8a6bca8e6e621751b4257bf0d4c1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **negvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNegatedVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adf21e366efc39b07b5b3871888d3c195</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **negvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarRepresentative</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac9e77c3155c3beb051205d666c1e57cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **repvar, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarRepresentatives</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ba435677efdc69ae4b04ae3b57e570e</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **repvars, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflattenVarAggregationGraph</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a924498dfffc795b176d114d757797d1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetProbvarLinearSum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0509a5028381b92e3e40cde775db7ac9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Real *scalars, int *nvars, int varssize, SCIP_Real *constant, int *requiredsize, SCIP_Bool mergemultiples)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetProbvarSum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4eb74f0357122f896e1796dc6d958d68</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, SCIP_Real *scalar, SCIP_Real *constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetActiveVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad0af58b9aebdbd5301e03a003a0a7670</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int *nvars, int varssize, int *requiredsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarRedcost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf433501c90408634e7311e96649f5b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarImplRedcost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adcf91159533c4ce2964806611df23475</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarFarkasCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5efe1f2786c99fae016a6bad651dae80</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a94bba755d3a2b9204fe8e784d1e843ad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarSols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac682731957512141f35d0caa5e89b7ef</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRelaxSolVals</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a766a73f354ab0072d886d206d2adeba6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeafc74bc25930a606e451faabe6a63bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVals</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a624500e108054c71b6aaebd2caad1f0a</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolValsSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af1fa8f6afa3d316a32542061c0263e6e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelaxSolValid</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8bcd6356c607920d6ca508d359923e00</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolValid</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a89e124b459807c4f5ac974886a7fb7a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolInvalid</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2f6c3ae2f4d40de14bcb552ef869043</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84b391b9cb0e80c34ddee0ed120df03c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a022bd27b74f4ddc92a3d540df81d57c6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartStrongbranch</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae663a0483c66d28ece393f75bd177450</anchor>
      <arglist>(SCIP *scip, SCIP_Bool enablepropagation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendStrongbranch</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2882f2fb7c2c240a7163b5bfc23677e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchFrac</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af3aba48ec612d657392b69fedcb426d3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchWithPropagation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84ee4682dbf65a476e8bfb7f73f4b1ab</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval, SCIP_Real lpobjval, int itlim, int maxproprounds, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Longint *ndomredsdown, SCIP_Longint *ndomredsup, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror, SCIP_Real *newlbs, SCIP_Real *newubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchInt</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6489cf6b682d2ce1205aec6f213dca4c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesFrac</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7c2f59c88cdffcd3b1dbe416b6b9e552</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesInt</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab5212411fe3f9ac9307f7fc78a30fa54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchLast</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad4a941c5912e57c70b39ba4939e07a4d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Real *solval, SCIP_Real *lpobjval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetVarStrongbranchNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a66be6ab86b510c7a0a9d61f94c58fa7b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetVarStrongbranchLPAge</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a76ec59a0109d8aaacc29fffc67135c9b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetVarNStrongbranchs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad27bb7229c0670f9f4ad64bf95508d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarLocks</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0a00fbe33ee7405aedb341f606d35417</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nlocksdown, int nlocksup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlockVarCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a11a8c70148f7c0b29daaee46d99581dc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlockVarCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5d2b963f461728ba6d9931dceeaa0673</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac8033a7019d8bd6f9e6889cd2edc4463</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afc4b73416ee1c9aa2d891ae24e556eac</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a868dca51fa585a23aa4dfe4cf949d6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a74df87f5fe89f8a2ffbc308f2208c192</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a28fcf0e964533760e3822fed102d57bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a467948c18929421bcc14c1c009f58c56</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abf19e0473a2fe31118fad33b48ba45ea</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a47046aeb6c243f2e1399c9bccd51c174</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7a1f905c4d0358ff60f6e97e8d3bd73c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa159d42658a5672b655e88e08b48fbcb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbLazy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a64ba33cedd7cd556a5ada18f752a2c6d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazylb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbLazy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac0d20a8f3ae90d45d7ca0eadb7006d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazyub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a060edd63613b646299b7a7f36f751e3d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4dc171f23cee0def640b29627250850d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarFixCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aedf529a3af484c357f7486972a42ff0d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab3dde7eba569deda9dddfe11720f9094</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a413e36fae9f597c1b0a8bc25f32eb4e2</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac2f992010162d09cfd2cd446fe069730</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_CONS *infercons, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarFixProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1c0838053db9549fe63b10764ca2d4b9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afa85d91b170a432767e0b864842497ec</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a203ddedb24fe38ea3a44c599a5c8c58a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aedb1fa111c6a4c3864943153f217edfd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af8582c5dac4810817cd41977f4f66562</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a220d36f83ba06abc45f3aae95c7e9a64</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomputeVarLbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a93e2b586572df6acff11ebf8df0ba328</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomputeVarUbGlobal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd299475dea54eb14c915be86aa6332b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomputeVarLbLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa1e8d9f24bb926eb1b5c094450a93ea9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcomputeVarUbLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ace82bba5bf7fc0d8c7ce10f23c942590</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVlb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c7c56f0cc70d7527c5789017a1a9fcc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvlb, int *closestvlbidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVub</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a601084882554619feafcab28ac40bacd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvub, int *closestvubidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVlb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a59fa8edc99f1bc99015da01c67a87d88</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vlbvar, SCIP_Real vlbcoef, SCIP_Real vlbconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVub</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a52dd692311ad45a46181771f55c216e0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vubvar, SCIP_Real vubcoef, SCIP_Real vubconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarImplication</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a991b0a366cb4931960f8bfe038d5c3eb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_BOUNDTYPE impltype, SCIP_Real implbound, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddClique</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a20695b1fa067ce0142415f8b8b62c52d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Bool *values, int nvars, SCIP_Bool isequation, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcCliquePartition</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a20a4c05f87a3b9659406cd03b39510a2</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcNegatedCliquePartition</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f2e7ca11149486161d9800e8e6931b8</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcleanupCliques</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a71c119711dd12770a82883e5a4e2316d</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCliques</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa85f51072ffcfd6f00dfbaa990d6eefa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CLIQUE **</type>
      <name>SCIPgetCliques</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a807a0465b410d8b327f5caab084af6fa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhaveVarsCommonClique</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a980519502dc998412241bdb6e8a64ad2</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var1, SCIP_Bool value1, SCIP_VAR *var2, SCIP_Bool value2, SCIP_Bool regardimplics)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteCliqueGraph</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2fbb511c10cc9fc3157161451bab840f</anchor>
      <arglist>(SCIP *scip, const char *fname, SCIP_Bool writenodeweights)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPremoveVarFromGlobalStructures</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a150814f58b6c33e0a71680e84d872356</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchFactor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af616016202a9ea9eb28f6d3d8da555ef</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real branchfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPscaleVarBranchFactor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a26c7b3dd464874b33c4b073d1ed137a5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real scale)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchFactor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a70639c80f0a6fcee486265a6e83f99b3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5a932c46db33e505a802313a4b1d973f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarBranchPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a36c61578436878725fef2908edc9bfa4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aae296c43c772d38e1abee9685cfea125</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int addpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchDirection</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a52c61ed29f62e26268ff43d4918618c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR branchdirection)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarType</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8eaa2d109613c74402df3ee585ab48c8</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VARTYPE vartype, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab29ea185d867f9878e688fec44f2536f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval, SCIP_Bool *infeasible, SCIP_Bool *fixed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaggregateVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a411f21f9c5bba17aecdb029a870c48ff</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *varx, SCIP_VAR *vary, SCIP_Real scalarx, SCIP_Real scalary, SCIP_Real rhs, SCIP_Bool *infeasible, SCIP_Bool *redundant, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmultiaggregateVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c9e8818ee3ce60386b056b4de7a9455</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int naggvars, SCIP_VAR **aggvars, SCIP_Real *scalars, SCIP_Real constant, SCIP_Bool *infeasible, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdoNotAggr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a34234c419615442195248032753280d4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdoNotMultaggr</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7f51b81f22417693e096f2d2ade4e394</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdoNotMultaggrVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d26e5140edce87471df4583787d25aa</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallowDualReds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8db304f2d5ae6212bffb420d2bf48079</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallowObjProp</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a42d528a329bd05fb378a8a62050a1028</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkDoNotMultaggrVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab1a43ef481f9ab4379e543f413142f37</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPenableVarHistory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adbf67b2e645e65c10293c36d11dd71db</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdisableVarHistory</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1a2c5f9e293dad1470606a4247ececc8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarPseudocost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7b9a8d8fed4a503aad1d81ac0525c43</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta, SCIP_Real objdelta, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7f6345436bbbcb545ef3312a1649ab3e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostValCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa6fe5d09216dbdd0a6c6e9ddcabf208e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e62f81f45a4652311ae0f43268ee3ed</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f8c4d99d9fa26627b54f0d26c9e2dad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCount</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2a753fe2a2c4529b6e1f226c358652b1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCountCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a253ca440bedc3e8436c52d4737d6df95</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostVariance</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ade4f2e12fe5b7f2044913b814b46eb05</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir, SCIP_Bool onlycurrentrun)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalculatePscostConfidenceBound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9bbfb4ebf310dbf2ab166876ea5e0155</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir, SCIP_Bool onlycurrentrun, SCIP_CONFIDENCELEVEL clevel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsignificantVarPscostDifference</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a83a66eea22af3f50cadf965c69ba617b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *varx, SCIP_Real fracx, SCIP_VAR *vary, SCIP_Real fracy, SCIP_BRANCHDIR dir, SCIP_CONFIDENCELEVEL clevel, SCIP_Bool onesided)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpscostThresholdProbabilityTest</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a110cd786ac8c3749f7c3ce4987d0fa8b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real frac, SCIP_Real threshold, SCIP_BRANCHDIR dir, SCIP_CONFIDENCELEVEL clevel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisVarPscostRelerrorReliable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a392eeddff3ede28812a458f05353a5cc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real threshold, SCIP_CONFIDENCELEVEL clevel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae64ee113c092b13220b33701256e881b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a96d739af71b09479a72084e07d0038f1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDS</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad54f9e61ad6762d2607555491c21a6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDSCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad6613826f27b955c3163ab6fd90a8995</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abe818b6232abbe608946efe099a55a76</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae0932bbd8dea9fd1ec946e0702190e7e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a82d18083d6700612251b005969ef88c4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad5d7e3885b7ff149b63f867332e3b5b0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlength</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a38ab0f38326dbf42abfd0caca163fd7c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlengthCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af37df16399615f364f1ae99f5323ff86</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferences</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeaffa3202880cdcc2b95b90ee94c9f1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferencesCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a481c258e252b20e140c16a95aa853f2d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a25d21f0d3646eefb0705012b82d6e471</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a22abc8f5ea3edd8b800950ffecfcc345</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitVarBranchStats</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a02de0c7ee67396b4ca40e1952b810a02</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downpscost, SCIP_Real uppscost, SCIP_Real downvsids, SCIP_Real upvsids, SCIP_Real downconflen, SCIP_Real upconflen, SCIP_Real downinfer, SCIP_Real upinfer, SCIP_Real downcutoff, SCIP_Real upcutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitVarValueBranchStats</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a08532d05346e33a086ed5fcf26083fad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real value, SCIP_Real downvsids, SCIP_Real upvsids, SCIP_Real downconflen, SCIP_Real upconflen, SCIP_Real downinfer, SCIP_Real upinfer, SCIP_Real downcutoff, SCIP_Real upcutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8718b800b6189cd2a8d16b0fe0666e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a60f05c953a62737df3bd81d5ba8f348b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abea19804750bde393ea63191371057c5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3f917fc055dfaa23f1206a1d7ae70bf6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca6c1af251f11ed89882a95b6449fe01</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab38da7dfd620375996e9626b9aef3d33</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abe853cebc32b6448e3acdeba0db2c2ba</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConflictAnalysisApplicable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c91eeff2d29cce5220e7881c12281fb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitConflictAnalysis</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5bd55a3aecfe869a6aa6b0cbf94c7c30</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a00bb542034657c5e850779556d033de3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictRelaxedLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a45cc31772f3c625d3b0f0331bf0bc29c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Real relaxedlb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2136d87b957b9ca7bf845c3f1a92bd54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictRelaxedUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7b8196ca39461a2b23d7fabc4539fc20</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Real relaxedub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBd</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a758d29b6760cf072694ef6868db6d954</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictRelaxedBd</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a12f5e1acc1e24148bdeefee2424b0a23</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Real relaxedbd)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBinvar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd62edc8da6ffb9dc9ba7ae721a798cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPisConflictVarUsed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a66e2ba6bef3d3f662a79abbb115b7c4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool *used)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetConflictVarLb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad0750cb114e6dc35e5ceafb417f7618d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetConflictVarUb</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa9267b5ee6819208d41c6a84287a9e7e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflict</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5d2a29ad1600fff8965339fc77e4c5c1</anchor>
      <arglist>(SCIP *scip, int validdepth, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflictCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad1edb437a787afb03807e8c205f5f702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d771b778ea2599827e84d01c0aceaf2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_CONSHDLR *conshdlr, SCIP_CONSDATA *consdata, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae08b5c83d5d7f09cfe05eaafcbae4498</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *str, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af2c901adf9df145228b0201c1f3014aa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae7055a40bc1c895c4acb118bcb8de4de</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgConsName</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3b8557fd544a5e0a5bc68ccae0763cb3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsInitial</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a767d273ef318836ef77decd4b02b5321</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool initial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsSeparated</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a51499b9a87befa968ffb99aaa0546f8b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool separate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsEnforced</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a777b82d3a8bf0448381ecdaece613e15</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool enforce)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsChecked</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aef0cc53f1f5e27c65ff99fa0801ec16a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool check)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsPropagated</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae814f28bdb0d9ee9b09f805fb726c3f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool propagate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abce093a878ce0d23e623fe192612c36e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool local)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsModifiable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2b88302a2ccd6e18ec932fcc15ad3db</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool modifiable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsDynamic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6f930e0991172fed4c158741aebcc24c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsRemovable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab8cbcd48267c18fa3be668fa4d2f012f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsStickingAtNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3b45642b5e2c03640b45bacaf12690ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateConsFlags</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad84ef13e65b929557f23704786353398</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons0, SCIP_CONS *cons1)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae8ff27f22c89e978e52abcb22575c1a9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4ad44c3ffedd1b91095521e27bea47e1</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac783997fa88d9b38b4bb7cfc0c101e95</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a11bfa7463e407dab949f3ac77e2e051b</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsAge</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adfa594f26adbfb32c7a84bc6ce54febf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real deltaage)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincConsAge</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af39d9421a898c74956b052a66894b221</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetConsAge</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab10a47ebc2d63f6e70871d916e9b6548</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a297c0150613e1d2744bd1ed0d7c4beb6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9b5344874bd5b0a1b710c1890a4d59a1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsSeparation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d28170a37433a9a038f0c8ecd09ef33</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsSeparation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0957013bf161486c4d40716967f51100</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsPropagation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4b10aa132be56937a450629b47741ff1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsPropagation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ade149b54b701d267408f99bb60b639e1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkConsPropagate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab7e03fd9616abe432805d3c27748c524</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunmarkConsPropagate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a884806004b679d295efdd0faabe4df86</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocks</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac2a3a1a932df4bc25580dd44095ab4ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nlockspos, int nlocksneg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a121549cffb357a8f9677fb10ffca5a4c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool printreason, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenfopsCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a07e7f603db839a22e0d839115717d067</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool solinfeasible, SCIP_Bool objinfeasible, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenfolpCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d1a1a1ab747381bb65023c0167d6ce1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool solinfeasible, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitlpCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a96dd7f6016f0006b6abc4cb7c7f43f73</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsepalpCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c3800923e8555525500e0a71476d70f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsepasolCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3c7d4c93ee50fbaaa3df335253ea569</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a482eb94528ff9a95d048ed4011e29c68</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_PROPTIMING proptiming, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrespropCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abaab9aab210fa9540c89c77b3d4d2c7b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *infervar, int inferinfo, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Real relaxedbd, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpresolCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2cbc5d2deafd24474227d5a35528326d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nrounds, SCIP_PRESOLTIMING presoltiming, int nnewfixedvars, int nnewaggrvars, int nnewchgvartypes, int nnewchgbds, int nnewholes, int nnewdelconss, int nnewaddconss, int nnewupgdconss, int nnewchgcoefs, int nnewchgsides, int *nfixedvars, int *naggrvars, int *nchgvartypes, int *nchgbds, int *naddholes, int *ndelconss, int *naddconss, int *nupgdconss, int *nchgcoefs, int *nchgsides, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPactiveCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7ef9ce2bccf6086ff2c5c3ddbc2e05f5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeactiveCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4fc467d2b9e72bcec9f91fab5f7adad5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4709d1eb7cde28185dfc231028dfced9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetConsVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a75731b233ce3b393a5a7d2d0cb4ae5e9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR **vars, int varssize, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetConsNVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0028a21de50d4313fd3896b04aedcfab</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int *nvars, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasCurrentNodeLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a02a3a55b60591b9d6eeda076b1897ddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPConstructed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a32d9de0e4eca8657e393fb0b3f7f28ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPconstructLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a19a1cee7756e1634ee2bed27b27db61f</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a026f97fc433a5be0ceecce03e875eea3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_LPSOLSTAT</type>
      <name>SCIPgetLPSolstat</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a945a2147af32e9893f5a434516e12b0f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPRelax</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a24d0f7c9072bd1d0403896d73f8c0ca5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab1a9445b8d8ec0be5e1880411803f3a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPColumnObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7135587f761b225c04c2c9e8f3ec38bc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPLooseObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0f564d46fb90cd64483dbd68b7e65057</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetGlobalPseudoObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a91cf9cfa6a4bd1a341f5a4b3472d81ee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPseudoObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5459bf89fdb0084e2053944806327ed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRootLPRelax</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aff99bfac5e4bdf41b5d9d8eb39b4db73</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa08b252170415305b44f67f70985b57d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootColumnObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab1a20752259c87ff47127c369d747e5f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootLooseObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad799c809647ce631d888f852f1fdf437</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPColsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a467ad5849b0d39db009c3badad756d69</anchor>
      <arglist>(SCIP *scip, SCIP_COL ***cols, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL **</type>
      <name>SCIPgetLPCols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a17aa956266d8f1eb61d0d339a4fd4568</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPCols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac09084135572e531028e3e942ee52bde</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPRowsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a488366019cc364f8cb723f7a3e6f3c7b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW ***rows, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetLPRows</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa76344fd1742a554ece3442accf18295</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPRows</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7582fa81662a80545d21d32dc62286dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallColsInLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aab701549b059bf7cdd8be07959c11fa7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPSolBasic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ace392f53d4615f0d4baaf49fc46d1c05</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBasisInd</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a34284f0925e5b7b90e256a8cb7faaf20</anchor>
      <arglist>(SCIP *scip, int *basisind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acf60775721243c1781a52bbace891ae2</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *coefs, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvCol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac0d542065e6fd1499ef402a5f6e9c24f</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coefs, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvARow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a87d3515c3daf0e170d08307bd224962a</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *binvrow, SCIP_Real *coefs, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvACol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4351bad90d388761c2bdbe6a1749a2b4</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coefs, int *inds, int *ninds)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsumLPRows</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84cd8c42e3ae3f497e0328f226faca3b</anchor>
      <arglist>(SCIP *scip, SCIP_Real *weights, SCIP_REALARRAY *sumcoef, SCIP_Real *sumlhs, SCIP_Real *sumrhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcMIR</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5dcdd389100e29f6192c9b14f0ce8ac9</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int *boundsfortrans, SCIP_BOUNDTYPE *boundtypesfortrans, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, SCIP_Real maxweight, int *weightinds, int nweightinds, int rowlensum, int *sidetypes, SCIP_Real scale, SCIP_Real *mksetcoefs, SCIP_Bool *mksetcoefsvalid, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal, int *cutrank)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcStrongCG</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6e42ce1c79a64a7dc707f2e6bc16c188</anchor>
      <arglist>(SCIP *scip, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, int *inds, int ninds, SCIP_Real scale, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal, int *cutrank)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd6b8b84faff8743c72ea614e409ffcf</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteMIP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0f50ef7983dfd3ba569d77564b1464f</anchor>
      <arglist>(SCIP *scip, const char *filename, SCIP_Bool genericnames, SCIP_Bool origobj, SCIP_Bool lazyconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPI</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84f176a95066f42c46a4a9f0538cc756</anchor>
      <arglist>(SCIP *scip, SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintLPSolutionQuality</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2db2549a3de52db8209225df20f41539</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcomputeLPRelIntPoint</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a55045cc590deb780437bd8b110f5f09d</anchor>
      <arglist>(SCIP *scip, SCIP_Bool relaxrows, SCIP_Bool inclobjcutoff, SCIP_Real timelimit, int iterlimit, SCIP_SOL **point)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColRedcost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15b7c94bbf02123c6f6ab57d52cf63a7</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColFarkasCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac418cae8f6b4d2e6bba6bc0335477ecb</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkColNotRemovableLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af6c7ad83e11446aa698c791664b2d65b</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRowCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8f71263b6e58cb5182ff009720342651</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, SCIP_CONSHDLR *conshdlr, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRowSepa</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeba70e3ca61e0be022879a5b7d6089ea</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, SCIP_SEPA *sepa, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRowUnspec</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab7dad4a00dae75bd13916e3540420854</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0f3f5d2982142da67c59fb8de0ccbd9c</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRowCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a41ae66e0ec0e8b636a3185825092f39f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, SCIP_CONSHDLR *conshdlr, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRowSepa</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab8bbc855a5e20655eeb10e76587c6250</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, SCIP_SEPA *sepa, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRowUnspec</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abfc0836d1689c64332a2513a2508c1a2</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad250ffa5f36870fc0eb2c10e1e2eaa67</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab345eca97c49f56815689281d381d2e6</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab48075e03669d070432ec340313b6c14</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowLhs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a21c81ede04e2dba3780ffe487d9a3e4a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowRhs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acb6669f0f75661fbc069e625ec624042</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcacheRowExtensions</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1d39aa6fb12d8346eb92a7077ab95ca8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushRowExtensions</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a864bcec8e332c76091ba3a253511e848</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarToRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9f2afff8303839bd7f8ac530e1231b16</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae2ed7224e5436ad91be4626fdf301c8f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRowSameCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a609cc51c16d6b454da46522b613f919a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcRowIntegralScalar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af541a92b85d7c66b30653a312eb12874</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Real *intscalar, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeRowIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a99fc1f122370a2345bde9c6c501723d8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkRowNotRemovableLocal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac0318751016b0126158c174fa8e0bbd7</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0ab71dc044765bfe98443629da0d98cf</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a02b4458c98fc07be4d9c4919af5cf178</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a37352529ce67547337fca182c3d88df9</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7557f2d4f6c4bc80f25443754623af77</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowLPActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abb48dd3a265d49568d947446782dce4f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a57712688056c7770913db67d4aac048b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca759620ea1974b142f09a7b88d854d4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowPseudoActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7ef297232e9ca78238c345bbf41ddb89</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a90a4988f89d869dfa22fe48d339ce741</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4819e4b6783d5eda8114adb477fad32</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a87db79897c4a893f6b9f96344129eaa4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf9dc7e33e9f31516dadd3223b806923</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e46033937fea1b2f2cbdc99a5381b9d</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af6ae6ae93a9e1ee50b84882dadfa1327</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab3ad8a0489ccd2023f711bacd2921f78</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0c3e91d42a44b101de0fc9cd8c35894</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPEnabled</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a897f23c416b712edead6e71af38e819f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPenableNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa2b77bc767599e8521807f0a01791fa8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPConstructed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a562cf9826f085b4e02787614b4b38668</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasNLPContinuousNonlinearity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aab6170ec71217cdb358eb94294e61a81</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPVarsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad5540efd0674ee3a72e811cd7860be9c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetNLPVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a67173e4ecd6c826b674c432ceff4ba1e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNLPVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84486abc0454b6ee6126afa018b757cb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPVarsNonlinearity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c876b81295088d170cce32ee804f313</anchor>
      <arglist>(SCIP *scip, int *nlcount)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetNLPVarsLbDualsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a44761dd58055779ffe983e536a722d59</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetNLPVarsUbDualsol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a41fa3f4e5aa4efb55dbe1c8cd2b8fea0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPNlRowsData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0f0be508a594224bf3ee5611a10d894</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW ***nlrows, int *nnlrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLROW **</type>
      <name>SCIPgetNLPNlRows</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a82decb1f7788679c37a9935f05666dbf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNLPNlRows</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7ca5f3a73ba537f5a65d792380262a4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e4c5bde3054ec3a272316eaa483da2a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4226a39fb23d4ec15b491932b7cc06b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuess</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6b5cc3df5f3ecc23242e7f76f0d39855</anchor>
      <arglist>(SCIP *scip, SCIP_Real *initialguess)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuessSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9710017805f464a0fbbb1619538d2721</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c7f6d48572cf6445baee477076526a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPSOLSTAT</type>
      <name>SCIPgetNLPSolstat</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61b3739965b6389428b8c2b03609ba39</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPTERMSTAT</type>
      <name>SCIPgetNLPTermstat</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac5825e06bce740fa925574304fb5a10e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPStatistics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af1d742671876ea44c8cdfc743d39b0ab</anchor>
      <arglist>(SCIP *scip, SCIP_NLPSTATISTICS *statistics)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNLPObjval</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c69fcf176c6fd1ab0f699b4c8dd977a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasNLPSolution</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aae10b65c4661525e0707b9a655a3ad28</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPFracVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a75aa0b44c2a574ec175cd3f55708cb9c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***fracvars, SCIP_Real **fracvarssol, SCIP_Real **fracvarsfrac, int *nfracvars, int *npriofracvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPIntPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab60d2607e090976566cde314c2bc9c37</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPIntPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0c4eb684cef84748c29e282fc7406bc</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPRealPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a64d7c0ff73beeefdc432a106f9452a1a</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPRealPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aac197da03bbdcf8dd9e2911f6d4563a2</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPStringPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac6e10c4b33007487f6239641c3a45bab</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, const char **sval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPStringPar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7791258c5fa1ecf72e2d99b009850d3c</anchor>
      <arglist>(SCIP *scip, SCIP_NLPPARAM type, const char *sval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4f827b0a4fb5e3b4018f08ad56cb7e98</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPI</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a74f4c1d4cb24ca131b3ae7b93c75eee4</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI **nlpi, SCIP_NLPIPROBLEM **nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7a44bbbdfa1ce57980097fa0160199cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a17997edc2b93dd62c26497f31eb241ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae37c66da85c2643d86ade053639ed85c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBoundsDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c43186d72bb90c5ec8f429f2a1b470b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarsBoundsDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a33e4fe4b923a4a4b35bdef9b3ec66c77</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveNLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad3e9ce6f9cc263009a6e4bf01dcda463</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a331d2b0853f4485e68e8b9a80e85f7de</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real constant, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvars, SCIP_VAR **quadvars, int nquadelems, SCIP_QUADELEM *quadelems, SCIP_EXPRTREE *expression, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a309c9770b77ef8cebd82ba19fae4050a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRowFromRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae478ad08ce59537b9182159ea487cebf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2af6ee81f098ff5b4a4b1c1f7da44888</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9194db31eec1c7d7c29d1be47862b3a5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLhs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa60e949fca9500159904868ee05bf4bf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowRhs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6b1d5435734f68b24ee33dae52ba31f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowConstant</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa0154b2373e111b26b7c2bbd9f9556cc</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a236d7e9bc0361107e87205947f68dd32</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefsToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af38a1b4955c0238ac22e065be38cd79d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLinearCoef</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a408f2386bf2185502773ee14a3e0df42</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a99b53fe0cf36b8109c0fe91958435532</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarsToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c2ed060cca110198b8e03049a21b979</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeb38782dc8c697517b3d4a344e0eeda6</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementsToNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad35631afec785ff81dcfa6086c4024dd</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nquadelems, SCIP_QUADELEM *quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowQuadElement</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af322854725f24efa99334d8988216ec4</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelement)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aab02b26a61423f714a60ab512fec7f5a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_EXPRTREE *exprtree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParam</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a294fc36703aa901ebaf492a70d1e7502</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int paramidx, SCIP_Real paramval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParams</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f6f68a4e301bf556cc2a54c2b494b59</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowNLPActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2d06e1bbfa342da888e85efd5aef0039</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab61afbb67d3ffa420f46c68cb39d7858</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a479e9fa869745defc53487ad279ab873</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowPseudoActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af90ba8ce15ef0a986e39df879be360c9</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4ae45a1e66edbc0cab2b41f8e3a2a17d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudoactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abd37a29c66e60e3b130a38d85593414f</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudofeasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa44aa02d5eeaa3d3f99621780836f2bb</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a46d670b092ef96f754c8643de7602bf5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a99e235c5844982832703f0c8f5eb65b0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolActivity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adbb1cea254cc953927bd748c90c3f1c0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolFeasibility</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ea4c1137d26a66bc9b613089e8c0f7d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivityBounds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1035347fe11413aeebea5d33aeb3e6a2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *minactivity, SCIP_Real *maxactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNlRow</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad6e8dd0bf1c06a3dfa7b4452d4555c97</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetExprtreeTransformedVars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2a2acfbe188a656327e7484b9914709</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPevalExprtreeSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a032eaba1e4383d0ae78c91741a6c424f</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_SOL *sol, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPevalExprtreeGlobalBounds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8168b3581f1b2de12916ece052fa3835</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPevalExprtreeLocalBounds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aafc47868f3bd56a4106d8cac822a4e2b</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutEfficacy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1ad915425fe64b2720c131d55dfbeef6</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisCutEfficacious</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6fd0ac77dd084954dcf9cd9f360854ed</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEfficacious</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a816a17fea3a4bf6c06ff4ba3ed329f29</anchor>
      <arglist>(SCIP *scip, SCIP_Real efficacy)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVectorEfficacyNorm</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>accab5fc5fe2e981e65c0579a489ab3aa</anchor>
      <arglist>(SCIP *scip, SCIP_Real *vals, int nvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisCutApplicable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8558ab677f86be259c71a658c7a3f81d</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCut</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5638b45263235d103b43926600601175</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut, SCIP_Bool forcecut, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPoolCut</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a14b5af5c0722ae6284b2a2d2eb0b3d5b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelPoolCut</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae1c513033b7202a8acb2e6edfc56308b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPgetPoolCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6a27a2619f62e4a7d3f446b2a438b3b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPoolCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa56411a63a1a23fb1fc229d87d7084b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUTPOOL *</type>
      <name>SCIPgetGlobalCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aba942d7f191c2bb818c6be4e9cd3d013</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abdeafe1f2f0e38de38c5933d544e00fa</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool, int agelimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae1f61832da62775b9b43f09f14654f11</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61713c68c848ed6f8549acaede0b86a3</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNewRowCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae228bdca2589466a7941bd78b203a6c4</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelRowCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a41a61c4b60e6266a9a31210f49d201c1</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4ca195a9817a9a121eac1335e1555178</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateSolCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab9f5bf1663d6095a0d5a0fd9897f0f2b</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_SOL *sol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDelayedPoolCut</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae6e8dfb3dbace222e6d4c77266b95165</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelDelayedPoolCut</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a223b8e62019887dcadd2c16b378c7d1f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPgetDelayedPoolCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a50df94203c474d051444a0c45d6b685e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDelayedPoolCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad3182523f400ae76ba23ce35e4b4ba03</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUTPOOL *</type>
      <name>SCIPgetDelayedGlobalCutpool</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac773aa7d7692ec25ef80e7fdd82ca276</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>accde7b091593debbf8ee401cdc42e7a9</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool pretendroot, SCIP_Bool onlydelayed, SCIP_Bool *delayed, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a957ce862ee379dcf71c6fbb647807c1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adc98be8927b43b367b240db63c62f63e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abde3f19da11334be15a64c7fbe9bae69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPremoveInefficaciousCuts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a44b0ec6233e1c5d4edb3313c119ab0ee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxFeastolFactor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1f0555fe92f2c29dd9b95c9586bad0c4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61e0d3177ad999bf713b05bfa53c65ae</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca241eeebf5de4468c5326c6fed83408</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgCutoffboundDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2b120ccb89205f1cfe10478c8ada6e19</anchor>
      <arglist>(SCIP *scip, SCIP_Real newcutoffbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9b8a6dbfee0cb4c2dd532cd56206c3f4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a074bbbcaad8d4b1f4c04d07134f73a1b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a15db9438be54d34bc8e790d876de17ea</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d22c8a9c78516be75267149f6df5480</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowLhsDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a33d1ba01e0e46768d6e1bffb1953e807</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real newlhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowRhsDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a49204a4cbdb0e3343fb20c4bd407f697</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real newrhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarObjDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a49d469652cef4f79245a790d41e16721</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarLbDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3d3566c787ebedbd6e947e84c4ebbbe3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarUbDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a46d00e8906fa7831426af4e4d5a6b164</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa3e0d4b433acf03227285428fb78e16e</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetLastDivenode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adeb4b598c00ac6e0316ba48fb4479ee4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinDive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad18d47699090483d5dcbc1fda1e3b1f0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6f5e2d470a20df93c8b2905404218ce6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a71a4ba1e820f5e875b940a801bcc1e8e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnewProbingNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a951ef10b2149e7486a00226c8a9b1be6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetProbingDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a047975ac149dd68a48689941535dc7be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbacktrackProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a62f00b4ed2fcfd059c0e053f366b0af2</anchor>
      <arglist>(SCIP *scip, int probingdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeeb10b28f05c36a512da9f2ae4cdb9e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4c9f785ad44bc720cebcc693e8fc917e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a31569f9abf01c44c924dd74b8bfc29cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarObjProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7ba97e7d96fca54a1630f126f2e3c708</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVarProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae0bd0314ebf25502c36a896f9a9b9773</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5b500c7066351e57371f710bf8bc195a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4d2897d28c9f217f1cbc0c1578e9ff4f</anchor>
      <arglist>(SCIP *scip, int maxproprounds, SCIP_Bool *cutoff, SCIP_Longint *ndomredsfound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbingImplications</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada03244e7f13a6b40bf617d5e62d7050</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad5fe32969b5bf2422ede3932b464f89b</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLPWithPricing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afd4f0706e4f24784dfa80875f268ca5b</anchor>
      <arglist>(SCIP *scip, SCIP_Bool pretendroot, SCIP_Bool displayinfo, int maxpricerounds, SCIP_Bool *lperror, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a00bc10ad5c5161b9769d4a4ccbcbe553</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyCutsProbing</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a089ac4b1c56348e821b83dd50d5e0ebf</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetDivesetScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a28aa008a50a79ef18effdb6225cfcba4</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET *diveset, SCIP_DIVETYPE divetype, SCIP_VAR *divecand, SCIP_Real divecandsol, SCIP_Real divecandfrac, SCIP_Real *candscore, SCIP_Bool *roundup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPupdateDivesetLPStats</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2eb11c182d2879603dab723a9e0db43a</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET *diveset, SCIP_Longint niterstoadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPupdateDivesetStats</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af0e717e1b5bb68f4e5fbb8177420ed3d</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET *diveset, int nprobingnodes, int nbacktracks, SCIP_Longint nsolsfound, SCIP_Longint nbestsolsfound, SCIP_Bool leavewassol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetDiveBoundChanges</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a261c84ecb1ba070ce5105b8d918fb509</anchor>
      <arglist>(SCIP *scip, SCIP_DIVESET *diveset, SCIP_SOL *sol, SCIP_Bool *success, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDiveBoundChange</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a881929aedc955baa8a0667e7aa240a07</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir, SCIP_Real value, SCIP_Bool preferred)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetDiveBoundChangeData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1281506d8c03c706ecbe512b8f1e7ae1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***variables, SCIP_BRANCHDIR **directions, SCIP_Real **values, int *ndivebdchgs, SCIP_Bool preferred)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPclearDiveBoundChanges</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a02bcac617bf8cedacffc9779112ff3b2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9fc3429842762c90baa06060e17400b5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***lpcands, SCIP_Real **lpcandssol, SCIP_Real **lpcandsfrac, int *nlpcands, int *npriolpcands, int *nfracimplvars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac948f7043edfb733dca98965ef2ce192</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioLPBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca0d050de167f447d0980d356f564d54</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetExternBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1c3662e210e4a159e5a08cf1c3e1928a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***externcands, SCIP_Real **externcandssol, SCIP_Real **externcandsscore, int *nexterncands, int *nprioexterncands, int *nprioexternbins, int *nprioexternints, int *nprioexternimpls)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbe8ab137a366b1ff0bd7f2ece467421</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abf7eb9b3f81fca081086b26fc4595aee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchBins</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab26869db67b61cae8cb74f90c2c5a9e3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchInts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9a636a11f9355d276522ac0e22f97c6d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchImpls</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac565048c1a09a7f2cd5a5a61b1d3b074</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchConts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a17645a48bfbe63e50fa909080a6f6ecb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddExternBranchCand</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a32935485576c3f1aa4e0784a17ef3b9e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPclearExternBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a94cc7772f105dfd089ddcaf3c4b3222b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcontainsExternBranchCand</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af1d0917028c016dd17fc61a5ba02011b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetPseudoBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acb6423287e73b4c01172b888b615d5d6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***pseudocands, int *npseudocands, int *npriopseudocands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPseudoBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>affcbbff89a112152b9c53c5b6082b1f4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchCands</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a979ba10cff60431c1b4817743daf6846</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchBins</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5ae75d2b7769967aa701d04e5083d58e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchInts</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3b9055d77a4025302267c34dab42713b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchImpls</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7c55c8f13395c395e6759ba9690a1be0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adad5155935c4ddb41411c24198049850</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downgain, SCIP_Real upgain)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScoreMultiple</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>accaba8412271cfd682eb8ca4a1e338d0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nchildren, SCIP_Real *gains)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchingPoint</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ebbb1c37814cfee5b82de308dc9b0a9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real suggestion)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcNodeselPriority</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1cb1b8ded50092647ea1aec320be7279</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR branchdir, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcChildEstimate</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a48fa1990192d55e91ad429e99787425b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateChild</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad2acad3baa29cfaa154e00f24ce7ed76</anchor>
      <arglist>(SCIP *scip, SCIP_NODE **node, SCIP_Real nodeselprio, SCIP_Real estimate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVar</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abb0e80df81b921f02e8d63ec44de609c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVarHole</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a80c51213214df13c1ac197f1902cf7ab</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real left, SCIP_Real right, SCIP_NODE **downchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVarVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7e3f1f78081aa6334a1e2cbb3fd6e12b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVarValNary</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a782f05c7fb082513f8e88b1eb97a7a30</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val, int n, SCIP_Real minwidth, SCIP_Real widthfactor, int *nchildren)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac95c263bceda5b9a1ed58f8a6ef28e5d</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchExtern</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a62764d72fde4914941fdacc22e3675cd</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchPseudo</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae7444dff2944b8bd256dd5de1fe3892b</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a03da404f4153d8f673e87fb28bc7d552</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateLPSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a722713bfce39442851599ccec206a5ac</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNLPSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5761efbf8552b7977c4e2908c14573a7</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRelaxSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a90fb3c4e2451dc19d07885e70d2319e4</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePseudoSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aed592c1f6559db530bb85cffaaba7efd</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCurrentSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4932b7d51737d48f02cd609c705d532b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateUnknownSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0db508df4ed974dceb64fd24fb3cb0da</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateOrigSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84ea192b17b635835e7841762e3281ba</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSolCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a25c5da29caf1d233a2ccfea5d5eb320f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_SOL *sourcesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSolCopyOrig</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa211a3e14de10de1ffb4a5a54ed6bed2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_SOL *sourcesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateFiniteSolCopy</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7d38baf88db6e0f43abcc057965830f2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_SOL *sourcesol, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a37c2084d02924f6540e1e5936f590285</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkLPSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac998bae233c4ae9fdf4f930e07d8b2bc</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkNLPSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa21551fa711e65f6a726af742d91b4d6</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkRelaxSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab98aadcdf38d05c7866da542799a6509</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkPseudoSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0594e249860131e4a9e4932e795017e2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkCurrentSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a73e509652c444869b96cdbdd1cd7a1ab</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a56349f981723444c03bdd1aac62c8131</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlinkSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a88085d62c37e99253eb3bcb63a47293a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adbb9f3c0c0b462481fe5eff677463258</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVals</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab4007453cafad788430c2ad55129479f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincSolVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa080f80744eed3b1c8d8429c90231126</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adbd8d051e9c1b3f2d84be42fb140c112</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVals</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a982669e32c6756f863a1cc3741ecf32c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolOrigObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac9efcb03da88bb6acf38f69bd5598af0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTransObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ade249a928a8f6dcb0b254a98779ed324</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecomputeSolObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9a609de25b5111283d57760071444255</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPtransformObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5a61c75e77b23d6c459bc78d513cb41d</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPretransformObj</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae4f655408936ee19f141c9c86df4b8c0</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acdb4255415fbf913d034f73fa724b871</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetSolRunnum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a07245cd923bed863675c4c3129e86a9b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetSolNodenum</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa7962e1cf606e7cb968558a77d72533e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPgetSolHeur</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c54a56bb9c6fa715d74a3ea9d5c21ec</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPareSolsEqual</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a517e9932344fec6606f3a2ef0b538cf8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol1, SCIP_SOL *sol2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPadjustImplicitSolVals</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7e6310909edbfefa8fd6ed41129bfb7a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool uselprows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3bd6c0f66c0179c77cf4c708ee2bef45</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a18132f192e81da44ae7cedf9e83a3a23</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintDualSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af5b112192d3799870ca4ff1748835e51</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintRay</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3bbfa77e286b583d796146202451cfb9</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a64244b2bbdea03fc80580bb0d4f22c86</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL **</type>
      <name>SCIPgetSols</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9a6a0a948f27da830ca9acc5da098b93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPgetBestSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5978378526107a47fb4965d0167a65d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2d0d56545651587e0becf282706860e0</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestTransSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7d7ba6596fb55a1596bc5548fb1970fd</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIProundSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa21b685b67e0c27028fcfb10f62b4d68</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPretransformSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acda353a47ce0167fcdfa2718c9bf8d01</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a981a12aa8af0e393e1bb370a15880427</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9b51e1c9e28d3f6f9f45f37bfdb77897</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSolFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a39900eaed373281cde8f8cd7c1120042</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCurrentSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a847421ea1ec92da72e12cc318a3df719</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae4041777d638e0bcbbb592946b520f15</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySolFree</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af00de2379f996445b4497db79e7449f0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtryCurrentSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4dc3e04fe53ed2cbb9c09405fc25c102</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool printreason, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a87ad26a90aa013915ab65cb2d49e01e5</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *feasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSolOrig</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0277de675980404cf9ae9087a4f6aa6c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *feasible, SCIP_Bool printreason, SCIP_Bool completely)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasPrimalRay</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab8c068f0104819dfcc3671ca97f02528</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPrimalRayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaf8097b7a129046a418cc43b868eabd9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac05fe12d6ec0a9a0038098f5fed8073c</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afb9a71feec8d57a38929de13df701e4f</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchVarEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3ca88edcea21c4e01433a7b42f468c72</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropVarEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3e9a0d6119568dda136e212824af7090</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchRowEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeb33cac5aafb665ff362639cb28d36ef</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropRowEvent</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3f10012cf2e84b9ee81d5c397a138c2f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetCurrentNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a869994597923e6fa9c1930b7b3e231b9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetRootNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acbb3fc30caf49cf50754ac691115aae9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetEffectiveRootDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0af1c9d2d1afd050a19a55453bc8a313</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinRepropagation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2a4edb16b893695d8eb1a7c75ddaa072</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetChildren</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2c93e943a8d4fb918026ffbb87cae40a</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***children, int *nchildren)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNChildren</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1f5697589729356124199c16db1b492e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSiblings</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa8dd0abb76dfa041640ed07581e238d1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***siblings, int *nsiblings)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSiblings</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1662f2e6f660f5bdbebc5b91462c77b8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLeaves</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a57b5dbbcbde164e59fd8c7d57696fa24</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***leaves, int *nleaves)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLeaves</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d18e736f44b47bc390fb112090ee809</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioChild</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3f24043628a1f185e2d30d7782cbb4bd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioSibling</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a71bace9eb8a20d438ca12c0acc4bfa17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestChild</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a98b9f65219967bdb6acbef1bb216607f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestSibling</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abb6da922b7c8277351e3f14b170e42ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestLeaf</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae0bf4acb976ef18c5ecae5575eb28c96</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0050d97837e8b24a6f9fc9f0ef362b02</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestboundNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a433ce895c25cec073958b114601f7993</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetOpenNodesData</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1f66ba0570f495323ae277514243bd6b</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***leaves, SCIP_NODE ***children, SCIP_NODE ***siblings, int *nleaves, int *nchildren, int *nsiblings)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutoffNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adf578314e6cc05eb74619c7226a6428e</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrepropagateNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1ccf8578f677d311fe7ac492c8eddd12</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCutoffdepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7208fa603e52c67b3bb400d4c470fb42</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRepropdepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad4a7d0354d2546df6b4e6e69183fdfb0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNodeRootPath</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a77da882ad387b9b6cd4b123a445969f4</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsetFocusnodeLP</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2c84f65fc6309ee02a79805289d636f7</anchor>
      <arglist>(SCIP *scip, SCIP_Bool solvelp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetReoptChildIDs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae966d1e940661b3162f468c4dee49e29</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, unsigned int *ids, int mem, int *nids)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetReoptLeaveIDs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a789dba01ed12a4688451252819869773</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, unsigned int *ids, int mem, int *nids)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReoptnodes</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a140f411511f54d2b732cafb682714987</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReoptLeaves</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1e4fee066ce0fb2d3f52d47bd5618055</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_REOPTNODE *</type>
      <name>SCIPgetReoptnode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7aa02c5e192a10bb3874906ed27f2777</anchor>
      <arglist>(SCIP *scip, unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddReoptnodeBndchg</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4235e2b48c8e3b1737fbca89baff6a8a</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE *reoptnode, SCIP_VAR *var, SCIP_Real val, SCIP_BOUNDTYPE boundtype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetReoptCompression</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c10d0ae5990598dffd4d07235991594</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE **representation, int nrepresentatives, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddReoptnodeCons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad083873889c96182420686ba7c41aabc</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE *reoptnode, SCIP_VAR **vars, SCIP_Real *vals, int nvars, REOPT_CONSTYPE constype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetReoptnodePath</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7cbf9872d10ad4bd600a67d0094cfc6b</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE *reoptnode, SCIP_VAR **vars, SCIP_Real *vals, SCIP_BOUNDTYPE *boundtypes, int mem, int *nvars, int *nafterdualvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitRepresentation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5a93e4a9ecdcbe65d24062b5298acad8</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE **representatives, int nrepresentatives)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetRepresentation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad12e4f74e262fa9d78504faa36ff24f8</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE **representatives, int nrepresentatives)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeRepresentation</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abb9d7a790de70e709b2657753bd3616c</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE **representatives, int nrepresentatives)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyReopt</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8736e7ee46474e1f23d722b42a78b3da</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE *reoptnode, unsigned int id, SCIP_Real estimate, SCIP_NODE **childnodes, int *ncreatedchilds, int *naddedconss, int childnodessize, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetReoptnodeDualcons</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adf6eab40d14372068f45e33034c75e76</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsplitReoptRoot</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae76ef122ad389e23c85167a3048c6521</anchor>
      <arglist>(SCIP *scip, int *ncreatedchilds, int *naddedconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPreoptimizeNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a54e16ec9bb451b18f59b42d6bd98e05b</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeleteReoptnode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5b7accdd116bd3bfe1581bc36b2d7198</anchor>
      <arglist>(SCIP *scip, SCIP_REOPTNODE **reoptnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetReoptSimilarity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad83671b78d96c3fdf8774321eebb9a4d</anchor>
      <arglist>(SCIP *scip, int run1, int run2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetVarCoefChg</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a90b20e4e59e05a307a7918063a426bca</anchor>
      <arglist>(SCIP *scip, int varidx, SCIP_Bool *negated, SCIP_Bool *entering, SCIP_Bool *leaving)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRuns</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7da0fba0b618088984402dea1436ae8c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReoptRuns</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a94989443bf29eebc2b18db9cc239a979</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodes</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4549c064077c4bbe86077500221d674c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNTotalNodes</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a75bfc3f17379ce05fe6bdc1ca8733ca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesLeft</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2f8a5f5401289bdbe59353e3edc204cb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a91ffda73a55feb871a5268722b66af00</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aefd01543c25ff377e46ff899f2299df2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9c1cba02217c841d69fc3cef21788cda</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootFirstLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd06c7d38609c871c9264158a5f56647</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af9816fdeaeb3860e2fa8ccf7a72915ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae5f3dbc630bb9023f0c952bce67575a9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d32f8dc34fe7c446a9959405f43a3d3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a824ba1f0cd6b4096c67b9c7017e1f58b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBarrierLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab04e5b8dc90dad9339d389a85dcddfc4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBarrierLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a257196dc0af4d07e2a4279ec05b950f3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNResolveLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a78602ef8ff42ae3cb699dafa86997aa9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNResolveLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a40e6b4b2658fd78fd4cc491679f85d4d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalResolveLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada7304b04ff789687aacbf12ddbb95a7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalResolveLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9e08d9e824b9c90f9e2aec8b9b729be9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualResolveLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af2bb538ab90be5bf494dd303f1926530</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualResolveLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab2ad3dc04935b8f0e9e8d0a497510f79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aca2351d6f5c80fbe878e58c4cf157d42</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7f74a5286d23806f10e06e9cb6dec694</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeInitLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a487d4a9edb84583a84eae164578eee9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeInitLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad225e7f8e443b9be84a49d7cb8dc3d65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDivingLPs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac9aa4856929684bf8c1efb32db1c54cc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDivingLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2ca93cdaeb2c779c6943459741b2129c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNStrongbranchs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae749712ea180cab1d2b3db302dac1359</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNStrongbranchLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6877587cd382aebdb420450425e54e72</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootStrongbranchs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a58b80d989edc0f57889b697bd37318a4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootStrongbranchLPIterations</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afdf421bf7223b88c35da0dc67411c702</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPriceRounds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a91e2b35dc6f27f57f237e338fd74dca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevars</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4b037fe8922ccc57497bee7b154eaffa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acd5ede34fd319b8aa1dd4ea5131f32a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsApplied</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a68d93e1141d73204aa1e1c2cbe4decd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepaRounds</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5b428523286ff757c5ccc1d472e2981d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac2bcec94e1d9c1b03a42dcef02bd62ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFoundRound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5b9827007afd091606e9f2c75ded91c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsApplied</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6cc587f3f43c1483b8be7f1525a02963</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adb734513681bf126b4dcb10935a154c5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflictConssFoundNode</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae922e864839c8e54302f57ea498d105f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssApplied</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abe08eff9f13c606dd62c12511797aece</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a832135c063903ff26794a40cfde8c6d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetFocusDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a39c1a939192ebdcf78c40a2ee815f6b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a242f779d9e85e8b7bbdb3a2a7f5bc45d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxTotalDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4aa2f63f3ee5607304ed38e53a318f47</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBacktracks</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaec97069bd5823e3602a56d0b0793467</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPlungeDepth</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaa502314ddd29c3d9de40bab0197ca4e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActiveConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a89978d9776116bf035147ca470589a69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEnabledConss</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5a0864602287ccf44f0a46cf5cfd1926</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a97055e2233b0e52c3d7be7206d9864c4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a71e2fc6b7bd8cdff564bc8b0ba262127</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4fa1615e54c59b47f8156c64df11d8b3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a701a29e227cf348a2d86031f9880cccf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualboundRoot</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d2b80bd1d195f98444c4dd6deb588bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerboundRoot</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a354387886f93bd54e8b47fce344c36f2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFirstLPDualboundRoot</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acad33a81bceb108c8e1303b37bb3c0e4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFirstLPLowerboundRoot</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab8bff0e125f294a5a988a34afa387409</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPrimalbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a23d44bb47495a9064ce375b448446feb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetUpperbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a348c2e9e1c59b4664b128b79ba0cca92</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutoffbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab87340eb66d6fddb826bf07bf4a650ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateCutoffbound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a254deea4e0be25d011db83004bd71262</anchor>
      <arglist>(SCIP *scip, SCIP_Real cutoffbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPrimalboundSol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a14602d2ecb24cfec70492d4c84ec139d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetGap</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a408360be74ace621b7b361e543edeca7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransGap</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab314a925bd8bebe145c8d9941e9208a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNSolsFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a213d551c49588d84a239f133f468b8ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNLimSolsFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa275ee6e5cc5cce08b254e711fecc6df</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBestSolsFound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab5d5272957a919f388821cd37b9a79da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocost</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa5e8f23462892e17fb77ae56ccb3c564</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>add11ccf4d0e8823b6b424b9e32177693</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCount</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3cef732249613ca9e5cfa38fbb2cc11e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCountCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbfc548c17148b7e7e7232e0d3a15f3e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab76cbada1841c8f4a204fb474089daf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2d6e802390395e2386318a9d88b6fefd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa24ce24458f9bdd63dc35f743ca18e27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a05ebf73755ebf8a3e9683b6c1451bd6f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3570f17d8caf75dc8752d4f4eaf5351d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acbd9bdbf2697fff0c504852fb2208ecd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferences</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>addcd8e5d8e440a31da60fdac4ef18e4e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferencesCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af2afd5d59dfa79fce52cbea701b41102</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2a1d533eab0d4f74e5d0e3f281a06c9f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9e8811a9c82dd87ee92e6ee39067d841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffs</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afd6fcd1f689fe7ddcc1dac91ccbdd5a1</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0d41f91a49fc3ed61d740065b282e15e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScore</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aff19a038ec801327fa828a759eb76e9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8d907a27755432f1195c543969f0ca57</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintOrigProblem</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab0fbe8783e109c1f89e47c63103a70e0</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransProblem</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaea37b8cbddff8710cb4cb57ae01d521</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatistics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6e7eb26b996d4466493a504a0924a35d</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintReoptStatistics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aafa844419fb1264114e0ca7e6889c7d5</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBranchingStatistics</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7292cb7e69a7b7ea2556576aa07cc336</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintDisplayLine</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac976ac50f15b3f18230da2ae0bd03248</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VERBLEVEL verblevel, SCIP_Bool endline)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplications</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a1850178381f2a69f273f8bce8f19828b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteImplicationConflictGraph</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab6c11018b121421f05dab24f189fd9b3</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTimeOfDay</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4e5e8c56298839c6c5bc5b7c02cef65f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a185ff4a1a5ceddd5d122eaeaa09d38c1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCPUClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a43e64ffeb84cdc44496d277b980f2e40</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateWallClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac6f4dfffdca8d2e2f191ae95dc35e539</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8ccd4a581e4a0e67fe18b0dd22741e75</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2c20354b77e6d4752c50176158a9e366</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aee369280c4ec16497e836c40db3bec30</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstopClock</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a56bd39850595740305b20f752bff4505</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableOrDisableStatisticTiming</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a727d7b1d9ddeae8a2736e7c2d8dfdb0f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartSolvingTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84a4afa6f195bfe7a8c9a25040ce1f4d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstopSolvingTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adbcce940c786aba3678d4061ca1c5b5e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetClockTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae29d0960525f972c49104aafe09a78dc</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetClockTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af4581f3f9c3be8463bedbad7c42ad3a1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck, SCIP_Real sec)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTotalTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8a25300e376653dd3b7e36e6c243a58d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolvingTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a86e3d773621b6918f1bbf6ef89f1edeb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetReadingTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab1f88bd5cf8be13586b6b7a8aa4acdf6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPresolvingTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aeb8aa9607912df47b5ed70eddd5a30ca</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFirstLPTime</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3b6e51687ceefc7fa3b11b388e66432a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPepsilon</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae3ad14fc5405972193b732f39bf4544d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsumepsilon</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae44d10a77687edb9fca81317c91e2376</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9057fa9938dced1686c54b8dd1639de9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpfeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a80bd01e14a3a3d3c814ce64cd7f6ed47</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9ecd9d48cd473b13c25f37749656cb97</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbarrierconvtol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af17769328fb31dec31ef4962203c44dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcutoffbounddelta</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad09b0e43ac99bc855d9b5ce591168fe6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgFeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a84074d45d8cad01fd62e1d40c76dab20</anchor>
      <arglist>(SCIP *scip, SCIP_Real feastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLpfeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4da361fca0af92a0bfd798d92c239279</anchor>
      <arglist>(SCIP *scip, SCIP_Real lpfeastol, SCIP_Bool printnewvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgDualfeastol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afe018e183e5a0c86551904ee86b2ede5</anchor>
      <arglist>(SCIP *scip, SCIP_Real dualfeastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgBarrierconvtol</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>adb2c4a0dedcaf914db13ccd8cc1c0214</anchor>
      <arglist>(SCIP *scip, SCIP_Real barrierconvtol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkLimitChanged</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae37eec7a1a6ceea5b23956eb297b32a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPinfinity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a26c1965e7862c99be6f4d0cf292630c7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetHugeValue</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa6cfa2c2d8a9d4fba40b669963a9da10</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac87687bf04e43f86291920b3a27a902c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aebab0e8275ac5eb5c56fecf1445cae53</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6098874500a2c86a848a7ead51a271c5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaeb5fa50b4e504158c6f57e62f898c9a</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2a60428605ade992434594643bc291ee</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInfinity</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6ac689c948511ea4a133e1187d33c60b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisHugeValue</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a65bb6048037033a0aab55a71355f7556</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisZero</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ada1c680e74f9164304d6a1b80a9d5ec4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPositive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a534c8a89f5ed608b756fdd2549ed45a4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNegative</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab741e3e43e55fd314fb1ed22b4188bc8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3022a89ce7a688e8474ffd3a179f76e0</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisScalingIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abc3996b42b9c5d96eff9005ad19125b4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val, SCIP_Real scalar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFracIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7f271cbe55369e9b8e20f19d8a9b0e00</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfloor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a64b8534876012c1f65bc48ec8dee7039</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPceil</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab82261caf771bdd1d257928a7ecb49c1</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPround</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7558f526cadb9eaf696475977c3b6681</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfrac</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa4ec45b5abe5092798ef65db57e65d1b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7fbc455f596c206ab4c9aef793003eb2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6c5ad5e1d981673aae28a6cc76dd7dda</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afad73ad88bbd00e0d4d9fecdbe924840</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af81d3e6d8669bd87cfe18b202ec47df8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a9bb24cf1101995e1c8632dea7c3d4367</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumZero</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad085ed607bbe30c0018292d821c3dcac</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumPositive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0ec6bbf0e38eb5aafef44d1f291cc6af</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumNegative</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a506d3e16e2110af1003cd5f1094f9d80</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5173b989825c4d92e3f5c1fdb3bda0da</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a760c9e841bfb93dbb8b154a8c687e33d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7dd943a1dba3ef0c108f1202b8963ac2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac6a6239d776db49ce1ccf1e17750af27</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a12aa46b95e92ca8a44ef4318fcabd318</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasZero</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a61425eb4e85f3edaeb8c227b98104018</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasPositive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af8c5293ba162319535089cc7bb998135</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasNegative</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a7b87f4153257434cc87cdc25b70b2057</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a848f1b16088177dfe52cc9a831b7ae2d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasFracIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2c907faa2bb47f34b1d2491cdcdc0aa7</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFloor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6796e3ecf99da9862e914747eaadd9cf</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasCeil</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a5c2e6890ce633de31011bda7875996b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasRound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a79fcc5bd26878940ac049eab0a2fec35</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFrac</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a333a924a364d2882974062d9e006e4ff</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c6667d560abba8d817e638894f499c9</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a51a6e4ad4223f76930f846e77fff61fe</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aed27e352c94bf699df503968be534d32</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c533a12d765cef15a8a812b018732cf</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>acc15ac32ecd96b7c725d780451952924</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasZero</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa90b04deecaec29ac33d1253acbe4708</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasPositive</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6047b8e2f84e83ceabdb75ae330b711a</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasNegative</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a277900bec8f14deabaf47a27fc2c5c0d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a56117921242f34858dd368d7844a4a27</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisDualfeasFracIntegral</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a75066afba336683b34b8d20d85e67817</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeasFloor</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0b4b571d1871518e6afb1a7d1d6af02e</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeasCeil</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a242cb7d26a6f80ccc14b2393802e43ba</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeasRound</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6db51b36854a088318a59fcad080fec7</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeasFrac</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aacac92f1796e0a343fdfe3cb08fac857</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLbBetter</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a58dd466e39788971c7d4f22c00549915</anchor>
      <arglist>(SCIP *scip, SCIP_Real newlb, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisUbBetter</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a11a6ababcbe9f88558735dd63635a66b</anchor>
      <arglist>(SCIP *scip, SCIP_Real newub, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a099dd6dac1110e34019cdd637fded132</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a36480411a3401805d9bb0bcfa2b06b30</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a117adaa841ba0978065ae78c64bf9c6c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3aa55984855074f0e52a20d13f89cee4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a384b4766165749da514343138a334b76</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelEQ</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4591cd0403adc8515381ba1ef88bac7e</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a70d2b54609bcd6fca99fc2c0741e9a71</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a3685ea2563c2baa026bf157cae9eb2ce</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGT</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2562282385deb2faa61699107441d8b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGE</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbd1d627fc6ed441ed83adc3b4e0def9</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconvertRealToInt</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad740e2dda71468dc4f834b26c19e6d36</anchor>
      <arglist>(SCIP *scip, SCIP_Real real)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconvertRealToLongint</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab27518a14bf4f05728e5ae78fbcb903b</anchor>
      <arglist>(SCIP *scip, SCIP_Real real)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisUpdateUnreliable</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad0a786401b40ee09ebae75390a7e5729</anchor>
      <arglist>(SCIP *scip, SCIP_Real newvalue, SCIP_Real oldvalue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintReal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6656e7198b300483b3e5540516278732</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Real val, int width, int precision)</arglist>
    </member>
    <member kind="function">
      <type>BMS_BLKMEM *</type>
      <name>SCIPblkmem</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a13330793135e0be591485b51b9fda2ee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>BMS_BUFMEM *</type>
      <name>SCIPbuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aef8b901d0a4a741e7ebe784982b372ed</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>BMS_BUFMEM *</type>
      <name>SCIPcleanbuffer</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a8c0551242691fafbbf2b437655d85cd9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetMemUsed</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a25226d1ea690f8147dd8c6be2433fae8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetMemExternEstim</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0d200fedce320afe06c12693fc30edbf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcalcMemGrowSize</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a45225e47a88493523a4518bcd8f7e18f</anchor>
      <arglist>(SCIP *scip, int num)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPensureBlockMemoryArray_call</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a2db3bba0612b210613e08a4ad535de3b</anchor>
      <arglist>(SCIP *scip, void **arrayptr, size_t elemsize, int *arraysize, int minsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintMemoryDiagnostic</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a09d69a221bea08a0b314409bfc0ad1bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRealarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4e6f109b64d20fc639e2ccea10dd7a07</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeRealarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a95b7da914f268329fd08f130dcfb7c75</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendRealarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad6ff2b6be1016150f38fdcff2b60de4b</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRealarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afd5142ff13d294cef7136c82c4720818</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRealarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a6dcdf27c793a3968fb52414a1b2110ff</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ad93b72b65c0ce5880e02757ab6adf5d1</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincRealarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a78496aa8fe43c55824197be198f41ade</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMinIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a0746387e946cb6c56533b62f794bf811</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMaxIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a52f31bd1b1208325a27159f9014b33d4</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateIntarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aae2f6cf84273a6b575983d5151d496b4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeIntarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ae76d1e41d86ed89540a4d03de98df65b</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendIntarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a56ed132c02d68b6d51a9b0c71e96c838</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearIntarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab9cfb4664f3642d2003835f9982535a4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa4b80f736f40e21a5718709c8341ba56</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aff5e9dfa1a71bac95f5d12d58b195923</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincIntarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abaf6549f5af89c2d33b9e3cf2c9a39f7</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMinIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a4a0bc5da4b15e5e3cd2eb3a9b5ae05e3</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMaxIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a437038afa999ca5fab8a8277fca27417</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateBoolarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>abbcffe275bb8f91b306d9617f5cc0a45</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeBoolarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aa50aca1a68d07eba80edcec530f22767</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendBoolarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a958b1e079b85c64810ea085b15ca2e9c</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearBoolarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af644d93483846007725cf6f76abd51fe</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetBoolarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a186c045fca2f197c421a71f50cb06c94</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac90479c20564329855f180e8d88f8006</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx, SCIP_Bool val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMinIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a92224d59dfc96f2564dd55cfa6656683</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMaxIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab336c51102fb1836994d95d233de3a93</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePtrarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>afd49debdd6d6a47671b61d1e89a40ed9</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreePtrarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a90c323657b014cc9b2c482ff52882143</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendPtrarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>af2459cfe321058c510eb54563985e40e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearPtrarray</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a29ba6b5eefcacce05abdb97fe1297cd0</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetPtrarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ac0016ddda5170cf0997ae10f3bbe87cc</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPtrarrayVal</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>ab6a1bf17dbff7f0664e7b936862a58f6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMinIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>a12e56e85d1eec46e4b45f681e5dc5c5e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMaxIdx</name>
      <anchorfile>scip_8h.shtml</anchorfile>
      <anchor>aaa2e5121082f66d69757d59e3146ffd6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scipdefplugins.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>scipdefplugins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="branch__allfullstrong_8h" name="branch_allfullstrong.h" local="yes" imported="no">scip/branch_allfullstrong.h</includes>
    <includes id="branch__cloud_8h" name="branch_cloud.h" local="yes" imported="no">scip/branch_cloud.h</includes>
    <includes id="branch__distribution_8h" name="branch_distribution.h" local="yes" imported="no">scip/branch_distribution.h</includes>
    <includes id="branch__fullstrong_8h" name="branch_fullstrong.h" local="yes" imported="no">scip/branch_fullstrong.h</includes>
    <includes id="branch__inference_8h" name="branch_inference.h" local="yes" imported="no">scip/branch_inference.h</includes>
    <includes id="branch__leastinf_8h" name="branch_leastinf.h" local="yes" imported="no">scip/branch_leastinf.h</includes>
    <includes id="branch__mostinf_8h" name="branch_mostinf.h" local="yes" imported="no">scip/branch_mostinf.h</includes>
    <includes id="branch__multaggr_8h" name="branch_multaggr.h" local="yes" imported="no">scip/branch_multaggr.h</includes>
    <includes id="branch__nodereopt_8h" name="branch_nodereopt.h" local="yes" imported="no">scip/branch_nodereopt.h</includes>
    <includes id="branch__pscost_8h" name="branch_pscost.h" local="yes" imported="no">scip/branch_pscost.h</includes>
    <includes id="branch__random_8h" name="branch_random.h" local="yes" imported="no">scip/branch_random.h</includes>
    <includes id="branch__relpscost_8h" name="branch_relpscost.h" local="yes" imported="no">scip/branch_relpscost.h</includes>
    <includes id="compr__largestrepr_8h" name="compr_largestrepr.h" local="yes" imported="no">scip/compr_largestrepr.h</includes>
    <includes id="compr__weakcompr_8h" name="compr_weakcompr.h" local="yes" imported="no">scip/compr_weakcompr.h</includes>
    <includes id="cons__abspower_8h" name="cons_abspower.h" local="yes" imported="no">scip/cons_abspower.h</includes>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__bivariate_8h" name="cons_bivariate.h" local="yes" imported="no">scip/cons_bivariate.h</includes>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <includes id="cons__conjunction_8h" name="cons_conjunction.h" local="yes" imported="no">scip/cons_conjunction.h</includes>
    <includes id="cons__countsols_8h" name="cons_countsols.h" local="yes" imported="no">scip/cons_countsols.h</includes>
    <includes id="cons__cumulative_8h" name="cons_cumulative.h" local="yes" imported="no">scip/cons_cumulative.h</includes>
    <includes id="cons__disjunction_8h" name="cons_disjunction.h" local="yes" imported="no">scip/cons_disjunction.h</includes>
    <includes id="cons__indicator_8h" name="cons_indicator.h" local="yes" imported="no">scip/cons_indicator.h</includes>
    <includes id="cons__integral_8h" name="cons_integral.h" local="yes" imported="no">scip/cons_integral.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__linking_8h" name="cons_linking.h" local="yes" imported="no">scip/cons_linking.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__nonlinear_8h" name="cons_nonlinear.h" local="yes" imported="no">scip/cons_nonlinear.h</includes>
    <includes id="cons__or_8h" name="cons_or.h" local="yes" imported="no">scip/cons_or.h</includes>
    <includes id="cons__orbitope_8h" name="cons_orbitope.h" local="yes" imported="no">scip/cons_orbitope.h</includes>
    <includes id="cons__pseudoboolean_8h" name="cons_pseudoboolean.h" local="yes" imported="no">scip/cons_pseudoboolean.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__soc_8h" name="cons_soc.h" local="yes" imported="no">scip/cons_soc.h</includes>
    <includes id="cons__sos1_8h" name="cons_sos1.h" local="yes" imported="no">scip/cons_sos1.h</includes>
    <includes id="cons__sos2_8h" name="cons_sos2.h" local="yes" imported="no">scip/cons_sos2.h</includes>
    <includes id="cons__superindicator_8h" name="cons_superindicator.h" local="yes" imported="no">scip/cons_superindicator.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__xor_8h" name="cons_xor.h" local="yes" imported="no">scip/cons_xor.h</includes>
    <includes id="disp__default_8h" name="disp_default.h" local="yes" imported="no">scip/disp_default.h</includes>
    <includes id="event__softtimelimit_8h" name="event_softtimelimit.h" local="yes" imported="no">scip/event_softtimelimit.h</includes>
    <includes id="heur__actconsdiving_8h" name="heur_actconsdiving.h" local="yes" imported="no">scip/heur_actconsdiving.h</includes>
    <includes id="heur__bound_8h" name="heur_bound.h" local="yes" imported="no">scip/heur_bound.h</includes>
    <includes id="heur__clique_8h" name="heur_clique.h" local="yes" imported="no">scip/heur_clique.h</includes>
    <includes id="heur__coefdiving_8h" name="heur_coefdiving.h" local="yes" imported="no">scip/heur_coefdiving.h</includes>
    <includes id="heur__crossover_8h" name="heur_crossover.h" local="yes" imported="no">scip/heur_crossover.h</includes>
    <includes id="heur__dins_8h" name="heur_dins.h" local="yes" imported="no">scip/heur_dins.h</includes>
    <includes id="heur__distributiondiving_8h" name="heur_distributiondiving.h" local="yes" imported="no">scip/heur_distributiondiving.h</includes>
    <includes id="heur__dualval_8h" name="heur_dualval.h" local="yes" imported="no">scip/heur_dualval.h</includes>
    <includes id="heur__feaspump_8h" name="heur_feaspump.h" local="yes" imported="no">scip/heur_feaspump.h</includes>
    <includes id="heur__fixandinfer_8h" name="heur_fixandinfer.h" local="yes" imported="no">scip/heur_fixandinfer.h</includes>
    <includes id="heur__fracdiving_8h" name="heur_fracdiving.h" local="yes" imported="no">scip/heur_fracdiving.h</includes>
    <includes id="heur__guideddiving_8h" name="heur_guideddiving.h" local="yes" imported="no">scip/heur_guideddiving.h</includes>
    <includes id="heur__indicator_8h" name="heur_indicator.h" local="yes" imported="no">scip/heur_indicator.h</includes>
    <includes id="heur__intdiving_8h" name="heur_intdiving.h" local="yes" imported="no">scip/heur_intdiving.h</includes>
    <includes id="heur__intshifting_8h" name="heur_intshifting.h" local="yes" imported="no">scip/heur_intshifting.h</includes>
    <includes id="heur__linesearchdiving_8h" name="heur_linesearchdiving.h" local="yes" imported="no">scip/heur_linesearchdiving.h</includes>
    <includes id="heur__localbranching_8h" name="heur_localbranching.h" local="yes" imported="no">scip/heur_localbranching.h</includes>
    <includes id="heur__mutation_8h" name="heur_mutation.h" local="yes" imported="no">scip/heur_mutation.h</includes>
    <includes id="heur__nlpdiving_8h" name="heur_nlpdiving.h" local="yes" imported="no">scip/heur_nlpdiving.h</includes>
    <includes id="heur__objpscostdiving_8h" name="heur_objpscostdiving.h" local="yes" imported="no">scip/heur_objpscostdiving.h</includes>
    <includes id="heur__octane_8h" name="heur_octane.h" local="yes" imported="no">scip/heur_octane.h</includes>
    <includes id="heur__ofins_8h" name="heur_ofins.h" local="yes" imported="no">scip/heur_ofins.h</includes>
    <includes id="heur__oneopt_8h" name="heur_oneopt.h" local="yes" imported="no">scip/heur_oneopt.h</includes>
    <includes id="heur__pscostdiving_8h" name="heur_pscostdiving.h" local="yes" imported="no">scip/heur_pscostdiving.h</includes>
    <includes id="heur__proximity_8h" name="heur_proximity.h" local="yes" imported="no">scip/heur_proximity.h</includes>
    <includes id="heur__randrounding_8h" name="heur_randrounding.h" local="yes" imported="no">scip/heur_randrounding.h</includes>
    <includes id="heur__rens_8h" name="heur_rens.h" local="yes" imported="no">scip/heur_rens.h</includes>
    <includes id="heur__reoptsols_8h" name="heur_reoptsols.h" local="yes" imported="no">scip/heur_reoptsols.h</includes>
    <includes id="heur__rins_8h" name="heur_rins.h" local="yes" imported="no">scip/heur_rins.h</includes>
    <includes id="heur__rootsoldiving_8h" name="heur_rootsoldiving.h" local="yes" imported="no">scip/heur_rootsoldiving.h</includes>
    <includes id="heur__rounding_8h" name="heur_rounding.h" local="yes" imported="no">scip/heur_rounding.h</includes>
    <includes id="heur__shiftandpropagate_8h" name="heur_shiftandpropagate.h" local="yes" imported="no">scip/heur_shiftandpropagate.h</includes>
    <includes id="heur__shifting_8h" name="heur_shifting.h" local="yes" imported="no">scip/heur_shifting.h</includes>
    <includes id="heur__simplerounding_8h" name="heur_simplerounding.h" local="yes" imported="no">scip/heur_simplerounding.h</includes>
    <includes id="heur__subnlp_8h" name="heur_subnlp.h" local="yes" imported="no">scip/heur_subnlp.h</includes>
    <includes id="heur__trivial_8h" name="heur_trivial.h" local="yes" imported="no">scip/heur_trivial.h</includes>
    <includes id="heur__trivialnegation_8h" name="heur_trivialnegation.h" local="yes" imported="no">scip/heur_trivialnegation.h</includes>
    <includes id="heur__trysol_8h" name="heur_trysol.h" local="yes" imported="no">scip/heur_trysol.h</includes>
    <includes id="heur__twoopt_8h" name="heur_twoopt.h" local="yes" imported="no">scip/heur_twoopt.h</includes>
    <includes id="heur__undercover_8h" name="heur_undercover.h" local="yes" imported="no">scip/heur_undercover.h</includes>
    <includes id="heur__vbounds_8h" name="heur_vbounds.h" local="yes" imported="no">scip/heur_vbounds.h</includes>
    <includes id="heur__veclendiving_8h" name="heur_veclendiving.h" local="yes" imported="no">scip/heur_veclendiving.h</includes>
    <includes id="heur__zeroobj_8h" name="heur_zeroobj.h" local="yes" imported="no">scip/heur_zeroobj.h</includes>
    <includes id="heur__zirounding_8h" name="heur_zirounding.h" local="yes" imported="no">scip/heur_zirounding.h</includes>
    <includes id="nodesel__bfs_8h" name="nodesel_bfs.h" local="yes" imported="no">scip/nodesel_bfs.h</includes>
    <includes id="nodesel__breadthfirst_8h" name="nodesel_breadthfirst.h" local="yes" imported="no">scip/nodesel_breadthfirst.h</includes>
    <includes id="nodesel__dfs_8h" name="nodesel_dfs.h" local="yes" imported="no">scip/nodesel_dfs.h</includes>
    <includes id="nodesel__estimate_8h" name="nodesel_estimate.h" local="yes" imported="no">scip/nodesel_estimate.h</includes>
    <includes id="nodesel__hybridestim_8h" name="nodesel_hybridestim.h" local="yes" imported="no">scip/nodesel_hybridestim.h</includes>
    <includes id="nodesel__uct_8h" name="nodesel_uct.h" local="yes" imported="no">scip/nodesel_uct.h</includes>
    <includes id="nodesel__restartdfs_8h" name="nodesel_restartdfs.h" local="yes" imported="no">scip/nodesel_restartdfs.h</includes>
    <includes id="presol__boundshift_8h" name="presol_boundshift.h" local="yes" imported="no">scip/presol_boundshift.h</includes>
    <includes id="presol__components_8h" name="presol_components.h" local="yes" imported="no">scip/presol_components.h</includes>
    <includes id="presol__convertinttobin_8h" name="presol_convertinttobin.h" local="yes" imported="no">scip/presol_convertinttobin.h</includes>
    <includes id="presol__domcol_8h" name="presol_domcol.h" local="yes" imported="no">scip/presol_domcol.h</includes>
    <includes id="presol__implfree_8h" name="presol_implfree.h" local="yes" imported="no">scip/presol_implfree.h</includes>
    <includes id="presol__dualagg_8h" name="presol_dualagg.h" local="yes" imported="no">scip/presol_dualagg.h</includes>
    <includes id="presol__dualinfer_8h" name="presol_dualinfer.h" local="yes" imported="no">scip/presol_dualinfer.h</includes>
    <includes id="presol__gateextraction_8h" name="presol_gateextraction.h" local="yes" imported="no">scip/presol_gateextraction.h</includes>
    <includes id="presol__implics_8h" name="presol_implics.h" local="yes" imported="no">scip/presol_implics.h</includes>
    <includes id="presol__inttobinary_8h" name="presol_inttobinary.h" local="yes" imported="no">scip/presol_inttobinary.h</includes>
    <includes id="presol__redvub_8h" name="presol_redvub.h" local="yes" imported="no">scip/presol_redvub.h</includes>
    <includes id="presol__trivial_8h" name="presol_trivial.h" local="yes" imported="no">scip/presol_trivial.h</includes>
    <includes id="presol__tworowbnd_8h" name="presol_tworowbnd.h" local="yes" imported="no">scip/presol_tworowbnd.h</includes>
    <includes id="presol__stuffing_8h" name="presol_stuffing.h" local="yes" imported="no">scip/presol_stuffing.h</includes>
    <includes id="prop__dualfix_8h" name="prop_dualfix.h" local="yes" imported="no">scip/prop_dualfix.h</includes>
    <includes id="prop__genvbounds_8h" name="prop_genvbounds.h" local="yes" imported="no">scip/prop_genvbounds.h</includes>
    <includes id="prop__obbt_8h" name="prop_obbt.h" local="yes" imported="no">scip/prop_obbt.h</includes>
    <includes id="prop__probing_8h" name="prop_probing.h" local="yes" imported="no">scip/prop_probing.h</includes>
    <includes id="prop__pseudoobj_8h" name="prop_pseudoobj.h" local="yes" imported="no">scip/prop_pseudoobj.h</includes>
    <includes id="prop__redcost_8h" name="prop_redcost.h" local="yes" imported="no">scip/prop_redcost.h</includes>
    <includes id="prop__rootredcost_8h" name="prop_rootredcost.h" local="yes" imported="no">scip/prop_rootredcost.h</includes>
    <includes id="prop__vbounds_8h" name="prop_vbounds.h" local="yes" imported="no">scip/prop_vbounds.h</includes>
    <includes id="reader__bnd_8h" name="reader_bnd.h" local="yes" imported="no">scip/reader_bnd.h</includes>
    <includes id="reader__ccg_8h" name="reader_ccg.h" local="yes" imported="no">scip/reader_ccg.h</includes>
    <includes id="reader__cip_8h" name="reader_cip.h" local="yes" imported="no">scip/reader_cip.h</includes>
    <includes id="reader__cnf_8h" name="reader_cnf.h" local="yes" imported="no">scip/reader_cnf.h</includes>
    <includes id="reader__diff_8h" name="reader_diff.h" local="yes" imported="no">scip/reader_diff.h</includes>
    <includes id="reader__fix_8h" name="reader_fix.h" local="yes" imported="no">scip/reader_fix.h</includes>
    <includes id="reader__fzn_8h" name="reader_fzn.h" local="yes" imported="no">scip/reader_fzn.h</includes>
    <includes id="reader__gms_8h" name="reader_gms.h" local="yes" imported="no">scip/reader_gms.h</includes>
    <includes id="reader__lp_8h" name="reader_lp.h" local="yes" imported="no">scip/reader_lp.h</includes>
    <includes id="reader__mps_8h" name="reader_mps.h" local="yes" imported="no">scip/reader_mps.h</includes>
    <includes id="reader__opb_8h" name="reader_opb.h" local="yes" imported="no">scip/reader_opb.h</includes>
    <includes id="reader__osil_8h" name="reader_osil.h" local="yes" imported="no">scip/reader_osil.h</includes>
    <includes id="reader__pip_8h" name="reader_pip.h" local="yes" imported="no">scip/reader_pip.h</includes>
    <includes id="reader__ppm_8h" name="reader_ppm.h" local="yes" imported="no">scip/reader_ppm.h</includes>
    <includes id="reader__pbm_8h" name="reader_pbm.h" local="yes" imported="no">scip/reader_pbm.h</includes>
    <includes id="reader__rlp_8h" name="reader_rlp.h" local="yes" imported="no">scip/reader_rlp.h</includes>
    <includes id="reader__sol_8h" name="reader_sol.h" local="yes" imported="no">scip/reader_sol.h</includes>
    <includes id="reader__wbo_8h" name="reader_wbo.h" local="yes" imported="no">scip/reader_wbo.h</includes>
    <includes id="reader__zpl_8h" name="reader_zpl.h" local="yes" imported="no">scip/reader_zpl.h</includes>
    <includes id="sepa__eccuts_8h" name="sepa_eccuts.h" local="yes" imported="no">scip/sepa_eccuts.h</includes>
    <includes id="sepa__cgmip_8h" name="sepa_cgmip.h" local="yes" imported="no">scip/sepa_cgmip.h</includes>
    <includes id="sepa__clique_8h" name="sepa_clique.h" local="yes" imported="no">scip/sepa_clique.h</includes>
    <includes id="sepa__closecuts_8h" name="sepa_closecuts.h" local="yes" imported="no">scip/sepa_closecuts.h</includes>
    <includes id="sepa__cmir_8h" name="sepa_cmir.h" local="yes" imported="no">scip/sepa_cmir.h</includes>
    <includes id="sepa__disjunctive_8h" name="sepa_disjunctive.h" local="yes" imported="no">scip/sepa_disjunctive.h</includes>
    <includes id="sepa__flowcover_8h" name="sepa_flowcover.h" local="yes" imported="no">scip/sepa_flowcover.h</includes>
    <includes id="sepa__gomory_8h" name="sepa_gomory.h" local="yes" imported="no">scip/sepa_gomory.h</includes>
    <includes id="sepa__impliedbounds_8h" name="sepa_impliedbounds.h" local="yes" imported="no">scip/sepa_impliedbounds.h</includes>
    <includes id="sepa__intobj_8h" name="sepa_intobj.h" local="yes" imported="no">scip/sepa_intobj.h</includes>
    <includes id="sepa__mcf_8h" name="sepa_mcf.h" local="yes" imported="no">scip/sepa_mcf.h</includes>
    <includes id="sepa__oddcycle_8h" name="sepa_oddcycle.h" local="yes" imported="no">scip/sepa_oddcycle.h</includes>
    <includes id="sepa__rapidlearning_8h" name="sepa_rapidlearning.h" local="yes" imported="no">scip/sepa_rapidlearning.h</includes>
    <includes id="sepa__strongcg_8h" name="sepa_strongcg.h" local="yes" imported="no">scip/sepa_strongcg.h</includes>
    <includes id="sepa__zerohalf_8h" name="sepa_zerohalf.h" local="yes" imported="no">scip/sepa_zerohalf.h</includes>
    <includes id="scipshell_8h" name="scipshell.h" local="yes" imported="no">scip/scipshell.h</includes>
    <includes id="nlpi__ipopt_8h" name="nlpi_ipopt.h" local="yes" imported="no">nlpi/nlpi_ipopt.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDefaultPlugins</name>
      <anchorfile>scipdefplugins_8h.shtml</anchorfile>
      <anchor>a916f8b05e80e6f6b4a29325242339589</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scipgithash.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>scipgithash_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetGitHash</name>
      <anchorfile>scipgithash_8h.shtml</anchorfile>
      <anchor>a27b3a09a9d7ea3a0adb74d6ffa88cc74</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scipshell.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>scipshell_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprocessShellArguments</name>
      <anchorfile>scipshell_8h.shtml</anchorfile>
      <anchor>afcb1935a4c3a04237ffbc9c1a232b917</anchor>
      <arglist>(SCIP *scip, int argc, char **argv, const char *defaultsetname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrunShell</name>
      <anchorfile>scipshell_8h.shtml</anchorfile>
      <anchor>a7030b671768cc1c2f374c9e35f448b41</anchor>
      <arglist>(int argc, char **argv, const char *defaultsetname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cgmip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__cgmip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCGMIP</name>
      <anchorfile>sepa__cgmip_8h.shtml</anchorfile>
      <anchor>a69c90dfe63c76fae4cfb392383c58f08</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_clique.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__clique_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaClique</name>
      <anchorfile>sepa__clique_8h.shtml</anchorfile>
      <anchor>a5ddb896ec754c805aefbf06788fd921b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_closecuts.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__closecuts_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaClosecuts</name>
      <anchorfile>sepa__closecuts_8h.shtml</anchorfile>
      <anchor>ab6302e334365ab3ca0893ecb7c074ff2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBasePointClosecuts</name>
      <anchorfile>sepa__closecuts_8h.shtml</anchorfile>
      <anchor>a569adfeecdc676ed7ba879a095a50bb2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cmir.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__cmir_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutGenerationHeuristicCmir</name>
      <anchorfile>sepa__cmir_8h.shtml</anchorfile>
      <anchor>ac3bcbc110cdbc63f17bb65fd9e637a74</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_SOL *sol, SCIP_Real *varsolvals, int maxtestdelta, SCIP_Real *rowweights, SCIP_Real maxweight, int *weightinds, int nweightinds, int rowlensum, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Bool trynegscaling, SCIP_Bool cutremovable, const char *cutclassname, SCIP_Bool *cutoff, int *ncuts, SCIP_Real *delta, SCIP_Bool *deltavalid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCmir</name>
      <anchorfile>sepa__cmir_8h.shtml</anchorfile>
      <anchor>ae85301baa9e6fe709194a72f116003af</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_disjunctive.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__disjunctive_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaDisjunctive</name>
      <anchorfile>sepa__disjunctive_8h.shtml</anchorfile>
      <anchor>aa7e23d4355e7344721c2dd3dd35face8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_eccuts.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__eccuts_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaEccuts</name>
      <anchorfile>sepa__eccuts_8h.shtml</anchorfile>
      <anchor>a2e1ebc001cdb228e520b54df20f3cf99</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_flowcover.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__flowcover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaFlowcover</name>
      <anchorfile>sepa__flowcover_8h.shtml</anchorfile>
      <anchor>aaf4f275c9e2b242c523f5a75c30609f5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_gomory.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__gomory_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaGomory</name>
      <anchorfile>sepa__gomory_8h.shtml</anchorfile>
      <anchor>af62d66cb36a24adce8603c9fde9eeac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_impliedbounds.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__impliedbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8h.shtml</anchorfile>
      <anchor>a7a678e395b274809eb4820ddfcfea9ef</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_intobj.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__intobj_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaIntobj</name>
      <anchorfile>sepa__intobj_8h.shtml</anchorfile>
      <anchor>a2edbf206b7425ef1bf6a16c778e52841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_mcf.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__mcf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaMcf</name>
      <anchorfile>sepa__mcf_8h.shtml</anchorfile>
      <anchor>a19ef83abde30deba9bcfaf179478264f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_oddcycle.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__oddcycle_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaOddcycle</name>
      <anchorfile>sepa__oddcycle_8h.shtml</anchorfile>
      <anchor>a72a57e303c78268177f3af242b36040e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_rapidlearning.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__rapidlearning_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8h.shtml</anchorfile>
      <anchor>a296cdc6f6ccc4941ca6ff7153fce691a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_strongcg.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__strongcg_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaStrongcg</name>
      <anchorfile>sepa__strongcg_8h.shtml</anchorfile>
      <anchor>aab8f7ae818e9240d481998b8eec6cd9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_zerohalf.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>sepa__zerohalf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaZerohalf</name>
      <anchorfile>sepa__zerohalf_8h.shtml</anchorfile>
      <anchor>a0c5204d5a0d155da72415b8de968b8a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_coloring.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/tclique/</path>
    <filename>tclique__coloring_8h</filename>
    <member kind="typedef">
      <type>struct _ITV</type>
      <name>ITV</name>
      <anchorfile>tclique__coloring_8h.shtml</anchorfile>
      <anchor>abdfa79339ec20e66fee7847f6ba56e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _LIST_ITV</type>
      <name>LIST_ITV</name>
      <anchorfile>tclique__coloring_8h.shtml</anchorfile>
      <anchor>a1cec391c84509e1d146da70dcdaa6124</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _NBC</type>
      <name>NBC</name>
      <anchorfile>tclique__coloring_8h.shtml</anchorfile>
      <anchor>aa157a5d7cf6bb395b789bac65e39e371</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_WEIGHT</type>
      <name>tcliqueColoring</name>
      <anchorfile>tclique__coloring_8h.shtml</anchorfile>
      <anchor>ac62c3d52873851323743b71983fe218b</anchor>
      <arglist>(TCLIQUE_GETNNODES((*getnnodes)), TCLIQUE_GETWEIGHTS((*getweights)), TCLIQUE_SELECTADJNODES((*selectadjnodes)), TCLIQUE_GRAPH *tcliquegraph, BMS_CHKMEM *mem, int *buffer, int *V, int nV, NBC *gsd, TCLIQUE_Bool *iscolored, TCLIQUE_WEIGHT *apbound, int *clique, int *nclique, TCLIQUE_WEIGHT *weightclique)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_def.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/tclique/</path>
    <filename>tclique__def_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_ABORT</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>a590e4c53373abf11f45634e36f98fd9b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_FALSE</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>a8f392c29af0e31fd7c0259617d32e0bb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debug</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>a1614f028c1fef258edfb81fb963609cb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugMessage</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>af8afc5b10fab499ee5a6e3cb55ba9dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugPrintf</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>a94d76f325af05727bf195c75fedafa4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>infoMessage</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>af422639d9b5ff8d503c9846c58aea7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>tclique__def_8h.shtml</anchorfile>
      <anchor>aacc3ee1a7f283f8ef65cea31f4436a95</anchor>
      <arglist>(x, y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_branch.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__branch_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHCOPY</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>ac6db6a68b502e989adabb7ae43b1eda3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHFREE</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>acb427cf8c4d82d9c44d7e614be8945f3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHINIT</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>aa37dbc020e827bdaaf485d42576123a9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXIT</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>acadff6a17dc2daeef6b4cd2b79f1cb12</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHINITSOL</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>a5e9c129ee7c8e38aecd7f8916eed4666</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXITSOL</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>aeb1e8b80fffbf00e00189b1deaa04816</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECLP</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>a431c77bcbd592ef87be5fbf0ec21a2f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECEXT</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>a47bf527ecab10bd124e7717a3131428f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECPS</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>a167b3381f1efeb3a65cfd460c45a5b2e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchCand</type>
      <name>SCIP_BRANCHCAND</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>a9fbf53ca885c90b77cc111f117aec129</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Branchrule</type>
      <name>SCIP_BRANCHRULE</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>ad7a1ef4885679e08d1661acff6409cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchruleData</type>
      <name>SCIP_BRANCHRULEDATA</name>
      <anchorfile>type__branch_8h.shtml</anchorfile>
      <anchor>ad8162ab474c0a3151abeccc89f3172ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_clock.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__clock_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <member kind="typedef">
      <type>enum SCIP_ClockType</type>
      <name>SCIP_CLOCKTYPE</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a48f472d3c0ca1d4e1142c06b0ece35bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Clock</type>
      <name>SCIP_CLOCK</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a0b4dd054b775f3a4ba567a57cb62e75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CPUClock</type>
      <name>SCIP_CPUCLOCK</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a67c613a49f2bf31236684e0287af7379</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_WallClock</type>
      <name>SCIP_WALLCLOCK</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a7fefc16d3fee2ad438377c98b12b7592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ClockType</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_DEFAULT</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8ac93742b0a4e0fe1012dfc1f9605c8769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_CPU</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a61b82696df8b741304ca7f51258e291f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_WALL</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a3d0a3ebcf651a1a9ca0feeed39887b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CLOCKTYPE_DEFAULT</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8ac93742b0a4e0fe1012dfc1f9605c8769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CLOCKTYPE_CPU</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a61b82696df8b741304ca7f51258e291f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CLOCKTYPE_WALL</name>
      <anchorfile>type__clock_8h.shtml</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a3d0a3ebcf651a1a9ca0feeed39887b09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_compr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__compr_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__timing_8h" name="type_timing.h" local="yes" imported="no">scip/type_timing.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPRCOPY</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>ae630c1cf008c4849d6934c28c129330e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPRFREE</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>ab1ec40d7c40a63aff3f518ffe861b131</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPRINIT</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>acbcc67a8052c77e85297529b604b5a55</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPREXIT</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>ac4a886f7bd0b09143e951563f98448af</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPRINITSOL</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>ae0ca622ba34c650746fe452129e72a8c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPREXITSOL</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>a917435668363b2bb1e51ace171dabb9e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_COMPREXEC</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>ab9c400ecca799795ecea98136e871bfc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Compr</type>
      <name>SCIP_COMPR</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>a1dad4128f9fa62c97c794c92409260ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ComprData</type>
      <name>SCIP_COMPRDATA</name>
      <anchorfile>type__compr_8h.shtml</anchorfile>
      <anchor>a968679239a78a0bfa4e8666e0fb2c476</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_conflict.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__conflict_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTCOPY</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a3bc9d80075e3a7151077a7300387e3d4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTFREE</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a6e74ec8f3458b618cd92227bbf13630e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTINIT</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>aaeabc722dc7481b86e3bb3a662675e43</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXIT</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a2ee1f34be310417dca531cc06102a0d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTINITSOL</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a54806db27897cb77175582880d1bae0b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXITSOL</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>afebe775ff235666e5cbb017c82722b94</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXEC</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a4fd356f9d08ce87b104529f9e8174939</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conflicthdlr</type>
      <name>SCIP_CONFLICTHDLR</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a20c6b1ffcc4221c8870e12365855b07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConflicthdlrData</type>
      <name>SCIP_CONFLICTHDLRDATA</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>ae051b0bc4f72869c0e14b41829faf265</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConflictSet</type>
      <name>SCIP_CONFLICTSET</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a46df02e703865e98ec6c2f298f8292db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPBdChgs</type>
      <name>SCIP_LPBDCHGS</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a7bf2f5dbd3d51d1f27e7de5afab34de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conflict</type>
      <name>SCIP_CONFLICT</name>
      <anchorfile>type__conflict_8h.shtml</anchorfile>
      <anchor>a4cc73bb40aba654f568c0c23897ec59d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_cons.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__cons_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__timing_8h" name="type_timing.h" local="yes" imported="no">scip/type_timing.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSHDLRCOPY</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ad1fbf03b7692ccc565b2107db3965c27</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSFREE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ae374fa77c1e2ea90677f3eae2290b1c0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINIT</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ac2af95eeab68bf76a636f203d49838e2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXIT</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a3dbd78915084e4048a6fd2b2ec7debc8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITPRE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a2a1d22ad8250529ce6a21727f777bb92</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXITPRE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ab2b9fcf8af077942042885ba9225bda3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITSOL</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a4969f04dfc1dbc086baa57f4cf601e2a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXITSOL</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ade732129e1c1e829e1cf738c3eadb8e5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDELETE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a356ccbf8a6ac344c2b7fad0ad1e288b9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSTRANS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a9310b78181f94e2923716f4e6e02dda7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITLP</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>aaa3496c95e47e4149a7e8dc629d3352a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSSEPALP</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a517c2525fd8d67fb72c51b74860bde48</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSSEPASOL</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ae5aed12c51e87312fad8287c6b114bd4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENFOLP</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a19c17cc4fe1c293cfc1f2487b70046f0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENFOPS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a8e37444d363c0d6b659cf95866118c2e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSCHECK</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ad15dad558f571555f654cc052eb3fa38</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPROP</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a7332f43c87e6e1c337c7e8a72f1660ee</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPRESOL</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>aa1a9531dd2d21a1b43935038718325fb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSRESPROP</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a7ff294cd3a2a493e6e8b46dedd041b97</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSLOCK</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ab2edc602ea1ed35423a229aefaee7aaa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSACTIVE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a85c40a321635910478b808910ba9adba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDEACTIVE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a978ed7d67d8de87eeed9577a17b1744e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENABLE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>aa83f578d4cc68fc292c889f3b53cf23c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDISABLE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a51ab5dc422ca7a11f11a58eaa94109a9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDELVARS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>af704934b66490b447ea10fcfd6adcef9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPRINT</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a4d409d37c6071020639ea8379787ad60</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSCOPY</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>abf8e62f337ecf1d02581a514e99636ec</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPARSE</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a92afdd77b74d9cac38e48d072dd72067</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSGETVARS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a4213ba55688181a50f29979849dfe43b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSGETNVARS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a7bbb9a0dd7d4ae69b6feb144a3d45e00</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSGETDIVEBDCHGS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a721f05c56e6c59927ebc4e1642f88337</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conshdlr</type>
      <name>SCIP_CONSHDLR</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ab396d8cbfe68a15f3c59d130e4ed0f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Cons</type>
      <name>SCIP_CONS</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a38a65729afa6b1cef58fcff906850886</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConshdlrData</type>
      <name>SCIP_CONSHDLRDATA</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a4fbd129e0244d331664c5c618c85299c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConsData</type>
      <name>SCIP_CONSDATA</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>ac55797a3c65d3ec89dd29921d953c36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConsSetChg</type>
      <name>SCIP_CONSSETCHG</name>
      <anchorfile>type__cons_8h.shtml</anchorfile>
      <anchor>a581a228c2b766ad9f7a3906b5f8ed5bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_cutpool.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__cutpool_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Cutpool</type>
      <name>SCIP_CUTPOOL</name>
      <anchorfile>type__cutpool_8h.shtml</anchorfile>
      <anchor>a59f2019b76c5f683ce5f534a335c6cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Cut</type>
      <name>SCIP_CUT</name>
      <anchorfile>type__cutpool_8h.shtml</anchorfile>
      <anchor>a967cea5354109ac206f4f451f2c99692</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_dialog.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__dialog_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGCOPY</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>a34fc903b78f7c55f20fe9361809cd29d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGFREE</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>ac135255ec916979f9babc121c33db223</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>ad47e6047b5399a9bf822d6d3739c97be</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>a439246740f4d931449ba8645a9cdd9a5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dialog</type>
      <name>SCIP_DIALOG</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>a329d1192c555a4e720e915119ba182bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DialogData</type>
      <name>SCIP_DIALOGDATA</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>a5e403d79d0d8be23f23773f12faa5d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dialoghdlr</type>
      <name>SCIP_DIALOGHDLR</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>aab964360d58e12b3f488cd366809f43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Linelist</type>
      <name>SCIP_LINELIST</name>
      <anchorfile>type__dialog_8h.shtml</anchorfile>
      <anchor>a1d177178583578ece244259c41c69c4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_disp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__disp_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPCOPY</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a24f7b629d38e8df7f6d2cba7346a44eb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPFREE</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>afce2537f0ca6808e3c876c6d033d5a1d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPINIT</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a89010bac5f802422379dd719a65df665</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPEXIT</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a6963fe58e233819f4de188a20a102750</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPINITSOL</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a2437e8c2d8825a0ca21e4a2f9747bde6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPEXITSOL</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a3a4fa8e8f665c822cb5d2b48ce6ebd53</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPOUTPUT</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a0c1f2e5b9b6fdfb4255db04c017a6b69</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_DispStatus</type>
      <name>SCIP_DISPSTATUS</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a24f71f5e1fd941279b997e87bbe744ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Disp</type>
      <name>SCIP_DISP</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a5ead8fa21b238b09b0c8c820cbf17100</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DispData</type>
      <name>SCIP_DISPDATA</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>ac07267a92388a3be0ff8420f48a0fcc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_DispStatus</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_OFF</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8aa963272156f9264a3c3ed3e31e07e96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_AUTO</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8afe121846f594d5dd09834c70303bc358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_ON</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8a297f48d0c7b3f272c4e4d1b5d2e4e6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DISPSTATUS_OFF</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8aa963272156f9264a3c3ed3e31e07e96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DISPSTATUS_AUTO</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8afe121846f594d5dd09834c70303bc358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DISPSTATUS_ON</name>
      <anchorfile>type__disp_8h.shtml</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8a297f48d0c7b3f272c4e4d1b5d2e4e6cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_event.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__event_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_DISABLED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ae6f2f042d3e7fc21dee0ec37959c28fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARADDED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>abdb41277158c5046b83eb5ece43e6e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARDELETED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a737872e4e887e158de99849eb277090e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARFIXED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a693ca56a7585240ff0144bdd0a6cdbc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARUNLOCKED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a1907d7629c39c6f54cd1c4a8fe5de7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_OBJCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a6590b5eccb0a4935b3fea139f152eb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GLBCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aad0f6cec966e9109577ee8940b6829f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GUBCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a419eb04b62fd224f7350eeb0d94ce1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBTIGHTENED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>af5988d53e0bb89bac4c2f558efbb1722</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBRELAXED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aa18609cea7a11d1dd77dedbcaf63ef21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBTIGHTENED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a57b890bde301e876cc3cb7b8929772de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBRELAXED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>afd2086f613ae9a0b5c7a4bb55d24cfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLEADDED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a0998cf2c1d1205e0e2d5a9d63cfd6719</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLEREMOVED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a4bd01da382bd3805504ee80af67eb948</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLEADDED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>acc942424f07ce94869e66d60f14e4c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLEREMOVED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a857c7a43464662cdd15429837ec05983</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_IMPLADDED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ad6878059ab90d98155caf34b2d3f37ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_PRESOLVEROUND</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a408983823d3060101ce3a03d8dfaab16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEFOCUSED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a5d806ee605db9d57aeced1c8895f7324</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEFEASIBLE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a10a594f8e3246db9a605a77549f40475</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEINFEASIBLE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a63c33fb1f94a0b7f17a5584a55e5368f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEBRANCHED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a9410f05184ee8d0589d48fe7e489ee15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_FIRSTLPSOLVED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a0e97c429cd89b9aedaaa0ab64f6b8371</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LPSOLVED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ad157c2d2175a6d65d24d41de85c3677a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_POORSOLFOUND</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a39188a366bf5c1c570becd2ea21681ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BESTSOLFOUND</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aa7b9f5aece9817543b4ad6fcf51baf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWADDEDSEPA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>adf950d3b70650bb00fcbea8d9e1f826b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWDELETEDSEPA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ab99fc5ce85c7cdc63979cc9199d01923</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWADDEDLP</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a37c890664aa0ef249a62bcb70a414459</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWDELETEDLP</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ac35edce8f1920f428573d3d425db604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCOEFCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ad85109718e4ad80191af5087475f1de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCONSTCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>af34bb0949ad693bd3be8c22c55f412a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWSIDECHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a1cf78a7e3940ed0240fb902ed484a085</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GBDCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a4e69d266b8c820e89736348811d089b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>abe85fc2b8bc12e2ab22b44d697d2b284</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ac7875a9abf2e3b973567b99d36e61a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDTIGHTENED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>af4514ddc527f758f2fd7ad304555c04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDRELAXED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ab8dcf11e4e0e68580f546eaa32079a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a128e03e649e03bf833fdc309f8bb3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLECHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a132f303b11d0d77293d14911b021352e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLECHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a5f42119cae91be59ceb48e4cc59f4f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_HOLECHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ab94df2009e0c7d5930d07749353e037c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_DOMCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ae02366a4b43e69e2e14e5fb3339d689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ab987fdbf88f6747390f07bef23c2d753</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VAREVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a21569e9b8ae43364e81618d41f9c8892</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODESOLVED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aa0a891248bca1f5312b56edd0a10df2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEEVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a7cfc0e26c90f14953e0cfe86b25eafd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LPEVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ae506cb87148fd403e6881ec0c4912977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_SOLFOUND</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ac4326687adf8b4175a2a2145b592401b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_SOLEVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aec2118490d06bafca9bf23f805410ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a7473489170c037ee033a13ca61db308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWEVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a95fddabf9c529b7659ddcb975faf0eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTCOPY</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a9b324836c5058e7aab1b958522df0ad3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTFREE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ab6bcbd5a542808e92606be4f108c46d5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTINIT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a9cfd669a49331d0857d8b6a4a4399c13</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXIT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a441309b02b8b24269e2d10b0b7f41d93</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTINITSOL</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a0ef3a60738e301ea496b8a3a30db8067</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXITSOL</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ad280ee9fda2d649f031bb7db7a2e4aae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTDELETE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a2197797c4a093d111818b4320397654f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXEC</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a7942e3ded98f033e3c08947c7cfc73af</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_EVENTTYPE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ada169f023df39328eccf1b635a124e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Eventhdlr</type>
      <name>SCIP_EVENTHDLR</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a0dc41f33e3a5dcf92123d7bc6ba8945d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventhdlrData</type>
      <name>SCIP_EVENTHDLRDATA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a75f8eb58103f64850221fad59626a4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Event</type>
      <name>SCIP_EVENT</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ad8e794890cd488ccc90bdbe476c876e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarAdded</type>
      <name>SCIP_EVENTVARADDED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a2c08993502ff5c4460108520a345ceb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarDeleted</type>
      <name>SCIP_EVENTVARDELETED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a0d108f1b57cd682e1d0b1be896605b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarFixed</type>
      <name>SCIP_EVENTVARFIXED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aeddce0bcb533aa750fb2040ad64d2af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarUnlocked</type>
      <name>SCIP_EVENTVARUNLOCKED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a9b97228ba4efc8e4f0f51056a73547b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventObjChg</type>
      <name>SCIP_EVENTOBJCHG</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a932404d63751a385e9c58590fa23e624</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventBdChg</type>
      <name>SCIP_EVENTBDCHG</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a24bfe1707dc43986dd14be5a977dda52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventHole</type>
      <name>SCIP_EVENTHOLE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a2f6cbb26ee93c4db8daadc36529b4a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventImplAdd</type>
      <name>SCIP_EVENTIMPLADD</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a9935569bddbc0b809b075f2d12f80cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowAddedSepa</type>
      <name>SCIP_EVENTROWADDEDSEPA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>ac2b6f8062c1d093b3bb896fadde672d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowDeletedSepa</type>
      <name>SCIP_EVENTROWDELETEDSEPA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aaf4921da0b87a4f49b1c39cb1414b37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowAddedLP</type>
      <name>SCIP_EVENTROWADDEDLP</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a2e087a7201c1be5881709fe9b92e76b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowDeletedLP</type>
      <name>SCIP_EVENTROWDELETEDLP</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aa22564198cb57da6288f2f5cb4f500c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowCoefChanged</type>
      <name>SCIP_EVENTROWCOEFCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a895caaedeea99e1e95a4ba6d352c1ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowConstChanged</type>
      <name>SCIP_EVENTROWCONSTCHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a235b49f1516514cdcb6fb307a4509822</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowSideChanged</type>
      <name>SCIP_EVENTROWSIDECHANGED</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a47313e0e5d1863195ca72a7a398923e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventData</type>
      <name>SCIP_EVENTDATA</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a4ebef382b966f4f8b419d6b37c29c6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventFilter</type>
      <name>SCIP_EVENTFILTER</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>a62063efc0002dbdd4b7f3927adcb24d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventQueue</type>
      <name>SCIP_EVENTQUEUE</name>
      <anchorfile>type__event_8h.shtml</anchorfile>
      <anchor>aa733e3a314dab961c526bac0cb5b1d76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_expr.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>type__expr_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPR_DEGREEINFINITY</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af2c49f6e823a4d26d3c442e5566285aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPREVAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a93611c7f479b44c883236f3800925a7a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRINTEVAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a6b1f1dcf09a8d1d5e2eb9151074d218e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRCURV</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>aab5b8da587c56a819f0d002efcd1c0e9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRCOPYDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>ae93cf41953975fc9fd280a05c789b0b1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRFREEDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a4ebeb60846b3ce6c31fd77fd047db97d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRGRAPHVARADDED</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>aea91b21a170e9a98455730394224141f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRGRAPHVARREMOVE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a3c698d26fa6116677701e6e8d1ef5c44</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EXPRGRAPHVARCHGIDX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>aca8f77ed737c251478213db3dfcc8f98</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_VALID</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>abb09717b5be447c1a38c2d5334d9e269</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_CHILDTIGHTENED</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a4fe0044e567e4abb408a6d1c646e2e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_CHILDRELAXED</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>aed22623e9ad049f8ab539e770b85f006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a51ab826c666e8ab6d5c2d0224b69101d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTRECENT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a0a4b25351e8227c24c2a1654ae8f5d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTFORCE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a378c60542bb1ae0a2bd70dfbed7b13ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRESTIMATE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a5d7fbded2cf4d5acbfb0f7a30ff02973</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPREVAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a2080e77d5f2b8186e5190d2702edbfae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRINTEVAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a6e401687a6a5856ef72bf9bcdff970d7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRCURV</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a79de68a7184dab875d318748c40b479e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRPROP</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a5119b6a8100767b98767108164089d0d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRCOPYDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a28e9a40cfc390e00ac7ad05cb1d34adf</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_USEREXPRFREEDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a173687b54a4537a8185631e4a7e8066e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ExprOp</type>
      <name>SCIP_EXPROP</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a30d37294b55f3180495c3a5efdce32c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union SCIP_ExprOpData</type>
      <name>SCIP_EXPROPDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a038a8105e30d3b01d3de192459058ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Expr</type>
      <name>SCIP_EXPR</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a03f8f1fae1c932ff918396171929c352</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprTree</type>
      <name>SCIP_EXPRTREE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a4ae8525548d76cb766394131bb405cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ExprCurv</type>
      <name>SCIP_EXPRCURV</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8b75f2d81278489853cf94478dedbd44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadElement</type>
      <name>SCIP_QUADELEM</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>abaf258f420336359952d83563ed641f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Quadratic</type>
      <name>SCIP_EXPRDATA_QUADRATIC</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>ad09492fdcd7cfcce5121c98c5b01cbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Monomial</type>
      <name>SCIP_EXPRDATA_MONOMIAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a83c46530b886f67d22c6f991f07b3aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Polynomial</type>
      <name>SCIP_EXPRDATA_POLYNOMIAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>acf517d040af99c08ca7ce3d85700b57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_User</type>
      <name>SCIP_EXPRDATA_USER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a1ad3cae2f2d514ac27db2a5d4358e492</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprGraphNode</type>
      <name>SCIP_EXPRGRAPHNODE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>aaa741e59aa855d6864a43b651ce35ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprGraph</type>
      <name>SCIP_EXPRGRAPH</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8481fdd0b99c28964cf0d180e8109b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>SCIP_EXPRBOUNDSTATUS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a38f44189781b458b128b5885b7b91903</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_UserExprData</type>
      <name>SCIP_USEREXPRDATA</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>ab7478770d600bb417737aeda0d3b9f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ExprOp</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_VARIDX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_CONST</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PARAM</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PLUS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MINUS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MUL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_DIV</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SQUARE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SQRT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_REALPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa45dd1610fb2677d120070eb0442f09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_INTPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIGNPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_EXP</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LOG</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_COS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_TAN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MIN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MAX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_ABS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIGN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SUM</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PRODUCT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LINEAR</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_QUADRATIC</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_POLYNOMIAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7acb1c26bcb406e864a223ba2833736475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_USER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a3211384a0836696f41c6480c10856a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LAST</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_VARIDX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_CONST</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_PARAM</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_PLUS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_MINUS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_MUL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_DIV</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SQUARE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SQRT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_REALPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa45dd1610fb2677d120070eb0442f09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_INTPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SIGNPOWER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_EXP</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_LOG</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SIN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_COS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_TAN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_MIN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_MAX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_ABS</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SIGN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_SUM</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_PRODUCT</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_LINEAR</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_QUADRATIC</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_POLYNOMIAL</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7acb1c26bcb406e864a223ba2833736475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_USER</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a3211384a0836696f41c6480c10856a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPR_LAST</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ExprCurv</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPRCURV_UNKNOWN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa291d267c5d669b231bc41c5291c4d56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPRCURV_CONVEX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPRCURV_CONCAVE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPRCURV_LINEAR</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa0f2db29c3e831aaa368a1183afb685f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPRCURV_UNKNOWN</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa291d267c5d669b231bc41c5291c4d56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPRCURV_CONVEX</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPRCURV_CONCAVE</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EXPRCURV_LINEAR</name>
      <anchorfile>type__expr_8h.shtml</anchorfile>
      <anchor>a8ee9c6b6f34a52149c9584f558869d4fa0f2db29c3e831aaa368a1183afb685f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_exprinterpret.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>type__exprinterpret_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_NONE</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a86f686c56eb486edca443b08ffd1d4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_FUNCVALUE</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a4ead23c55590b1d90b2eaa65dbc26bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTFUNCVALUE</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a3debca4ab3ff224b912327c5573de4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_GRADIENT</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a047556347f5159f61d3179fa3e77a615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTGRADIENT</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a23564ef7a6465972d67323c687d61125</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_HESSIAN</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a21627f71ee23f53d9e70af36153c7fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTHESSIAN</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>adedda2fc79734d6e778fdd60e679813c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_ALL</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a630b1715f0e26d4834609647a3345413</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprInt</type>
      <name>SCIP_EXPRINT</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>ae536b751483a00eeb75a93d372073b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprIntData</type>
      <name>SCIP_EXPRINTDATA</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>a1cdd1eca7c5f8e8ac40e0c95e6f61346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_EXPRINTCAPABILITY</name>
      <anchorfile>type__exprinterpret_8h.shtml</anchorfile>
      <anchor>afedb326a7a0e4b9679b737ae4247ddd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_heur.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__heur_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__timing_8h" name="type_timing.h" local="yes" imported="no">scip/type_timing.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DIVETYPE_NONE</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a242a43b98ed100c70e063e8850ed2ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DIVETYPE_INTEGRALITY</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>ada03dcf52536ed7310eff16030036070</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DIVETYPE_SOS1VARIABLE</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>ad1a0c74bf20465e182b3f3fa30b82fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURCOPY</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a4f934de7511fbe72d59a287d3eea30b5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURFREE</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>aaf08379a00bcde05eaa2d95b05c783f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURINIT</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a791b7bec2f853f445e09a051a2e2e5ba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXIT</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a92d2fc3ad7c01fc17b1ecc1a3d41f654</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURINITSOL</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a46025ee9b408a2578538ddcdee6375ee</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXITSOL</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>abcc465a461dc5dcbd6e3eeeda7b2937c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXEC</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>ac40876eaa59dbe9a6d384855708e70da</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIVESETGETSCORE</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>ab83699496061a211dc84b6b3afceb144</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_DIVETYPE</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a954dfa9508085cfaf2a035f9e14ec064</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Heur</type>
      <name>SCIP_HEUR</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a6d83a468b10e5207c31c4ffed117ce39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HeurData</type>
      <name>SCIP_HEURDATA</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a681fbf728be9500c0d9701f99027b193</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Diveset</type>
      <name>SCIP_DIVESET</name>
      <anchorfile>type__heur_8h.shtml</anchorfile>
      <anchor>a83cd649a94ebf0df68ec061ab58bc93e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_history.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__history_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_BranchDir</type>
      <name>SCIP_BRANCHDIR</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>afa732c27a07268b25862c97f60f06043</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_History</type>
      <name>SCIP_HISTORY</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a5d44a3f16dfd49712f35265f29754ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ValueHistory</type>
      <name>SCIP_VALUEHISTORY</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>aa9e4de315317e7dc12676583027d48d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_BranchDir</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_DOWNWARDS</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaa0d1f58b90654a1c4b573bbdc9ab6e936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_UPWARDS</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaad36a15202ccdfc3b3477e20638569441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_FIXED</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaab0fb442afcc8a06170ae8245d3756dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_AUTO</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaac5755c014ee539c2bd2e6f36420c7add</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHDIR_DOWNWARDS</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaa0d1f58b90654a1c4b573bbdc9ab6e936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHDIR_UPWARDS</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaad36a15202ccdfc3b3477e20638569441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHDIR_FIXED</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaab0fb442afcc8a06170ae8245d3756dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHDIR_AUTO</name>
      <anchorfile>type__history_8h.shtml</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaac5755c014ee539c2bd2e6f36420c7add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_implics.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__implics_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_VBounds</type>
      <name>SCIP_VBOUNDS</name>
      <anchorfile>type__implics_8h.shtml</anchorfile>
      <anchor>abb7c6a768748bb5d76663a4cfde41d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Implics</type>
      <name>SCIP_IMPLICS</name>
      <anchorfile>type__implics_8h.shtml</anchorfile>
      <anchor>a82f21b90e0fec5ba3181ea9e532efecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Clique</type>
      <name>SCIP_CLIQUE</name>
      <anchorfile>type__implics_8h.shtml</anchorfile>
      <anchor>a8996d60cfd393cc8ab252b68365109d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CliqueTable</type>
      <name>SCIP_CLIQUETABLE</name>
      <anchorfile>type__implics_8h.shtml</anchorfile>
      <anchor>aeec091d3f9e88d224a2d238c00371c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CliqueList</type>
      <name>SCIP_CLIQUELIST</name>
      <anchorfile>type__implics_8h.shtml</anchorfile>
      <anchor>a198ef11ca9bc15da7069f15148760b54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_interrupt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__interrupt_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Interrupt</type>
      <name>SCIP_INTERRUPT</name>
      <anchorfile>type__interrupt_8h.shtml</anchorfile>
      <anchor>a0f5528afd468ed6697532f73a9421d14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_lp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__lp_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_LPSolStat</type>
      <name>SCIP_LPSOLSTAT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a5d947b996f1f7ddaf00ebf52d1a85932</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BoundType</type>
      <name>SCIP_BOUNDTYPE</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ad1f370d06c5f9eece4ab657efa945dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_SideType</type>
      <name>SCIP_SIDETYPE</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>afc76f7a0e408b6d2d0274e848d936385</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_RowOriginType</type>
      <name>SCIP_ROWORIGINTYPE</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a24aaea07ea0e42ad4b8e6e25a97c5585</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LPAlgo</type>
      <name>SCIP_LPALGO</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>afb2699663c54caff6bb1c4fe2f3dd396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ColSolVals</type>
      <name>SCIP_COLSOLVALS</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>acb2fb803c7f7d3f30e9578500adc3728</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_RowSolVals</type>
      <name>SCIP_ROWSOLVALS</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af87b2ce424e0a980ad226afb5ede8009</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LpSolVals</type>
      <name>SCIP_LPSOLVALS</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ac73a8f221fd48413a5f526d0bbbbc13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Col</type>
      <name>SCIP_COL</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9fbe1dac436203f1fcab0ef7bbc7044a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Row</type>
      <name>SCIP_ROW</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a032f27315b19f63ad9fd77077d865adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Lp</type>
      <name>SCIP_LP</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a5bd45764db1eef5a5ee492006f3d2c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_LPSolStat</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_NOTSOLVED</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a4e6c93f5d333f3cd4f242e7c6dcc5c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_OPTIMAL</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a5c39e89ae2faecc76cc210d67e3151e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_INFEASIBLE</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aa6b7594c5359e6cbb19a4a955720e071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_UNBOUNDEDRAY</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a745e82d0db7687d9e277f0b283b536e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_OBJLIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6ad8081e48d17a069eca84ddd3c0ebcca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_ITERLIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aedd27ac82c121361a7ff2b9da017f948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_TIMELIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a6773f41ead37952c1a3f8399c11759fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_ERROR</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a3fffe898beee5ce61e588e686af3b030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_NOTSOLVED</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a4e6c93f5d333f3cd4f242e7c6dcc5c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_OPTIMAL</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a5c39e89ae2faecc76cc210d67e3151e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_INFEASIBLE</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aa6b7594c5359e6cbb19a4a955720e071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_UNBOUNDEDRAY</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a745e82d0db7687d9e277f0b283b536e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_OBJLIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6ad8081e48d17a069eca84ddd3c0ebcca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_ITERLIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aedd27ac82c121361a7ff2b9da017f948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_TIMELIMIT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a6773f41ead37952c1a3f8399c11759fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLSTAT_ERROR</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a3fffe898beee5ce61e588e686af3b030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_BoundType</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDTYPE_LOWER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429dae9498ae162911028e0a036499039583e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDTYPE_UPPER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429daa71597cfaf1f6831b7187c298ed6920c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BOUNDTYPE_LOWER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429dae9498ae162911028e0a036499039583e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BOUNDTYPE_UPPER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429daa71597cfaf1f6831b7187c298ed6920c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_SideType</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SIDETYPE_LEFT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a8757feec14316b340243177ad5d4c385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SIDETYPE_RIGHT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a84d9e3c34dacdb758b71008cf252a89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SIDETYPE_LEFT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a8757feec14316b340243177ad5d4c385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SIDETYPE_RIGHT</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a84d9e3c34dacdb758b71008cf252a89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_RowOriginType</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ROWORIGINTYPE_UNSPEC</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4ba75d9f966013ccd714f2c7b9f1593610d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ROWORIGINTYPE_CONS</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4badfd64e843f6c984bf4353762a9bcb643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ROWORIGINTYPE_SEPA</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4ba9e2d8d964c1d3a202c7d14e59b239f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_ROWORIGINTYPE_UNSPEC</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4ba75d9f966013ccd714f2c7b9f1593610d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_ROWORIGINTYPE_CONS</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4badfd64e843f6c984bf4353762a9bcb643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_ROWORIGINTYPE_SEPA</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a9207028445a5c9f98bd9ad3ef7ed7a4ba9e2d8d964c1d3a202c7d14e59b239f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_LPAlgo</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_PRIMALSIMPLEX</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249aaad1010b2e9fee1d378138b8340d42b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_DUALSIMPLEX</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249af080073a72a781d98bddc30362ba042e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_BARRIER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249a60e291d36225f6456ab9dd29af957a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_BARRIERCROSSOVER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249abe12044aaf49a6f062ec8619416cd742</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPALGO_PRIMALSIMPLEX</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249aaad1010b2e9fee1d378138b8340d42b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPALGO_DUALSIMPLEX</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249af080073a72a781d98bddc30362ba042e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPALGO_BARRIER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249a60e291d36225f6456ab9dd29af957a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPALGO_BARRIERCROSSOVER</name>
      <anchorfile>type__lp_8h.shtml</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249abe12044aaf49a6f062ec8619416cd742</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_lpi.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>type__lpi_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_ObjSen</type>
      <name>SCIP_OBJSEN</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>afa3d076f8e5d2a8a31bf662ab24797cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LPParam</type>
      <name>SCIP_LPPARAM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a845842b094eba8ce0cf0821e82b4d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Pricing</type>
      <name>SCIP_PRICING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a680b3359be1f3e2b0fbcdaa05d219d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BaseStat</type>
      <name>SCIP_BASESTAT</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>afcf16516c616e88c3f58ae49103ab8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LPSolQuality</type>
      <name>SCIP_LPSOLQUALITY</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ad43906673a9a8a661c5c454138207fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPi</type>
      <name>SCIP_LPI</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a95450814c277697516678287134c5e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPiState</type>
      <name>SCIP_LPISTATE</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a90d877c948164ab5e3beb0f3e1070693</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPiNorms</type>
      <name>SCIP_LPINORMS</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>abb3fe4ccfb87fa50adfa0631ff0d5531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ObjSen</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSEN_MAXIMIZE</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSEN_MINIMIZE</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_OBJSEN_MAXIMIZE</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_OBJSEN_MINIMIZE</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_LPParam</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FROMSCRATCH</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FASTMIP</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_SCALING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_PRESOLVING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_PRICING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPINFO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FEASTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_DUALFEASTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_BARRIERCONVTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LOBJLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_UOBJLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPITLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPTILIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_MARKOWITZ</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_ROWREPSWITCH</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baec5909c462ddd23c7eee84b62bae1180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_THREADS</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba2c2452223631d250416bf06078622b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_CONDITIONLIMIT</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba904dbe44d97115b988ce0cfa98e6e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_TIMING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba687d1428eb58a8ab7d05dd22c74053cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_FROMSCRATCH</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_FASTMIP</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_SCALING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_PRESOLVING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_PRICING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_LPINFO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_FEASTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_DUALFEASTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_BARRIERCONVTOL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_LOBJLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_UOBJLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_LPITLIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_LPTILIM</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_MARKOWITZ</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_ROWREPSWITCH</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baec5909c462ddd23c7eee84b62bae1180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_THREADS</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba2c2452223631d250416bf06078622b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_CONDITIONLIMIT</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba904dbe44d97115b988ce0cfa98e6e970</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPPAR_TIMING</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba687d1428eb58a8ab7d05dd22c74053cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Pricing</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_LPIDEFAULT</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_AUTO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1579f0b28462ca3030c2ea711509cf11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_FULL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a42f5306421531962d1b113eab03e6cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_PARTIAL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775afb363bc9727994c89ff3da4273164335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_STEEP</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a270fee7478b8951e2cc4fbefc7b7b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_STEEPQSTART</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a0b1034a38e607455f39eb74ad242bab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_DEVEX</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1e601f75db40f3b48665aa04f5103987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_LPIDEFAULT</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_AUTO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1579f0b28462ca3030c2ea711509cf11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_FULL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a42f5306421531962d1b113eab03e6cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_PARTIAL</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775afb363bc9727994c89ff3da4273164335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_STEEP</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a270fee7478b8951e2cc4fbefc7b7b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_STEEPQSTART</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a0b1034a38e607455f39eb74ad242bab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PRICING_DEVEX</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1e601f75db40f3b48665aa04f5103987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_BaseStat</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_LOWER</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_BASIC</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_UPPER</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_ZERO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BASESTAT_LOWER</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BASESTAT_BASIC</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BASESTAT_UPPER</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BASESTAT_ZERO</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_LPSolQuality</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a8fa82b6c34235457554b31ce354a8f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLQUALITY_ESTIMCONDITION</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a8fa82b6c34235457554b31ce354a8f51ad4d6a25b6c4dcf307adffb32f2d778e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLQUALITY_EXACTCONDITION</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a8fa82b6c34235457554b31ce354a8f51a2ee67379003f10c16dd794cf7b1b8d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLQUALITY_ESTIMCONDITION</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a8fa82b6c34235457554b31ce354a8f51ad4d6a25b6c4dcf307adffb32f2d778e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPSOLQUALITY_EXACTCONDITION</name>
      <anchorfile>type__lpi_8h.shtml</anchorfile>
      <anchor>a8fa82b6c34235457554b31ce354a8f51a2ee67379003f10c16dd794cf7b1b8d32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_matrix.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__matrix_8h</filename>
    <member kind="typedef">
      <type>struct SCIPmilpMatrix</type>
      <name>SCIPMILPMATRIX</name>
      <anchorfile>type__matrix_8h.shtml</anchorfile>
      <anchor>a91524ef4660f77140c119ef443a5ccf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_mem.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__mem_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Mem</type>
      <name>SCIP_MEM</name>
      <anchorfile>type__mem_8h.shtml</anchorfile>
      <anchor>a79fededcb250818e7695bcff87e94426</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_message.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__message_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEOUTPUTFUNC</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a2c6f223c9e4acc344d5f81fe487aa819</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_ERRORPRINTING</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>abb8de8571ebd3cb1b35507d3f2831905</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEWARNING</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a32d62cb67b5bf0cca30a12c1460dde9a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEDIALOG</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a5e56f8277576d68b8264309628b074d8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEINFO</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a4f371b237e73e5d86769985a29ae0edc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEHDLRFREE</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a929a0d09d77e31bf7e893ea0726e8245</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_VerbLevel</type>
      <name>SCIP_VERBLEVEL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a73246afeccfb9943ce9abc579ec32900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Messagehdlr</type>
      <name>SCIP_MESSAGEHDLR</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>a7d71113339d14873806c1399442fae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_MessagehdlrData</type>
      <name>SCIP_MESSAGEHDLRDATA</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>af9ebf56ba805cfd0394f36af684defb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_VerbLevel</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_NONE</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a342e07e3b44ea64ebcbc95ed01868527</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_DIALOG</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a2940983bd13c5c25ff9b94928cd6efeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_MINIMAL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a71529714af71417540310a5f684260ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_NORMAL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ade6351698269867796b408bdfdd3e2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_HIGH</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ad7fd4c128f127025689e04b47df0bbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_FULL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ae141d66ad54cafb1f07b0c8437a70690</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_NONE</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a342e07e3b44ea64ebcbc95ed01868527</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_DIALOG</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a2940983bd13c5c25ff9b94928cd6efeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_MINIMAL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a71529714af71417540310a5f684260ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_NORMAL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ade6351698269867796b408bdfdd3e2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_HIGH</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ad7fd4c128f127025689e04b47df0bbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VERBLEVEL_FULL</name>
      <anchorfile>type__message_8h.shtml</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ae141d66ad54cafb1f07b0c8437a70690</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_misc.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__misc_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SORTINDCOMP</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a806c02f466e036f6e137df9eee2f7e9d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a7b9d512ab1371f8c42ec4f2805514fe6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHGETKEY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>aa7e82c6a078cb110fcd55fb00100edf9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a7d9300cec620a8da3ae75ef0f4a3ea06</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>aad19c25e7cd7b6c2b1e0392e4713ff15</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Confidencelevel</type>
      <name>SCIP_CONFIDENCELEVEL</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>af10d263fef2549d61e6507ba5beb3ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SparseSol</type>
      <name>SCIP_SPARSESOL</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a88af7fd2fc5827a3e390b432a2e1a5b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Queue</type>
      <name>SCIP_QUEUE</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ad5048974efcb22f91f975478cbad85f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PQueue</type>
      <name>SCIP_PQUEUE</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a9d2620c55e31a5c5c585c70609ceb208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashTable</type>
      <name>SCIP_HASHTABLE</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ad34b75a37536cdd2c578a3ada6554117</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashTableList</type>
      <name>SCIP_HASHTABLELIST</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a627f6a0ea9509715be86152028c3b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashMap</type>
      <name>SCIP_HASHMAP</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a4372d6d4f362b30349748b72c8a28704</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashMapList</type>
      <name>SCIP_HASHMAPLIST</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a58bc076cfc7fa95aa5cb8a09cb7db240</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_RealArray</type>
      <name>SCIP_REALARRAY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a344fbb9bdcaadfdba779491f0950aa3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_IntArray</type>
      <name>SCIP_INTARRAY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a1979deb07c489409949df78b8d327c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BoolArray</type>
      <name>SCIP_BOOLARRAY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ad1c5098e1ecdc914964ff2dabbd110e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PtrArray</type>
      <name>SCIP_PTRARRAY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ace262be61411b73712e598f783d921c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ResourceActivity</type>
      <name>SCIP_RESOURCEACTIVITY</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a7514fdec34fb0e3416ada44705f1af46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Profile</type>
      <name>SCIP_PROFILE</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>adaf14c7d7037415e7ade9279c6e88e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Digraph</type>
      <name>SCIP_DIGRAPH</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a467b6a5a197769a299b70736cc38a34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Bt</type>
      <name>SCIP_BT</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a758a7e0bd04009842c24fbabc8d3035d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BtNode</type>
      <name>SCIP_BTNODE</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>a980ac393ce697183a6116ca7d8e64fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Confidencelevel</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONFIDENCELEVEL_MIN</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452abb80530f23627e43dc5563fca91cb3cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONFIDENCELEVEL_LOW</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452ade6f72b9dbd96fa4eb4755f653b7dc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONFIDENCELEVEL_MEDIUM</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a48c07cf37ba9325a2d29dd4f196a7fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONFIDENCELEVEL_HIGH</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a667055cdc1f659953a27328d7cc54ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONFIDENCELEVEL_MAX</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a1e356e8eebff1fb1e7806b11380e7844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONFIDENCELEVEL_MIN</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452abb80530f23627e43dc5563fca91cb3cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONFIDENCELEVEL_LOW</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452ade6f72b9dbd96fa4eb4755f653b7dc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONFIDENCELEVEL_MEDIUM</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a48c07cf37ba9325a2d29dd4f196a7fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONFIDENCELEVEL_HIGH</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a667055cdc1f659953a27328d7cc54ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONFIDENCELEVEL_MAX</name>
      <anchorfile>type__misc_8h.shtml</anchorfile>
      <anchor>ac809c6a7a3f41428e0516c043cfe9452a1e356e8eebff1fb1e7806b11380e7844</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nlp.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__nlp_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_NlRow</type>
      <name>SCIP_NLROW</name>
      <anchorfile>type__nlp_8h.shtml</anchorfile>
      <anchor>ade0b64677fdf4b415b8a05b4f1cb435a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nlp</type>
      <name>SCIP_NLP</name>
      <anchorfile>type__nlp_8h.shtml</anchorfile>
      <anchor>a0cb612b9369e01c45e3f8c24188ba802</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nlpi.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>type__nlpi_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__message_8h" name="type_message.h" local="yes" imported="no">scip/type_message.h</includes>
    <includes id="type__expr_8h" name="type_expr.h" local="yes" imported="no">nlpi/type_expr.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICOPY</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ab444b70f0450a62fbe8b6678183083ec</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIFREE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>acccd938a64b239e3fbd993c2cc74e588</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLVERPOINTER</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>abe0e15e23ef029f00b9a6c891aca90ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICREATEPROBLEM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a336b7559c9d9977edd0413ff289a73ad</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIFREEPROBLEM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a8fc7b7a4a1ec09aef5784a0a8c928f0e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETPROBLEMPOINTER</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>acae8b601c436b73d56f75631db121780</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIADDVARS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a78227183b94f8ec708e3991e63f66159</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIADDCONSTRAINTS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad02fe9c84e6f31958ffa424cf6f439b1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETOBJECTIVE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a30e029f525e23c0a4d0b6f7b411db9d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGVARBOUNDS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ac3de57676028b74c51fc75dc4217bbbd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGCONSSIDES</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a609abd12374695cbda8c4658e452c3a8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIDELVARSET</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a737163d103b96368ab436bbee201ebd8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIDELCONSSET</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a5c8527d8d25011697d1dbbcc3d0eb09c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGLINEARCOEFS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a1186fc25efe361083a8a8d3ec9c9c9c8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGQUADCOEFS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a653a9d506252ecc8fae93cabee26df31</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGEXPRTREE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a0bbae978e0a862c67405f9801adfb119</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGNONLINCOEF</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a39da8a9d0fc7b25c12cc05c7b70e9567</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGOBJCONSTANT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a13c0835097e180bd1eb86313c7776516</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETINITIALGUESS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a8c1743257c03269de9ad9aa3dd208b5d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISOLVE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a001a76a9a2d02288d0752756a4f48dae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLSTAT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>abf83ff0c4673648045fcfd5255d7b654</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETTERMSTAT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad09a369b899ddda83be8ee39a9f3d900</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLUTION</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a18a5e246c1f5b0d7c2e4f59017a5a9cb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSTATISTICS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a481900debb130ac4db90afb60f55789c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETWARMSTARTSIZE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9c99b338019ec1a7db1ad184eb43d39b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETWARMSTARTMEMO</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>af4bc4cb6eae4656c973aebbede655771</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETWARMSTARTMEMO</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ae65157d1703b0cce3968e2f0c3fc098a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETINTPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a2aee1fdd81c62a25faf1c63f6fae89aa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETINTPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>aaaacc6ace66183cff40073fa122e166e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETREALPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ae4ca7b5fadc5d5eeb4448a4f233c4adb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETREALPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a173c8b4c47d84d50dc892f530e6310f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSTRINGPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ae1855ccd523640954479cd237f15eb31</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETSTRINGPAR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a592b7226617ec182a6da6e13840620a3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETMESSAGEHDLR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ab7e8000232c4625a6c7075ce6414517d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nlpi</type>
      <name>SCIP_NLPI</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a62acbad3cf059a2fc3604b8cb23061e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpiData</type>
      <name>SCIP_NLPIDATA</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>aeb2a407f0470441df6fd6870de8687ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpiProblem</type>
      <name>SCIP_NLPIPROBLEM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a014fc2228c3a9d9f119ce8112dd166a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpStatistics</type>
      <name>SCIP_NLPSTATISTICS</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a07d53bca357f7024447ceed41eb70e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpParam</type>
      <name>SCIP_NLPPARAM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a3eeb8b06ecf7465c7be298fc84a404c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpSolStat</type>
      <name>SCIP_NLPSOLSTAT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a87ce65676e9e36efbbb735b4125725d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpTermStat</type>
      <name>SCIP_NLPTERMSTAT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ae2a3cc5d63fd0c0183ef8348c52ab9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_NlpParam</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_FROMSCRATCH</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_VERBLEVEL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_FEASTOL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_RELOBJTOL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_INFINITY</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_ITLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_TILIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_OPTFILE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_FASTFAIL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a53017eef5577edb40eaaea9ebca69239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_FROMSCRATCH</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_VERBLEVEL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_FEASTOL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_RELOBJTOL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_INFINITY</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_ITLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_TILIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_OPTFILE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPPAR_FASTFAIL</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a53017eef5577edb40eaaea9ebca69239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_NlpSolStat</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_GLOBOPT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_LOCOPT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_FEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_LOCINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_GLOBINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_UNBOUNDED</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_UNKNOWN</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_GLOBOPT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_LOCOPT</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_FEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_LOCINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_GLOBINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_UNBOUNDED</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPSOLSTAT_UNKNOWN</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_NlpTermStat</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_OKAY</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_TILIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_ITLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_UOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_NUMERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_EVALERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_MEMERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_LICERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_OTHER</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_OKAY</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_TILIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_ITLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_UOBJLIM</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_NUMERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_EVALERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_MEMERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_LICERR</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NLPTERMSTAT_OTHER</name>
      <anchorfile>type__nlpi_8h.shtml</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nodesel.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__nodesel_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELCOPY</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a871172aeb9b60ea899241677e19f5642</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELFREE</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>ab0ede649024c1887528486586ff690e0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELINIT</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a8dfb58590ba2cc8a226351782cee5c2b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELEXIT</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a111f7568aa7cc870c8cd826628c97396</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELINITSOL</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a3c72d85f1dfb495c887eccd5299f09ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELEXITSOL</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a8b19082be5abfc7d760d75dfe28d338e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELSELECT</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a93810d395ed5582dc60afdb105521704</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELCOMP</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a31b5eb9c097148322c23cd7ede7a12aa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NodePQ</type>
      <name>SCIP_NODEPQ</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>ae83c5f13ca75048ad61493b42f1c24c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nodesel</type>
      <name>SCIP_NODESEL</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>a76c76c6911efdba9596d8dea5b72999d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NodeselData</type>
      <name>SCIP_NODESELDATA</name>
      <anchorfile>type__nodesel_8h.shtml</anchorfile>
      <anchor>ab5a652247cadb0e4a18727cd16d24a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_objcloneable.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>type__objcloneable_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_OBJCLONEABLECLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ab8551b372dcce70a51e9da608ae6ff66</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a3e2443f0398ce96836bce2270834d5f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>aa76617efc5c0626799fd2d84d2775f5c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>af5ed91e2de955840701d7badcdc6c0c6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ac4e25620737298b745064a56c022324a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ac67a29fbd3b0955360cb18917d224afb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a172bccad6f47ebcad5cf873588ec86be</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a0609587eafc6b8998fa3d17734810863</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a01eea83da5975fc41996fa7d62a26b87</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>afe3b7e8c851d3bb144562099ca2e2905</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXCLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>acc7060aa2fa6ba8429325feafed08e7a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPACLONE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a181b7f21a6138fd409dd1c6a224498d7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_OBJCLONEABLEISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a40133f17f1c2e5fe877d009009086363</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a457897aae5dbfce446fc05bdf2a6009b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a4242a33472b8916f4420e405dc93581a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a959376670ae80f2957c44ed182c440bc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ab06b37cc2980d097fef5562bc8b69b51</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a15a174790bc1e50675feff82f1c24851</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>afd2c9cc505944fcd10a095e62e030ee1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ae08e0d7419d8c19359a8048c77e8dffe</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a7321d5d5e2bd67406cbb64068c65ef3e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>a56d1e2672d54eab0c6533937b3728d21</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>af4fcb6aad35b01e34b5def2379647f1f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAISCLONEABLE</name>
      <anchorfile>type__objcloneable_8h.shtml</anchorfile>
      <anchor>ace4c716797453d11881629df34562e76</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_objprobcloneable.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>type__objprobcloneable_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_OBJPROBCLONE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>ac156af203a71cbe82904744a8f605732</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSHDLRCLONE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>ae756dd0b09c9a92ce6d19de53244a3c9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERCLONE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>ab2112cbddf51921046c8c41f6b8d19c9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_OBJPROBISCLONEABLE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>af0a433e31272b6b0ef3d6b642d899bc3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSHDLRISCLONEABLE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>a8bd6bcf17fd63906c7f043abf97673ba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERISCLONEABLE</name>
      <anchorfile>type__objprobcloneable_8h.shtml</anchorfile>
      <anchor>a80aca19ecd623dc7b27a088950c0a3f0</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_paramset.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__paramset_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PARAMCHGD</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>ad944355b0131487310c3cc75f5833500</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ParamType</type>
      <name>SCIP_PARAMTYPE</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>ab2d26b9ee8411b6e22deea4e77aa6274</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ParamSetting</type>
      <name>SCIP_PARAMSETTING</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a6ab443f660827a69e2b23a3035465294</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ParamEmphasis</type>
      <name>SCIP_PARAMEMPHASIS</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aae0e14564c686155b3aa3ae8f6c27be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Param</type>
      <name>SCIP_PARAM</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a3af2b327dea10395ce42b82a6f431491</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ParamData</type>
      <name>SCIP_PARAMDATA</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aa58d7fec862156df244ea084a3c9c70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ParamSet</type>
      <name>SCIP_PARAMSET</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a25a26a956bc51ca8500ab61ffdc60492</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ParamType</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_BOOL</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a41a50c09109afa8a4993d811907f94a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_INT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298ae84ca7f44502f0d78f23c4064d072eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_LONGINT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298aed83b0370a581b036a95325a859f5c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_REAL</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298af7624c48cdd656d0d852c97a45faa8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_CHAR</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a065a348ac7020417546318930281371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_STRING</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a31f8683b317c5de41885116ff7ae4780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_BOOL</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a41a50c09109afa8a4993d811907f94a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_INT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298ae84ca7f44502f0d78f23c4064d072eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_LONGINT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298aed83b0370a581b036a95325a859f5c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_REAL</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298af7624c48cdd656d0d852c97a45faa8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_CHAR</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a065a348ac7020417546318930281371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMTYPE_STRING</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a31f8683b317c5de41885116ff7ae4780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ParamSetting</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_DEFAULT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda93fdf94c82e472c2c6714c24c8291b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_AGGRESSIVE</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda43ea083c777572d95f68e2cfc8594752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_FAST</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902edabfd14f27ea27f30f3490554e0ebf62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_OFF</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda164b1e46751d0cdf22d9b54fa57844b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMSETTING_DEFAULT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda93fdf94c82e472c2c6714c24c8291b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMSETTING_AGGRESSIVE</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda43ea083c777572d95f68e2cfc8594752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMSETTING_FAST</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902edabfd14f27ea27f30f3490554e0ebf62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMSETTING_OFF</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda164b1e46751d0cdf22d9b54fa57844b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ParamEmphasis</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_DEFAULT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a05107f9e3cc94978551ca0ed6c5258c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_CPSOLVER</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a41e78d70db63dd99e2a2f44fbd190995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_EASYCIP</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32ad42c61aed2e56e8f83a4d0dc32cf6f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_FEASIBILITY</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a74a6d3d40d2d3c67a58c0dcd45acd3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_HARDLP</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a48382fcadf85214754146623f1a5f824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_OPTIMALITY</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32af281885202ccff45a686f72dc3e0a44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMEMPHASIS_COUNTER</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32ade796c42544f1a8d19cc6a44cd0b9116</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_DEFAULT</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a05107f9e3cc94978551ca0ed6c5258c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_CPSOLVER</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a41e78d70db63dd99e2a2f44fbd190995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_EASYCIP</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32ad42c61aed2e56e8f83a4d0dc32cf6f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_FEASIBILITY</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a74a6d3d40d2d3c67a58c0dcd45acd3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_HARDLP</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32a48382fcadf85214754146623f1a5f824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_OPTIMALITY</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32af281885202ccff45a686f72dc3e0a44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMEMPHASIS_COUNTER</name>
      <anchorfile>type__paramset_8h.shtml</anchorfile>
      <anchor>a2e51a867a8ea3ea16f15e7cc935c3f32ade796c42544f1a8d19cc6a44cd0b9116</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_presol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__presol_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLCOPY</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a2b6cd6e1a0312784d14f7f45982a01ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLFREE</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a6283b224fc36e96873ffbe4f1aee4144</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLINIT</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>aad9e0a4e37a0915413c1adc2c2723b22</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXIT</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>acfe06b9db0a583516da44635fd5b0f06</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLINITPRE</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a6a52ac1af2c34feba8910206ea8a722d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXITPRE</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a7a86ed8f8bde306afd2851d072143892</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXEC</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>af51060deff97abea430f70e3fbcdad4c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Presol</type>
      <name>SCIP_PRESOL</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a6c8f6313616acb5006cdbed3f27a30e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PresolData</type>
      <name>SCIP_PRESOLDATA</name>
      <anchorfile>type__presol_8h.shtml</anchorfile>
      <anchor>a349c1847ad0f1d482200fa025006da02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_pricer.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__pricer_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERCOPY</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>aeb743c1d72e68f4b844bf75d81f616e7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERFREE</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a0682747df8acd5addf3094731a7bdd40</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERINIT</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a3ea9709351a8011f018628317ebf4ee4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICEREXIT</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a47cbe7bc9c06c5732d0781f2118f8fd6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERINITSOL</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a82f31fb9f15947556e57faca547b51c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICEREXITSOL</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a62426b3f17afb706143c11c16231d4a4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERREDCOST</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a3ec6c4ddacad93a86f1bb64a99ca1bd2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERFARKAS</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a501e9743bbce7175a69d73629529b46f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Pricer</type>
      <name>SCIP_PRICER</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>a9f23954b90ad3a8b631b639db8b8e92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PricerData</type>
      <name>SCIP_PRICERDATA</name>
      <anchorfile>type__pricer_8h.shtml</anchorfile>
      <anchor>aa50951faa9e5f8803011dfc0b310948a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_pricestore.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__pricestore_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Pricestore</type>
      <name>SCIP_PRICESTORE</name>
      <anchorfile>type__pricestore_8h.shtml</anchorfile>
      <anchor>a22281cdc93e4d2790371a5a8cdbb3568</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_primal.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__primal_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Primal</type>
      <name>SCIP_PRIMAL</name>
      <anchorfile>type__primal_8h.shtml</anchorfile>
      <anchor>a08a5a1f7a154ae5e3435b63ff2aeefa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_prob.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__prob_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBDELORIG</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a9563928be1a5539560c738cc61939497</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBTRANS</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>ac3889fa80fa8abd2bddaafb019bf7c6b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBDELTRANS</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a375c40dc36bb59b5e6de4f03b7cc8bd0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBINITSOL</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>ac8e8796573bfaad0909a7920f6effddc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBEXITSOL</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a38e3bfe2106c9f6b0581751fd6c2168b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBCOPY</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a18fa85a6238fe03abec4954a35fffccd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Objsense</type>
      <name>SCIP_OBJSENSE</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>ad4dbdf560231ec8bdc1dc76ec277ebe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Prob</type>
      <name>SCIP_PROB</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a4bdf9b7e109efe72e83b469ee7292011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ProbData</type>
      <name>SCIP_PROBDATA</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a4802389010c167222c765de0e3e98aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Objsense</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSENSE_MAXIMIZE</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a415922f23065682c094ed321634b32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSENSE_MINIMIZE</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a8ec05fb2afc621ff714e6cb71ead8a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_OBJSENSE_MAXIMIZE</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a415922f23065682c094ed321634b32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_OBJSENSE_MINIMIZE</name>
      <anchorfile>type__prob_8h.shtml</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a8ec05fb2afc621ff714e6cb71ead8a47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_prop.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__prop_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__timing_8h" name="type_timing.h" local="yes" imported="no">scip/type_timing.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPCOPY</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a00db18191b4d0624a1ecf673ae379bcf</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPFREE</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a55916d43cac220fde3d02ed465aca97e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPINIT</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a3819652fe7bd5a23ea3668f409903a8e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXIT</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a5ef5eb1cd0e724ccbe1026ee8c3d5a8f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPINITPRE</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>aa1b50dbf9a32222c17cac7ab086b28c5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXITPRE</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a10b3b9a6f2c77cee7457b728bf1c246e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPINITSOL</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a2cb0083be411dbeafae8bf59e664abe0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXITSOL</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a56785e864f8d5254aed170710dc8c68b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPPRESOL</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a897802eacd65a01f37cc2bc9672907c2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXEC</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>ad371e148d184bfb66cae45d4bfd1b617</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPRESPROP</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>ab31940059087afe078ab59637355e9f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Prop</type>
      <name>SCIP_PROP</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>a6c7b32d7079dbd6e409f1c17bc3c3527</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PropData</type>
      <name>SCIP_PROPDATA</name>
      <anchorfile>type__prop_8h.shtml</anchorfile>
      <anchor>ad0261ca2cb5e7ce7a8dd6e9ced8a409d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_reader.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__reader_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERCOPY</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>a9e6a4d6b056f3f95ecc43b68279d65ed</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERFREE</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>af286e533e1a5018d75d70b34a080552e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERREAD</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>a8f97d977f2805679dc1dd1067eb63405</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERWRITE</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>a1d906d47b706508877b96743c1bfc293</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Reader</type>
      <name>SCIP_READER</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>a457657298218fcc3af97ce6cf7a253db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ReaderData</type>
      <name>SCIP_READERDATA</name>
      <anchorfile>type__reader_8h.shtml</anchorfile>
      <anchor>a29bd05afc0378509e253083a812dd0d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_relax.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__relax_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXCOPY</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a69bff42ca9a4b70300aac6714b9369ba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXFREE</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a12bdd44277046dfca166b69466f78f5d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXINIT</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a011be1dba7b9686bfd50adc16ba678f8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXIT</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>ad4f3271e79d77d0c00ddbd38f499fbf5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXINITSOL</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a1ed82f4e3e7c3ccef48611f591b8de05</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXITSOL</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a0a1917048c1e6a3e870bc06ed6a89bae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXEC</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a722622a1584a39141b0e308e69820860</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Relax</type>
      <name>SCIP_RELAX</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a415c35f5e2cd1ef4024407b10587c9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Relaxation</type>
      <name>SCIP_RELAXATION</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>a7d8f8cffbaa931ac21d636c94383bec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_RelaxData</type>
      <name>SCIP_RELAXDATA</name>
      <anchorfile>type__relax_8h.shtml</anchorfile>
      <anchor>ae387c658207585d34d77e583b462dd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_reopt.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__reopt_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Reopt</type>
      <name>SCIP_REOPT</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a3cdabb58e53071b88a58e568c1c4ebfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SolTree</type>
      <name>SCIP_SOLTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>affe3ed3d14afe9d747e233733e4b138d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SolNode</type>
      <name>SCIP_SOLNODE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>ab855e5f230e71ed4735bb787ad9e7fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ReoptTree</type>
      <name>SCIP_REOPTTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a9745aac6a1d2d6ce8881845ccbec4158</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ReoptNode</type>
      <name>SCIP_REOPTNODE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>aa0f2a54291dbc41bd3b8464d4610c3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ReoptNode</type>
      <name>SCIP_REPRESENTATIVE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a685151137d1e3b201c941e2bc4b7d39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LogicOrData</type>
      <name>LOGICORDATA</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a1e02db7bd808845ed2ea72f6de7a760e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ReoptType</type>
      <name>SCIP_REOPTTYPE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a1ea6b32664b4399bff3839d8e345cfa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Reopt_ConsType</type>
      <name>REOPT_CONSTYPE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>acc742703ce3ea95222755c38759f7d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_ReoptType</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_NONE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377af8cec723203be22a6f6e7ba08e8fd122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_TRANSIT</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377aa6dce101dfa30a0ee77f60680165f71c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_INFSUBTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a264b4629e49446d965b551e5eba288a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_STRBRANCHED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377af2fce35777bf16c5c87cf42af69e5310</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_LOGICORNODE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a3f9a1fd141ce24ee5a311e5bc7bd608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_LEAF</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a8bf7335878e383094d71cb5637bd5c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_PRUNED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a521721568df9d822f84f7469c8372dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REOPTTYPE_FEASIBLE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a77ac55054fb110d36fe999662cff703e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_NONE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377af8cec723203be22a6f6e7ba08e8fd122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_TRANSIT</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377aa6dce101dfa30a0ee77f60680165f71c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_INFSUBTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a264b4629e49446d965b551e5eba288a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_STRBRANCHED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377af2fce35777bf16c5c87cf42af69e5310</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_LOGICORNODE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a3f9a1fd141ce24ee5a311e5bc7bd608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_LEAF</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a8bf7335878e383094d71cb5637bd5c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_PRUNED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a521721568df9d822f84f7469c8372dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REOPTTYPE_FEASIBLE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a005e1b6dcc7034336993c09a4b567377a77ac55054fb110d36fe999662cff703e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Reopt_ConsType</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REOPT_CONSTYPE_SEPASOLUTION</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414da50af4c200d770f8876110252bfae3aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REOPT_CONSTYPE_INFSUBTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414da7a5e665ffed47b9c14dcd1adb5993596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REOPT_CONSTYPE_STRBRANCHED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414daf9b47f3388edb2a18a21303eef929c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>REOPT_CONSTYPE_SEPASOLUTION</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414da50af4c200d770f8876110252bfae3aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>REOPT_CONSTYPE_INFSUBTREE</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414da7a5e665ffed47b9c14dcd1adb5993596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>REOPT_CONSTYPE_STRBRANCHED</name>
      <anchorfile>type__reopt_8h.shtml</anchorfile>
      <anchor>a746e33e4059b27611a79f514c6cb414daf9b47f3388edb2a18a21303eef929c1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_result.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__result_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Result</type>
      <name>SCIP_RESULT</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a6e9810021a07d59fc706fab113e634bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Result</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DIDNOTRUN</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a0f6f0a9fc8161ce0020f57e2ddc6bbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DELAYED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a42ebdbb84ce11f54c706ab0fd8bd045f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DIDNOTFIND</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a447e2ed39794509fab494c2d38eaf0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FEASIBLE</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a304e25a16dcf5b0e77d0a012946f94f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INFEASIBLE</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67af9131cabb4e5783eac2a86424407cf8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_UNBOUNDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a77dfbb14e9f1877b06dd64252b019476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CUTOFF</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a27514d68ba9ecd91468af596337742d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SEPARATED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67aa561784da802c5a96f78fb8022684ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NEWROUND</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ad0d6e0b8cd98c494dc48e092e97ccb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REDUCEDDOM</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a43dfa31d18c7db5396991244cae3393a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONSADDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a718ef8be6290d713a2fea0139cae66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONSCHANGED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a4ad98b537a370f836d98bf467b2a0695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9fe79c48b5ed3502c1ec3ead0fc0de47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLVELP</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ab6bf3825488bad1289c6fa9e75595814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FOUNDSOL</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a832af113cb5c3e6e0ede6246d5345cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SUSPENDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9a7a21523eccb08018763351c094c58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SUCCESS</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ad85f878e9cdd96e63237cd7fff076f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DIDNOTRUN</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a0f6f0a9fc8161ce0020f57e2ddc6bbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DELAYED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a42ebdbb84ce11f54c706ab0fd8bd045f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DIDNOTFIND</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a447e2ed39794509fab494c2d38eaf0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_FEASIBLE</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a304e25a16dcf5b0e77d0a012946f94f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_INFEASIBLE</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67af9131cabb4e5783eac2a86424407cf8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_UNBOUNDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a77dfbb14e9f1877b06dd64252b019476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CUTOFF</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a27514d68ba9ecd91468af596337742d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SEPARATED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67aa561784da802c5a96f78fb8022684ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NEWROUND</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ad0d6e0b8cd98c494dc48e092e97ccb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_REDUCEDDOM</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a43dfa31d18c7db5396991244cae3393a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONSADDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a718ef8be6290d713a2fea0139cae66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_CONSCHANGED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a4ad98b537a370f836d98bf467b2a0695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9fe79c48b5ed3502c1ec3ead0fc0de47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLVELP</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ab6bf3825488bad1289c6fa9e75595814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_FOUNDSOL</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a832af113cb5c3e6e0ede6246d5345cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SUSPENDED</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9a7a21523eccb08018763351c094c58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SUCCESS</name>
      <anchorfile>type__result_8h.shtml</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ad85f878e9cdd96e63237cd7fff076f8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_retcode.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__retcode_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Retcode</type>
      <name>SCIP_RETCODE</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>ac847f5a370187651fbc1b82d0170b480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Retcode</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OKAY</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dae720b7ff5b19aabbca969eb41598368a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOMEMORY</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_READERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4728a2c3d0d1498f254a56682cb4e08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_WRITEERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da80c963e65537a7a1e175e8827f5bb740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOFILE</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da3c613be50ade7386f4f5733304886659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FILECREATEERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da0007342ba3cd04587cdda7e48fdbdc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOPROBLEM</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5daa611a9807045205080e6a27125062fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDCALL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dacd26ff779e0b5d85cd3041c496dc7b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDDATA</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDRESULT</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da16d776799019ab348bfb124a9eb76844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PLUGINNOTFOUND</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da5a46da6c17a8705ac5f302826d4267ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERUNKNOWN</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERWRONGTYPE</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da88fd6f18701b16384e48db46d5af943a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERWRONGVAL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da863118682e5c65634321be19a6b81151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_KEYALREADYEXISTING</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da8e581706e736414f5c60593ac2869aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_MAXDEPTHLEVEL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dafe4bfc77eae5382074bf64135cf68272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da04e7f9d86e47554c59843cd2e5c43553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_OKAY</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_ERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dae720b7ff5b19aabbca969eb41598368a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NOMEMORY</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_READERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4728a2c3d0d1498f254a56682cb4e08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_WRITEERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da80c963e65537a7a1e175e8827f5bb740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NOFILE</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da3c613be50ade7386f4f5733304886659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_FILECREATEERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da0007342ba3cd04587cdda7e48fdbdc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_LPERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NOPROBLEM</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5daa611a9807045205080e6a27125062fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_INVALIDCALL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dacd26ff779e0b5d85cd3041c496dc7b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_INVALIDDATA</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_INVALIDRESULT</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da16d776799019ab348bfb124a9eb76844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PLUGINNOTFOUND</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da5a46da6c17a8705ac5f302826d4267ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMETERUNKNOWN</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMETERWRONGTYPE</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da88fd6f18701b16384e48db46d5af943a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_PARAMETERWRONGVAL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da863118682e5c65634321be19a6b81151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_KEYALREADYEXISTING</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da8e581706e736414f5c60593ac2869aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_MAXDEPTHLEVEL</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dafe4bfc77eae5382074bf64135cf68272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BRANCHERROR</name>
      <anchorfile>type__retcode_8h.shtml</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da04e7f9d86e47554c59843cd2e5c43553</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_scip.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__scip_8h</filename>
    <member kind="typedef">
      <type>struct Scip</type>
      <name>SCIP</name>
      <anchorfile>type__scip_8h.shtml</anchorfile>
      <anchor>a4792a242d315bf76f05b1f4e0712bc33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sepa.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__sepa_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPACOPY</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>af0026e626dbef019fe834a1a9413bb32</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAFREE</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a597dc4685ec7d9da29db2ae5cb29fd76</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAINIT</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>afe1a2c51c3c4c389d778040a470efe2c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXIT</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a75a2c3c4eb956f9398dfc73608b9c25f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAINITSOL</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a3887015ad6e9e74441c17f96fafd53fb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXITSOL</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a5b6427418f3b6c4148ec5e2a1355b8ea</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXECLP</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a5416d6084ba11adade86c0afeca7a730</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXECSOL</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a41e45cd0db10200f38d89ad0fc4de5c6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sepa</type>
      <name>SCIP_SEPA</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>ae4de65cedc0a319c15935cce113c833a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SepaData</type>
      <name>SCIP_SEPADATA</name>
      <anchorfile>type__sepa_8h.shtml</anchorfile>
      <anchor>a34117c19722eeef2beebeef4a489c9d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sepastore.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__sepastore_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Efficiacychoice</type>
      <name>SCIP_EFFICIACYCHOICE</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a817f7c2f5bee372122f6a91ea251f7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SepaStore</type>
      <name>SCIP_SEPASTORE</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a2723333a290707b791f64c6bd49f5a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Efficiacychoice</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EFFICIACYCHOICE_LP</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7aa882a63fb66e39e56e6b63e9bd94849e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EFFICIACYCHOICE_RELAX</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7ab96fc96eb44d5fea4c77fe4edd9499e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EFFICIACYCHOICE_NLP</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7ad3b1d1cc99c7826b85e525bab0dea8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EFFICIACYCHOICE_LP</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7aa882a63fb66e39e56e6b63e9bd94849e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EFFICIACYCHOICE_RELAX</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7ab96fc96eb44d5fea4c77fe4edd9499e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_EFFICIACYCHOICE_NLP</name>
      <anchorfile>type__sepastore_8h.shtml</anchorfile>
      <anchor>a7300abb9b8c1d3029fcdff9f178ab2b7ad3b1d1cc99c7826b85e525bab0dea8dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_set.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__set_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Stage</type>
      <name>SCIP_STAGE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>aec6a704efc413c81490d302a89a550f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Setting</type>
      <name>SCIP_SETTING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>acd48d83f0fc9bee2c589c7d47130e93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Set</type>
      <name>SCIP_SET</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ab48b5bc265f5ad7ea2cbbeb12bf0010b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Stage</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_INIT</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a8d21cb20a075b2e9b63c7dba6f97396c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PROBLEM</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a1252784fe5e7971d925f5a5c7414c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_TRANSFORMING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ae9887e50a42da4c07610246b03d549a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_TRANSFORMED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a5ae1deb10070c06749dd5e95e37577bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_INITPRESOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a20cbfe5ac34e300fc7123bd3893e037e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PRESOLVING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a56a7088627e8022e4e6f87ee2b458f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_EXITPRESOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a712a0a7f285e355e9d74c9a98b99074e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PRESOLVED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197af3b5ca08bf3dbb0961b29122abaa2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_INITSOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a666d9d60911f6027ecbf2c72c2b811f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_SOLVING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ad52c3fd752172f0a1ab83eafb43a5ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_SOLVED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a2c63763478d91372827eae4dee66489d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_EXITSOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a8ce3a61ba077a09f7f15da21d27f0a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_FREETRANS</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197aaf26101c556d79c67dc8fc6c2bf5de4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_FREE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197aa60ab44286b8e7871eb6f9106c601563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_INIT</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a8d21cb20a075b2e9b63c7dba6f97396c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_PROBLEM</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a1252784fe5e7971d925f5a5c7414c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_TRANSFORMING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ae9887e50a42da4c07610246b03d549a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_TRANSFORMED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a5ae1deb10070c06749dd5e95e37577bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_INITPRESOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a20cbfe5ac34e300fc7123bd3893e037e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_PRESOLVING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a56a7088627e8022e4e6f87ee2b458f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_EXITPRESOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a712a0a7f285e355e9d74c9a98b99074e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_PRESOLVED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197af3b5ca08bf3dbb0961b29122abaa2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_INITSOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a666d9d60911f6027ecbf2c72c2b811f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_SOLVING</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ad52c3fd752172f0a1ab83eafb43a5ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_SOLVED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a2c63763478d91372827eae4dee66489d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_EXITSOLVE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a8ce3a61ba077a09f7f15da21d27f0a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_FREETRANS</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197aaf26101c556d79c67dc8fc6c2bf5de4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STAGE_FREE</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197aa60ab44286b8e7871eb6f9106c601563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Setting</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_UNDEFINED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8cad9a4ea96491a30398aa1d8794c57a73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISABLED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca1022fc582947c7c1c6c2f695c07f7f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_AUTO</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca353a2b7bcbc89a72e2f6166579c2bb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ENABLED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca40899558280a6fe878f7736b56c0099a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_UNDEFINED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8cad9a4ea96491a30398aa1d8794c57a73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DISABLED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca1022fc582947c7c1c6c2f695c07f7f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_AUTO</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca353a2b7bcbc89a72e2f6166579c2bb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_ENABLED</name>
      <anchorfile>type__set_8h.shtml</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca40899558280a6fe878f7736b56c0099a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sol.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__sol_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_SolOrigin</type>
      <name>SCIP_SOLORIGIN</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>abd765b92b43b5168095d6b8190541799</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sol</type>
      <name>SCIP_SOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a76b0c06e8d5c166fe241cced9564ce90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_SolOrigin</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_ORIGINAL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a963ff089bdd92142985a4ea14e0c09ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_ZERO</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a0fde3f9ac0d6a3dd64c1fce5b4cd904f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_LPSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5eff2a83044f477c8043434ee888d8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_NLPSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972ab772b1d9594acf4cc07c524294259321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_RELAXSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a529bb20cabe94c9889ad0799cd871b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_PSEUDOSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5632de564748020ebe9191eca4f04ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_UNKNOWN</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a4fc47531cb8dd5e95b18de874a5ae99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_ORIGINAL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a963ff089bdd92142985a4ea14e0c09ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_ZERO</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a0fde3f9ac0d6a3dd64c1fce5b4cd904f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_LPSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5eff2a83044f477c8043434ee888d8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_NLPSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972ab772b1d9594acf4cc07c524294259321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_RELAXSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a529bb20cabe94c9889ad0799cd871b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_PSEUDOSOL</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5632de564748020ebe9191eca4f04ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_SOLORIGIN_UNKNOWN</name>
      <anchorfile>type__sol_8h.shtml</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a4fc47531cb8dd5e95b18de874a5ae99d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_stat.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__stat_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Status</type>
      <name>SCIP_STATUS</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a30465694b6ab6a27960f09122bbee249</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Stat</type>
      <name>SCIP_STAT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a92f51c241549a2648456bf5115f82530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Status</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_UNKNOWN</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a46020099aa058f9014cb25f79af59202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_USERINTERRUPT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a816ef44fcfd12aeee59193c42f021c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_NODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1aedcb1f7824f02a86c145ef2fd572c5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_TOTALNODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a0ca71d0bd138a09eb83968af73ae7cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_STALLNODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac66de5c6c86ceecbe04b46bd5457e40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_TIMELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ad7f949191b1a9ae4301e7191c2303947</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_MEMLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1af88484a2eb6d6d9132689c643f8e1ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_GAPLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a800fe8aa1388e019dfd01ace06934004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_SOLLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a1b74f071c02c9fc8a2520fbbca2d9ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_BESTSOLLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a0e201a9701c78120e9b6a767060a37d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_RESTARTLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1afd11bce6724214a20d951fb284d3430c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_OPTIMAL</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a025d6f927300c87dc72906dede411bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_INFEASIBLE</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ae918eb9c5342912cc34b4ff09602ce5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_UNBOUNDED</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a2f483ac39180cb8990a36c4ab5c37155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_INFORUNBD</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac1465de6f5107c40bdba58e38b978a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_UNKNOWN</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a46020099aa058f9014cb25f79af59202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_USERINTERRUPT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a816ef44fcfd12aeee59193c42f021c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_NODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1aedcb1f7824f02a86c145ef2fd572c5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_TOTALNODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a0ca71d0bd138a09eb83968af73ae7cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_STALLNODELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac66de5c6c86ceecbe04b46bd5457e40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_TIMELIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ad7f949191b1a9ae4301e7191c2303947</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_MEMLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1af88484a2eb6d6d9132689c643f8e1ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_GAPLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a800fe8aa1388e019dfd01ace06934004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_SOLLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a1b74f071c02c9fc8a2520fbbca2d9ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_BESTSOLLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a0e201a9701c78120e9b6a767060a37d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_RESTARTLIMIT</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1afd11bce6724214a20d951fb284d3430c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_OPTIMAL</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a025d6f927300c87dc72906dede411bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_INFEASIBLE</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ae918eb9c5342912cc34b4ff09602ce5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_UNBOUNDED</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a2f483ac39180cb8990a36c4ab5c37155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_STATUS_INFORUNBD</name>
      <anchorfile>type__stat_8h.shtml</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac1465de6f5107c40bdba58e38b978a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_timing.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__timing_8h</filename>
    <includes id="def_8h" name="def.h" local="yes" imported="no">scip/def.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PRESOLTIMING_NONE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>adde08a64d57837d8c236188b5cc6e9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PRESOLTIMING_FAST</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a8f5300707956654cc0bf57b1197b35e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PRESOLTIMING_MEDIUM</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a5d96280cf58e456f5b9e4abf6c04f361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PRESOLTIMING_EXHAUSTIVE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a9227a03f40aaa27b0452086daeb064c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PRESOLTIMING_ALWAYS</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a5c0751072f1323a29e04ee9eb1c7afce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PROPTIMING_BEFORELP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>ac28517d9346a1455d84635de9c91ba06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PROPTIMING_DURINGLPLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>af5299396d9a7efd418445149ce5dea90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PROPTIMING_AFTERLPLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a8958ba721d12189efb4b81d28b38b871</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PROPTIMING_AFTERLPNODE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a57a18ce8e321e4fc490cbd8b534441a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_PROPTIMING_ALWAYS</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>ac5979b854499ec58af95e062ac001ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_BEFORENODE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>ae82bce9f490c6277b9acd77be58c8f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGLPLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a623429e1f8c601df4933db2450d648c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>ae3f9b7b4930bc9a8a148f5c204cbcfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPNODE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>ac4cb022a363958364724303ce7a76897</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPSEUDONODE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a321f15fabc7fef2c3971f01d5c4839bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPPLUNGE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a8b9bb841615e5767ea9d34cf9a130f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPSEUDOPLUNGE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a9d8c841c20e47c4c286c4c294da882b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGPRICINGLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a2d53e1adb5711e9abba16a495cad4993</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_BEFOREPRESOL</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a0da7988a0e85bc37ed1ce035f49c8bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGPRESOLLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a6a6ca5a4599f0cfca42ff629651debb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPROPLOOP</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a4d0f949fb27d56738f0584701bc59943</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERNODE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a7ad0261aaa66d107afbc90f684adb73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPLUNGE</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>abe45b3ef597a1ea9389c7a6b7062f969</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_PRESOLTIMING</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a623636041ddf65be8742740fdc3673b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_PROPTIMING</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a51b6c15170ea1425fadbdd4dcce3a5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_HEURTIMING</name>
      <anchorfile>type__timing_8h.shtml</anchorfile>
      <anchor>a590171545b6918496c6dbc010a749f5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_tree.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__tree_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_NodeType</type>
      <name>SCIP_NODETYPE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a3ae99c561d49d3a6e3d9286f0f0fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Probingnode</type>
      <name>SCIP_PROBINGNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a8be27594b4ed416cf0723a3cd576a3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sibling</type>
      <name>SCIP_SIBLING</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a61d8cdab78d5a0293fe14a394ba03057</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Child</type>
      <name>SCIP_CHILD</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afd66c2979d5608a266faa80a10ab8290</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Leaf</type>
      <name>SCIP_LEAF</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a5b733522a45e7736c3fd46603d57f70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Junction</type>
      <name>SCIP_JUNCTION</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>ad85aae5483e5a746eb50317c057b92c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Pseudofork</type>
      <name>SCIP_PSEUDOFORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>ae046e99aba3015ad7356aebee479c5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Fork</type>
      <name>SCIP_FORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a2b4bd2117f2e337c6f76dc4dccba1e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Subroot</type>
      <name>SCIP_SUBROOT</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>ae42ea2cd07d4e72fc655aab8f5b14b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Node</type>
      <name>SCIP_NODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a11fb26f4a85e9b693e2168e6e3d78301</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PendingBdchg</type>
      <name>SCIP_PENDINGBDCHG</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a364e1caa5158600f8ff1fba64efbcb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Tree</type>
      <name>SCIP_TREE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>a5909ba53b0264b1bfd1cb8c569fd87bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_NodeType</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_FOCUSNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daf6f6167502d882ef6254913f62aee98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_PROBINGNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da9508ec555050cea156cbe00b56a3c460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_SIBLING</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dac7734873856ad3b175f03d6e1fec66f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_CHILD</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da8bb4910f80c414e5527805abfa416530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_LEAF</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae233552c1f4feded5a4efe36c46ed3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_DEADEND</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dabf40ae6fd461336ef3a488f7ffbe9d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_JUNCTION</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dab919c718e1c34b5d09c22431ac2490cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_PSEUDOFORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daba4e899a06df4c75de945e542cd46d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_FORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e735c313172c19c0725fd634eaa28cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_SUBROOT</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae50fcb4b9dbeee55e7bad88bd84574e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_REFOCUSNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e4dce7929a67c0a9aa2152ff6d1d73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_FOCUSNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daf6f6167502d882ef6254913f62aee98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_PROBINGNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da9508ec555050cea156cbe00b56a3c460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_SIBLING</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dac7734873856ad3b175f03d6e1fec66f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_CHILD</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da8bb4910f80c414e5527805abfa416530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_LEAF</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae233552c1f4feded5a4efe36c46ed3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_DEADEND</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dabf40ae6fd461336ef3a488f7ffbe9d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_JUNCTION</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dab919c718e1c34b5d09c22431ac2490cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_PSEUDOFORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daba4e899a06df4c75de945e542cd46d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_FORK</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e735c313172c19c0725fd634eaa28cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_SUBROOT</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae50fcb4b9dbeee55e7bad88bd84574e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_NODETYPE_REFOCUSNODE</name>
      <anchorfile>type__tree_8h.shtml</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e4dce7929a67c0a9aa2152ff6d1d73d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_var.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__var_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARDELORIG</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a3d664f7cbdddc8194d98744eeecdbe6a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARTRANS</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a5ea850f9a54e01f3c090dd2457de9e02</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARDELTRANS</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a9edde06f9dc9ccc02788855773e840f5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARCOPY</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a9dbea961f48f9b0e51b1e745500f5502</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Varstatus</type>
      <name>SCIP_VARSTATUS</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>aca7d8ff33dfcda928d28e7e40320b4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Vartype</type>
      <name>SCIP_VARTYPE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>ac1df37286b62364af9d5fbf11aa79ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_DomchgType</type>
      <name>SCIP_DOMCHGTYPE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a01da5a5b9c9a60b4d07d8245514edccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BoundchgType</type>
      <name>SCIP_BOUNDCHGTYPE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a108f6095e2a5da5783ca8b4bb3556f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgBound</type>
      <name>SCIP_DOMCHGBOUND</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a6cd9aed9c2b005f5e107f8c6ec1e2b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgBoth</type>
      <name>SCIP_DOMCHGBOTH</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a1fd047deaabddff66e46dd0788e87f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgDyn</type>
      <name>SCIP_DOMCHGDYN</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a5af9350b5eaa73ecabf33fc329c0dda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union SCIP_DomChg</type>
      <name>SCIP_DOMCHG</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a440799a07900a7d887c657d5b00d224d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BoundChg</type>
      <name>SCIP_BOUNDCHG</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4f91a3978ac708da31b1e2f1934c0849</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BdChgIdx</type>
      <name>SCIP_BDCHGIDX</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a511bb905f473e197a215b25c793998ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BdChgInfo</type>
      <name>SCIP_BDCHGINFO</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a925fe78a28182518adb3d63b40f938c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchingData</type>
      <name>SCIP_BRANCHINGDATA</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a5e893fd37bb8e919ee60825c08f5aa4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_InferenceData</type>
      <name>SCIP_INFERENCEDATA</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>adefac67265d123c5577e56ecabccf33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HoleChg</type>
      <name>SCIP_HOLECHG</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a3dfdf57732e3b5fbc57dd66f7614f3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Hole</type>
      <name>SCIP_HOLE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>ad00bc67733111f27742ef9a8d2dd3bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Holelist</type>
      <name>SCIP_HOLELIST</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a7b792a43b58ca5a6fc9c4a2b8249adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dom</type>
      <name>SCIP_DOM</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>aa380b34038c31d0a82682c2c8417b651</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Original</type>
      <name>SCIP_ORIGINAL</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4e5cbda8d544981df177088d1d9e6964</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Aggregate</type>
      <name>SCIP_AGGREGATE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>aab8f0772a05ddee6496bbb26fd2d35b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Multaggr</type>
      <name>SCIP_MULTAGGR</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>aad9eac251f51f7a681cc3bab317f5db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Negate</type>
      <name>SCIP_NEGATE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>aaca9ec0cd63fe0a811a6c3dabd7e5e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Var</type>
      <name>SCIP_VAR</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a032edd1f5032513d49e397ebdcc8915b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_VarData</type>
      <name>SCIP_VARDATA</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a008eb4c31318a2b51893dcbefbe41eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Varstatus</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_ORIGINAL</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a006bd5053a7230a1c5504ee5418617a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_LOOSE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6adc590626427b77909527759eaeaf5018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_COLUMN</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ec06e9a73a560b2f55d4fe7f571c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_FIXED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ae55b9ed97cacae74094045dc9f06f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_AGGREGATED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6ac50c97dbe34db4821c8695c85236d414</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_MULTAGGR</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a74afacbc821533e3a6af0cccff858e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_NEGATED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6aa5c14d1038a3aebce85367325ddaf2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_ORIGINAL</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a006bd5053a7230a1c5504ee5418617a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_LOOSE</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6adc590626427b77909527759eaeaf5018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_COLUMN</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ec06e9a73a560b2f55d4fe7f571c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_FIXED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ae55b9ed97cacae74094045dc9f06f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_AGGREGATED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6ac50c97dbe34db4821c8695c85236d414</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_MULTAGGR</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a74afacbc821533e3a6af0cccff858e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARSTATUS_NEGATED</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6aa5c14d1038a3aebce85367325ddaf2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_Vartype</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_BINARY</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a5314e041d090fe33a3fa7f83ba8fde7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_INTEGER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a34025cec1898c4f574a26c5abe89e035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_IMPLINT</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a52adc320bb26f953a1f870b12f06c59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_CONTINUOUS</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a4cb0a787c0618667f3a87a48489af574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARTYPE_BINARY</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a5314e041d090fe33a3fa7f83ba8fde7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARTYPE_INTEGER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a34025cec1898c4f574a26c5abe89e035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARTYPE_IMPLINT</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a52adc320bb26f953a1f870b12f06c59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VARTYPE_CONTINUOUS</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a4cb0a787c0618667f3a87a48489af574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_DomchgType</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_DYNAMIC</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4a194c9807afded9fdf239b083cc43138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_BOTH</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4ae96056dcbe328964480d88bcfad39f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_BOUND</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4aadacd88e158bbed2465e9bf5fc3c4e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DOMCHGTYPE_DYNAMIC</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4a194c9807afded9fdf239b083cc43138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DOMCHGTYPE_BOTH</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4ae96056dcbe328964480d88bcfad39f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_DOMCHGTYPE_BOUND</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4aadacd88e158bbed2465e9bf5fc3c4e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_BoundchgType</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_BRANCHING</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffaade3be6662763d87c4da03c37ffa4fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_CONSINFER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffae2dca55c5754c34fa28c51bcb2063a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_PROPINFER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffa5fd3c3f1eb344704260d1832a2195ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BOUNDCHGTYPE_BRANCHING</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffaade3be6662763d87c4da03c37ffa4fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BOUNDCHGTYPE_CONSINFER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffae2dca55c5754c34fa28c51bcb2063a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_BOUNDCHGTYPE_PROPINFER</name>
      <anchorfile>type__var_8h.shtml</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffa5fd3c3f1eb344704260d1832a2195ad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_visual.h</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>type__visual_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_VBCColor</type>
      <name>SCIP_VBCCOLOR</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>a7af19cdc5104942bb52d1353c1c4faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Visual</type>
      <name>SCIP_VISUAL</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>a2a1076cdad85b8479e7ccfbcd58a7a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SCIP_VBCColor</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_UNSOLVED</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a1303a24deefb6e60a8aa39e826dd8751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_SOLVED</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a811091321df90e374aa3bb009130c46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_CUTOFF</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8addcfe69ab76ecfa42fcee0f1e0a9cdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_CONFLICT</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8aec6dd2aa7d2a10e11dea9e4c499f110f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_MARKREPROP</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a6b5da1d6590e8c5f95d81f347b493c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_REPROP</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a75d0f04eb370ebffd20d089072e1c435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_SOLUTION</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a772272db93d8620bb4b8e46319102684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_NONE</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8ad88b2ad326bb7b82a80193e0cdc8d601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_UNSOLVED</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a1303a24deefb6e60a8aa39e826dd8751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_SOLVED</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a811091321df90e374aa3bb009130c46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_CUTOFF</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8addcfe69ab76ecfa42fcee0f1e0a9cdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_CONFLICT</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8aec6dd2aa7d2a10e11dea9e4c499f110f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_MARKREPROP</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a6b5da1d6590e8c5f95d81f347b493c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_REPROP</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a75d0f04eb370ebffd20d089072e1c435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_SOLUTION</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a772272db93d8620bb4b8e46319102684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCIP_VBCCOLOR_NONE</name>
      <anchorfile>type__visual_8h.shtml</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8ad88b2ad326bb7b82a80193e0cdc8d601</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xternal.c</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/doc/</path>
    <filename>xternal_8c</filename>
  </compound>
  <compound kind="page">
    <name>HOWTOADD</name>
    <title>How to add ...</title>
    <filename>HOWTOADD</filename>
    <docanchor file="HOWTOADD" title="How to add ...">HOWTOADDSECTION</docanchor>
    <docanchor file="HOWTOADD" title="How to use ...">HOWTOUSESECTION</docanchor>
  </compound>
  <compound kind="page">
    <name>INTERFACES</name>
    <title>Interfaces</title>
    <filename>INTERFACES</filename>
    <docanchor file="INTERFACES" title="File formats">FILEFORMATS</docanchor>
    <docanchor file="INTERFACES" title="C++ wrapper">CPLUSPLUS</docanchor>
    <docanchor file="INTERFACES" title="Modeling languages and Matlab interface">MODELLING</docanchor>
    <docanchor file="INTERFACES" title="Python and Java interfaces">OTHER</docanchor>
  </compound>
  <compound kind="page">
    <name>EXAMPLES</name>
    <title>Example projects</title>
    <filename>EXAMPLES</filename>
    <docanchor file="EXAMPLES" title="Branch-and-price">BRANCHANDPRICE</docanchor>
    <docanchor file="EXAMPLES" title="Branch-and-cut">BRANCHANDCUT</docanchor>
    <docanchor file="EXAMPLES" title="Callable library">CALLABLELIBRARY</docanchor>
    <docanchor file="EXAMPLES" title="Other plugins">OTHERPLUGINS</docanchor>
  </compound>
  <compound kind="page">
    <name>APPLICATIONS</name>
    <title>Application projects</title>
    <filename>APPLICATIONS</filename>
  </compound>
  <compound kind="page">
    <name>CODE</name>
    <title>Coding style guidelines</title>
    <filename>CODE</filename>
    <docanchor file="CODE" title="Examples">CODEEXAMPLES</docanchor>
    <docanchor file="CODE" title="Customize (x)emacs">XEMACS</docanchor>
    <docanchor file="CODE" title="Customize eclipse">ECLIPSE</docanchor>
  </compound>
  <compound kind="page">
    <name>MAKE</name>
    <title>Makefiles / Installation information</title>
    <filename>MAKE</filename>
    <docanchor file="MAKE" title="Brief installation description">BRIEFINSTALL</docanchor>
    <docanchor file="MAKE" title="Detailed installation description">DETAILEDINSTALL</docanchor>
    <docanchor file="MAKE" title="Example 1 (defaults: SoPlex, with ZIMPL support):">EXAMPLE1</docanchor>
    <docanchor file="MAKE" title="Example 2 (CPLEX, with no ZIMPL support):">EXAMPLE2</docanchor>
    <docanchor file="MAKE" title="Compilation problems:">COMPILERPROBLEMS</docanchor>
    <docanchor file="MAKE" title="Remarks on Installing under Windows using MinGW">WINDOWS</docanchor>
    <docanchor file="MAKE" title="How to run SCIP after successfully compiling SCIP">RUN</docanchor>
  </compound>
  <compound kind="page">
    <name>START</name>
    <title>How to start a new project</title>
    <filename>START</filename>
  </compound>
  <compound kind="page">
    <name>SHELL</name>
    <title>Tutorial: the interactive shell</title>
    <filename>SHELL</filename>
    <docanchor file="SHELL" title="Read and optimize a problem instance">TUTORIAL_OPTIMIZE</docanchor>
    <docanchor file="SHELL" title="Writing problems and solutions to a file">TUTORIAL_FILEIO</docanchor>
    <docanchor file="SHELL" title="Displaying detailed solving statistics">TUTORIAL_STATISTICS</docanchor>
    <docanchor file="SHELL" title="Changing parameters from the interactive shell">TUTORIAL_PARAMETERS</docanchor>
  </compound>
  <compound kind="page">
    <name>DOC</name>
    <title>How to search the documentation for interface methods</title>
    <filename>DOC</filename>
  </compound>
  <compound kind="page">
    <name>CONS</name>
    <title>How to add constraint handlers</title>
    <filename>CONS</filename>
    <docanchor file="CONS" title="Properties of a Constraint Handler">CONS_PROPERTIES</docanchor>
    <docanchor file="CONS" title="Fundamental Constraint Handler properties">CONS_FUNDAMENTALPROPERTIES</docanchor>
    <docanchor file="CONS" title="Optional Constraint Handler properties">CONS_ADDITIONALPROPERTIES</docanchor>
    <docanchor file="CONS" title="Constraint Data and Constraint Handler Data">CONS_DATA</docanchor>
    <docanchor file="CONS" title="Interface Methods">CONS_INTERFACE</docanchor>
    <docanchor file="CONS" title="Callback methods of Constraint handlers">CONS_CALLBACKS</docanchor>
    <docanchor file="CONS" title="Fundamental Callback Methods">CONS_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="CONS">CONSCHECK</docanchor>
    <docanchor file="CONS">CONSENFOLP</docanchor>
    <docanchor file="CONS">CONSENFOPS</docanchor>
    <docanchor file="CONS">CONSLOCK</docanchor>
    <docanchor file="CONS" title="Additional Callback Methods">CONS_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="CONS">CONSFREE</docanchor>
    <docanchor file="CONS">CONSHDLRCOPY</docanchor>
    <docanchor file="CONS">CONSINIT</docanchor>
    <docanchor file="CONS">CONSEXIT</docanchor>
    <docanchor file="CONS">CONSINITPRE</docanchor>
    <docanchor file="CONS">CONSEXITPRE</docanchor>
    <docanchor file="CONS">CONSINITSOL</docanchor>
    <docanchor file="CONS">CONSEXITSOL</docanchor>
    <docanchor file="CONS">CONSDELETE</docanchor>
    <docanchor file="CONS">CONSTRANS</docanchor>
    <docanchor file="CONS">CONSINITLP</docanchor>
    <docanchor file="CONS">CONSSEPALP</docanchor>
    <docanchor file="CONS">CONSSEPASOL</docanchor>
    <docanchor file="CONS">CONSPROP</docanchor>
    <docanchor file="CONS">CONSRESPROP</docanchor>
    <docanchor file="CONS">CONSPRESOL</docanchor>
    <docanchor file="CONS">CONSACTIVE</docanchor>
    <docanchor file="CONS">CONSDEACTIVE</docanchor>
    <docanchor file="CONS">CONSENABLE</docanchor>
    <docanchor file="CONS">CONSDISABLE</docanchor>
    <docanchor file="CONS">CONSPRINT</docanchor>
    <docanchor file="CONS">CONSCOPY</docanchor>
    <docanchor file="CONS">CONSPARSE</docanchor>
    <docanchor file="CONS">CONSDELVARS</docanchor>
    <docanchor file="CONS">CONSGETVARS</docanchor>
    <docanchor file="CONS">CONSGETNVARS</docanchor>
    <docanchor file="CONS">CONSGETDIVEBDCHGS</docanchor>
    <docanchor file="CONS" title="Further documentation">CONS_FURTHERINFO</docanchor>
  </compound>
  <compound kind="page">
    <name>PRICER</name>
    <title>How to add variable pricers</title>
    <filename>PRICER</filename>
    <docanchor file="PRICER" title="Properties of a Pricer">PRICER_PROPERTIES</docanchor>
    <docanchor file="PRICER" title="Pricer Data">PRICER_DATA</docanchor>
    <docanchor file="PRICER" title="Interface Methods">PRICER_INTERFACE</docanchor>
    <docanchor file="PRICER" title="Fundamental Callback Methods of a Pricer">PRICER_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="PRICER">PRICERREDCOST</docanchor>
    <docanchor file="PRICER">PRICERFARKAS</docanchor>
    <docanchor file="PRICER" title="Additional Callback Methods of a Pricer">PRICER_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PRICER">PRICERFREE</docanchor>
    <docanchor file="PRICER">PRICERCOPY</docanchor>
    <docanchor file="PRICER">PRICERINIT</docanchor>
    <docanchor file="PRICER">PRICEREXIT</docanchor>
    <docanchor file="PRICER">PRICERINITSOL</docanchor>
    <docanchor file="PRICER">PRICEREXITSOL</docanchor>
    <docanchor file="PRICER" title="Further remarks">PRICER_REMARKS</docanchor>
  </compound>
  <compound kind="page">
    <name>PRESOL</name>
    <title>How to add presolvers</title>
    <filename>PRESOL</filename>
    <docanchor file="PRESOL" title="Properties of a Presolver">PRESOL_PROPERTIES</docanchor>
    <docanchor file="PRESOL" title="Presolver Data">PRESOL_DATA</docanchor>
    <docanchor file="PRESOL" title="Interface Methods">PRESOL_INTERFACE</docanchor>
    <docanchor file="PRESOL" title="Fundamental Callback Methods of a Presolver">PRESOL_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="PRESOL">PRESOLEXEC</docanchor>
    <docanchor file="PRESOL" title="Additional Callback Methods of a Presolver">PRESOL_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PRESOL">PRESOLFREE</docanchor>
    <docanchor file="PRESOL">PRESOLINIT</docanchor>
    <docanchor file="PRESOL">PRESOLCOPY</docanchor>
    <docanchor file="PRESOL">PRESOLEXIT</docanchor>
    <docanchor file="PRESOL">PRESOLINITPRE</docanchor>
    <docanchor file="PRESOL">PRESOLEXITPRE</docanchor>
  </compound>
  <compound kind="page">
    <name>SEPA</name>
    <title>How to add separators</title>
    <filename>SEPA</filename>
    <docanchor file="SEPA" title="Properties of a Separator">SEPA_PROPERTIES</docanchor>
    <docanchor file="SEPA" title="Separator Data">SEPA_DATA</docanchor>
    <docanchor file="SEPA" title="Interface Methods">SEPA_INTERFACE</docanchor>
    <docanchor file="SEPA" title="Fundamental Callback Methods of a Separator">SEPA_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="SEPA">SEPAEXECLP</docanchor>
    <docanchor file="SEPA">SEPAEXECSOL</docanchor>
    <docanchor file="SEPA" title="Additional Callback Methods of a Separator">SEPA_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="SEPA">SEPAFREE</docanchor>
    <docanchor file="SEPA">SEPACOPY</docanchor>
    <docanchor file="SEPA">SEPAINIT</docanchor>
    <docanchor file="SEPA">SEPAEXIT</docanchor>
    <docanchor file="SEPA">SEPAINITSOL</docanchor>
    <docanchor file="SEPA">SEPAEXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>PROP</name>
    <title>How to add propagators</title>
    <filename>PROP</filename>
    <docanchor file="PROP" title="Properties of a Propagator">PROP_PROPERTIES</docanchor>
    <docanchor file="PROP" title="Fundamental properties of a propagator">PROP_FUNDAMENTALPROPERTIES</docanchor>
    <docanchor file="PROP" title="Optional propagator properties">PROP_ADDITIONALPROPERTIES</docanchor>
    <docanchor file="PROP" title="Propagator Data">PROP_DATA</docanchor>
    <docanchor file="PROP" title="Interface Methods">PROP_INTERFACE</docanchor>
    <docanchor file="PROP" title="Fundamental Callback Methods of a Propagator">PROP_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="PROP">PROPEXEC</docanchor>
    <docanchor file="PROP" title="Additional Callback Methods of a Propagator">PROP_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PROP">PROPRESPROP</docanchor>
    <docanchor file="PROP">PROPFREE</docanchor>
    <docanchor file="PROP">PROPINIT</docanchor>
    <docanchor file="PROP">PROPCOPY</docanchor>
    <docanchor file="PROP">PROPEXIT</docanchor>
    <docanchor file="PROP">PROPINITPRE</docanchor>
    <docanchor file="PROP">PROPEXITPRE</docanchor>
    <docanchor file="PROP">PROPINITSOL</docanchor>
    <docanchor file="PROP">PROPEXITSOL</docanchor>
    <docanchor file="PROP">PROPPRESOL</docanchor>
  </compound>
  <compound kind="page">
    <name>BRANCH</name>
    <title>How to add branching rules</title>
    <filename>BRANCH</filename>
    <docanchor file="BRANCH" title="Properties of a Branching Rule">BRANCHRULE_PROPERTIES</docanchor>
    <docanchor file="BRANCH" title="Branching Rule Data">BRANCHRULE_DATA</docanchor>
    <docanchor file="BRANCH" title="Interface Methods">BRANCHRULE_INTERFACE</docanchor>
    <docanchor file="BRANCH" title="Fundamental Callback Methods of a Branching Rule">BRANCHRULE_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="BRANCH" title="Additional Callback Methods of a Branching Rule">BRANCHRULE_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="BRANCH">BRANCHEXECLP</docanchor>
    <docanchor file="BRANCH">BRANCHEXECEXT</docanchor>
    <docanchor file="BRANCH">BRANCHEXECPS</docanchor>
    <docanchor file="BRANCH" title="Further information for the three execution methods">BRANCHEXEC</docanchor>
    <docanchor file="BRANCH">BRANCHFREE</docanchor>
    <docanchor file="BRANCH">BRANCHINIT</docanchor>
    <docanchor file="BRANCH">BRANCHCOPY</docanchor>
    <docanchor file="BRANCH">BRANCHEXIT</docanchor>
    <docanchor file="BRANCH">BRANCHINITSOL</docanchor>
    <docanchor file="BRANCH">BRANCHEXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>NODESEL</name>
    <title>How to add node selectors</title>
    <filename>NODESEL</filename>
    <docanchor file="NODESEL" title="Properties of a Node Selector">NODESEL_PROPERTIES</docanchor>
    <docanchor file="NODESEL" title="Node Selector Data">NODESEL_DATA</docanchor>
    <docanchor file="NODESEL" title="Interface Methods">NODESEL_INTERFACE</docanchor>
    <docanchor file="NODESEL" title="Fundamental Callback Methods of a Node Selector">NODESEL_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="NODESEL">NODESELSELECT</docanchor>
    <docanchor file="NODESEL">NODESELCOMP</docanchor>
    <docanchor file="NODESEL" title="Additional Callback Methods of a Node Selector">NODESEL_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="NODESEL">NODESELFREE</docanchor>
    <docanchor file="NODESEL">NODESELINIT</docanchor>
    <docanchor file="NODESEL">NODESELCOPY</docanchor>
    <docanchor file="NODESEL">NODESELEXIT</docanchor>
    <docanchor file="NODESEL">NODESELINITSOL</docanchor>
    <docanchor file="NODESEL">NODESELEXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>HEUR</name>
    <title>How to add primal heuristics</title>
    <filename>HEUR</filename>
    <docanchor file="HEUR" title="Properties of a Primal Heuristic">HEUR_PROPERTIES</docanchor>
    <docanchor file="HEUR" title="Primal Heuristic Data">HEUR_DATA</docanchor>
    <docanchor file="HEUR" title="Interface Methods">HEUR_INTERFACE</docanchor>
    <docanchor file="HEUR" title="Fundamental Callback Methods of a Primal Heuristic">HEUR_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="HEUR">HEUREXEC</docanchor>
    <docanchor file="HEUR" title="Additional Callback Methods of a Primal Heuristic">HEUR_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="HEUR">HEURFREE</docanchor>
    <docanchor file="HEUR">HEURINIT</docanchor>
    <docanchor file="HEUR">HEURCOPY</docanchor>
    <docanchor file="HEUR">HEUREXIT</docanchor>
    <docanchor file="HEUR">HEURINITSOL</docanchor>
    <docanchor file="HEUR">HEUREXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>DIVINGHEUR</name>
    <title>How to implement a diving heuristic</title>
    <filename>DIVINGHEUR</filename>
    <docanchor file="DIVINGHEUR" title="User parameters and properties for every diveset">DIVING_PARAMETERS</docanchor>
    <docanchor file="DIVINGHEUR" title="Fundamental callbacks of a diveset">DIVING_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="DIVINGHEUR">DIVESETGETSCORE</docanchor>
    <docanchor file="DIVINGHEUR" title="Further information">DIVING_FURTHERINFO</docanchor>
  </compound>
  <compound kind="page">
    <name>RELAX</name>
    <title>How to add relaxation handlers</title>
    <filename>RELAX</filename>
    <docanchor file="RELAX" title="Properties of a Relaxation Handler">RELAX_PROPERTIES</docanchor>
    <docanchor file="RELAX" title="Relaxation Handler Data">RELAX_DATA</docanchor>
    <docanchor file="RELAX" title="Interface Methods">RELAX_INTERFACE</docanchor>
    <docanchor file="RELAX" title="Fundamental Callback Methods of a Relaxation Handler">RELAX_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="RELAX">RELAXEXEC</docanchor>
    <docanchor file="RELAX" title="Additional Callback Methods of a Relaxation Handler">RELAX_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="RELAX">RELAXFREE</docanchor>
    <docanchor file="RELAX">RELAXINIT</docanchor>
    <docanchor file="RELAX">RELAXCOPY</docanchor>
    <docanchor file="RELAX">RELAXEXIT</docanchor>
    <docanchor file="RELAX">RELAXINITSOL</docanchor>
    <docanchor file="RELAX">REALXEXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>READER</name>
    <title>How to add file readers</title>
    <filename>READER</filename>
    <docanchor file="READER" title="Properties of a File Reader">READER_PROPERTIES</docanchor>
    <docanchor file="READER" title="File Reader Data">READER_DATA</docanchor>
    <docanchor file="READER" title="Interface Methods">READER_INTERFACE</docanchor>
    <docanchor file="READER" title="Fundamental Callback Methods of a File Reader">READER_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="READER" title="Additional Callback Methods of a File Reader">READER_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="READER">READERREAD</docanchor>
    <docanchor file="READER">READERWRITE</docanchor>
    <docanchor file="READER">READERCOPY</docanchor>
    <docanchor file="READER">READERFREE</docanchor>
  </compound>
  <compound kind="page">
    <name>DIALOG</name>
    <title>How to add dialogs</title>
    <filename>DIALOG</filename>
    <docanchor file="DIALOG" title="Properties of a Dialog">DIALOG_PROPERTIES</docanchor>
    <docanchor file="DIALOG" title="Dialog Data">DIALOG_DATA</docanchor>
    <docanchor file="DIALOG" title="Interface Methods">DIALOG_INTERFACE</docanchor>
    <docanchor file="DIALOG" title="Fundamental Callback Methods of a Dialog">DIALOG_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="DIALOG">DIALOGEXEC</docanchor>
    <docanchor file="DIALOG" title="Additional Callback Methods of a Dialog">DIALOG_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="DIALOG">DIALOGPFREE</docanchor>
    <docanchor file="DIALOG">DIALOGDESC</docanchor>
    <docanchor file="DIALOG">DIALOGCOPY</docanchor>
  </compound>
  <compound kind="page">
    <name>DISP</name>
    <title>How to add display columns</title>
    <filename>DISP</filename>
    <docanchor file="DISP" title="Properties of a Display Column">DISP_PROPERTIES</docanchor>
    <docanchor file="DISP" title="Display Column Data">DISP_DATA</docanchor>
    <docanchor file="DISP" title="Interface Methods">DISP_INTERFACE</docanchor>
    <docanchor file="DISP" title="Fundamental Callback Methods of a Display Column">DISP_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="DISP">DISPOUTPUT</docanchor>
    <docanchor file="DISP" title="Additional Callback Methods of a Display Column">DISP_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="DISP">DISPCOPY</docanchor>
    <docanchor file="DISP">DISPFREE</docanchor>
    <docanchor file="DISP">DISPINIT</docanchor>
    <docanchor file="DISP">DISPEXIT</docanchor>
    <docanchor file="DISP">DISPINITSOL</docanchor>
    <docanchor file="DISP">DISPEXITSOL</docanchor>
  </compound>
  <compound kind="page">
    <name>EVENT</name>
    <title>How to add event handler</title>
    <filename>EVENT</filename>
    <docanchor file="EVENT" title="Properties of a Event Handler">EVENTHDLR_PROPERTIES</docanchor>
    <docanchor file="EVENT" title="Event Handler Data">EVENTHDLR_DATA</docanchor>
    <docanchor file="EVENT" title="Interface Methods">EVENT_INTERFACE</docanchor>
    <docanchor file="EVENT" title="Fundamental Callback Methods of a Event Handler">EVENT_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="EVENT">EVENTEXEC</docanchor>
    <docanchor file="EVENT" title="Additional Callback Methods of a Event Handler">EVENT_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="EVENT">EVENTCOPY</docanchor>
    <docanchor file="EVENT">EVENTFREE</docanchor>
    <docanchor file="EVENT">EVENTINIT</docanchor>
    <docanchor file="EVENT">EVENTEXIT</docanchor>
    <docanchor file="EVENT">EVENTINITSOL</docanchor>
    <docanchor file="EVENT">EVENTEXITSOL</docanchor>
    <docanchor file="EVENT" title="Catching and Dropping Events">EVENTUSAGE</docanchor>
    <docanchor file="EVENT" title="Event types">EVENTTYPES</docanchor>
  </compound>
  <compound kind="page">
    <name>NLPI</name>
    <title>How to add interfaces to nonlinear programming solvers</title>
    <filename>NLPI</filename>
    <docanchor file="NLPI" title="Properties of an NLPI">NLPI_PROPERTIES</docanchor>
    <docanchor file="NLPI" title="NLPI Data">NLPI_DATA</docanchor>
    <docanchor file="NLPI" title="Interface Methods">NLPI_INTERFACE</docanchor>
    <docanchor file="NLPI" title="Fundamental Callback Methods of an NLPI">NLPI_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="NLPI">NLPICOPY</docanchor>
    <docanchor file="NLPI">NLPIFREE</docanchor>
    <docanchor file="NLPI">NLPIGETSOLVERPOINTER</docanchor>
    <docanchor file="NLPI">NLPICREATEPROBLEM</docanchor>
    <docanchor file="NLPI">NLPIFREEPROBLEM</docanchor>
    <docanchor file="NLPI">NLPIGETPROBLEMPOINTER</docanchor>
    <docanchor file="NLPI">NLPIADDVARS</docanchor>
    <docanchor file="NLPI">NLPIADDCONSTRAINTS</docanchor>
    <docanchor file="NLPI">NLPISETOBJECTIVE</docanchor>
    <docanchor file="NLPI">NLPICHGVARBOUNDS</docanchor>
    <docanchor file="NLPI">NLPICHGCONSSIDES</docanchor>
    <docanchor file="NLPI">NLPIDELVARSET</docanchor>
    <docanchor file="NLPI">NLPIDELCONSSET</docanchor>
    <docanchor file="NLPI">NLPICHGLINEARCOEFS</docanchor>
    <docanchor file="NLPI">NLPICHGQUADCOEFS</docanchor>
    <docanchor file="NLPI">NLPICHGEXPRTREE</docanchor>
    <docanchor file="NLPI">NLPICHGNONLINCOEF</docanchor>
    <docanchor file="NLPI">NLPICHGOBJCONSTANT</docanchor>
    <docanchor file="NLPI">NLPISETINITIALGUESS</docanchor>
    <docanchor file="NLPI">NLPISOLVE</docanchor>
    <docanchor file="NLPI">NLPIGETSOLSTAT</docanchor>
    <docanchor file="NLPI">NLPIGETTERMSTAT</docanchor>
    <docanchor file="NLPI">NLPIGETSOLUTION</docanchor>
    <docanchor file="NLPI">NLPIGETSTATISTICS</docanchor>
    <docanchor file="NLPI">NLPIGETINTPAR</docanchor>
    <docanchor file="NLPI">NLPISETINTPAR</docanchor>
    <docanchor file="NLPI">NLPIGETREALPAR</docanchor>
    <docanchor file="NLPI">NLPISETREALPAR</docanchor>
    <docanchor file="NLPI">NLPIGETSTRINGPAR</docanchor>
    <docanchor file="NLPI">NLPISETSTRINGPAR</docanchor>
  </compound>
  <compound kind="page">
    <name>EXPRINT</name>
    <title>How to add interfaces to expression interpreters</title>
    <filename>EXPRINT</filename>
    <docanchor file="EXPRINT" title="Expression Interpreter Data">EXPRINT_DATA</docanchor>
    <docanchor file="EXPRINT" title="Interface Methods">EXPRINT_INTERFACE</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetName</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetDesc</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetCapability</docanchor>
    <docanchor file="EXPRINT">SCIPexprintCreate</docanchor>
    <docanchor file="EXPRINT">SCIPexprintFree</docanchor>
    <docanchor file="EXPRINT">SCIPexprintCompile</docanchor>
    <docanchor file="EXPRINT">SCIPexprintFreeData</docanchor>
    <docanchor file="EXPRINT">SCIPexprintNewParametrization</docanchor>
    <docanchor file="EXPRINT">SCIPexprintEval</docanchor>
    <docanchor file="EXPRINT">SCIPexprintEvalInt</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGrad</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGradInt</docanchor>
    <docanchor file="EXPRINT">SCIPexprintHessianSparsityDense</docanchor>
    <docanchor file="EXPRINT">SCIPexprintHessianDense</docanchor>
  </compound>
  <compound kind="page">
    <name>CONF</name>
    <title>How to use conflict analysis</title>
    <filename>CONF</filename>
    <docanchor file="CONF" title="Initiating Conflict Analysis">INITCONFS</docanchor>
    <docanchor file="CONF">Propagation</docanchor>
    <docanchor file="CONF" title="Reverse Propagation">RESPROP</docanchor>
    <docanchor file="CONF">Example</docanchor>
  </compound>
  <compound kind="page">
    <name>REOPT</name>
    <title>How to use reoptimization</title>
    <filename>REOPT</filename>
  </compound>
  <compound kind="page">
    <name>OBJ</name>
    <title>Creating, capturing, releasing, and adding data objects</title>
    <filename>OBJ</filename>
  </compound>
  <compound kind="page">
    <name>PARAM</name>
    <title>How to add additional user parameters</title>
    <filename>PARAM</filename>
  </compound>
  <compound kind="page">
    <name>MEMORY</name>
    <title>Using the memory functions of SCIP</title>
    <filename>MEMORY</filename>
    <docanchor file="MEMORY" title="Standard memory">STDMEM</docanchor>
    <docanchor file="MEMORY" title="Block memory">BLKMEM</docanchor>
    <docanchor file="MEMORY" title="Buffer memory">BUFMEM</docanchor>
    <docanchor file="MEMORY" title="General notes">GENMEM</docanchor>
  </compound>
  <compound kind="page">
    <name>DEBUG</name>
    <title>Debugging</title>
    <filename>DEBUG</filename>
    <docanchor file="DEBUG" title="How to activate debug messages">EXAMPLE_1</docanchor>
    <docanchor file="DEBUG" title="How to add a debug solution">EXAMPLE_2</docanchor>
  </compound>
  <compound kind="page">
    <name>TEST</name>
    <title>How to run automated tests with SCIP</title>
    <filename>TEST</filename>
    <docanchor file="TEST" title="Setting up the test environment">SETUP</docanchor>
    <docanchor file="TEST" title="Starting a test run">STARTING</docanchor>
    <docanchor file="TEST" title="Evaluating a test run">EVAL</docanchor>
    <docanchor file="TEST" title="Using customized setting files">USING</docanchor>
    <docanchor file="TEST" title="Advanced options">ADVANCED</docanchor>
    <docanchor file="TEST" title="Comparing test runs for different settings">COMPARE</docanchor>
    <docanchor file="TEST" title="Statistical tests">STATISTICS</docanchor>
    <docanchor file="TEST" title="McNemar test">McNemar</docanchor>
    <docanchor file="TEST" title="Wilcoxon signed rank test">Wilcoxon</docanchor>
    <docanchor file="TEST" title="Testing and Evaluating for other solvers">SOLVER</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG1</name>
    <title>Interface changes between SCIP 0.9 and SCIP 1.0</title>
    <filename>CHG1</filename>
    <docanchor file="CHG1" title="New parameters">CHGPARAM</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG2</name>
    <title>Interface changes between SCIP 1.0 and SCIP 1.1</title>
    <filename>CHG2</filename>
  </compound>
  <compound kind="page">
    <name>CHG3</name>
    <title>Interface changes between SCIP 1.1 and SCIP 1.2</title>
    <filename>CHG3</filename>
    <docanchor file="CHG3" title="New and changed callbacks">CHGCALLBACKS</docanchor>
    <docanchor file="CHG3" title="New parameters in interface methods">CHGINTERFUNC</docanchor>
    <docanchor file="CHG3" title="Miscellaneous">MISCELLANEOUS</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG4</name>
    <title>Interface changes between SCIP 1.2 and SCIP 2.0</title>
    <filename>CHG4</filename>
    <docanchor file="CHG4" title="New and changed callbacks">CHGCALLBACKS4</docanchor>
    <docanchor file="CHG4" title="Changed interface methods">CHGINTERFUNC4</docanchor>
    <docanchor file="CHG4" title="Miscellaneous">MISCELLANEOUS4</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG5</name>
    <title>Interface changes between SCIP 2.0 and SCIP 2.1</title>
    <filename>CHG5</filename>
    <docanchor file="CHG5" title="New and changed callbacks">CHGCALLBACKS5</docanchor>
    <docanchor file="CHG5" title="Changed interface methods">CHGINTERFUNC5</docanchor>
    <docanchor file="CHG5" title="Miscellaneous">MISCELLANEOUS5</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG6</name>
    <title>Interface changes between SCIP 2.1 and SCIP 3.0</title>
    <filename>CHG6</filename>
    <docanchor file="CHG6" title="New and changed callbacks">CHGCALLBACKS6</docanchor>
    <docanchor file="CHG6" title="Changed interface methods">CHGINTERFUNC6</docanchor>
    <docanchor file="CHG6" title="Miscellaneous">MISCELLANEOUS6</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG7</name>
    <title>Interface changes between SCIP 3.0 and SCIP 3.1</title>
    <filename>CHG7</filename>
    <docanchor file="CHG7" title="New and changed callbacks">CHGCALLBACKS7</docanchor>
    <docanchor file="CHG7" title="Changed interface methods">CHGINTERFUNC7</docanchor>
    <docanchor file="CHG8" title="Miscellaneous">MISCELLANEOUS7</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG8</name>
    <title>Interface changes between SCIP 3.1 and SCIP 3.2</title>
    <filename>CHG8</filename>
    <docanchor file="CHG8" title="New and changed callbacks">CHGCALLBACKS8</docanchor>
    <docanchor file="CHG8" title="Changed interface methods">CHGINTERFUNC8</docanchor>
    <docanchor file="CHG8" title="Miscellaneous">MISCELLANEOUS7</docanchor>
  </compound>
  <compound kind="page">
    <name>COUNTER</name>
    <title>How to use SCIP to count/enumerate feasible solutions</title>
    <filename>COUNTER</filename>
    <docanchor file="COUNTER" title="Limit the number of solutions which should be counted">COUNTLIMIT</docanchor>
    <docanchor file="COUNTER" title="Collect all feasible solution">COLLECTALLFEASEBLES</docanchor>
    <docanchor file="COUNTER" title="Count number of optimal solutions">COUNTOPTIMAL</docanchor>
  </compound>
  <compound kind="page">
    <name>LICENSE</name>
    <title>License</title>
    <filename>LICENSE</filename>
  </compound>
  <compound kind="page">
    <name>FAQ</name>
    <title>Frequently Asked Questions (FAQ)</title>
    <filename>FAQ</filename>
  </compound>
  <compound kind="page">
    <name>AUTHORS</name>
    <title>SCIP Authors</title>
    <filename>AUTHORS</filename>
  </compound>
  <compound kind="page">
    <name>INSTALL</name>
    <title>Installation information</title>
    <filename>INSTALL</filename>
  </compound>
  <compound kind="page">
    <name>RELEASENOTES</name>
    <title>Release notes</title>
    <filename>RELEASENOTES</filename>
  </compound>
  <compound kind="page">
    <name>CHANGELOG</name>
    <title>CHANGELOG</title>
    <filename>CHANGELOG</filename>
  </compound>
  <compound kind="page">
    <name>PARAMETERS</name>
    <title>List of all SCIP parameters</title>
    <filename>PARAMETERS</filename>
  </compound>
  <compound kind="page">
    <name>PYTHON_INTERFACE</name>
    <title>Python interface for the SCIP Optimization Suite</title>
    <filename>PYTHON_INTERFACE</filename>
  </compound>
  <compound kind="page">
    <name>JNI_INTERFACE</name>
    <title>Java native interface for SCIP</title>
    <filename>JNI_INTERFACE</filename>
  </compound>
  <compound kind="group">
    <name>PUBLICMETHODS</name>
    <title>Public Methods</title>
    <filename>group__PUBLICMETHODS.shtml</filename>
    <file>message_default.h</file>
    <file>pub_branch.h</file>
    <file>pub_compr.h</file>
    <file>pub_conflict.h</file>
    <file>pub_cons.h</file>
    <file>pub_cutpool.h</file>
    <file>pub_dialog.h</file>
    <file>pub_disp.h</file>
    <file>pub_event.h</file>
    <file>pub_fileio.h</file>
    <file>pub_heur.h</file>
    <file>pub_implics.h</file>
    <file>pub_lp.h</file>
    <file>pub_matrix.h</file>
    <file>pub_message.h</file>
    <file>pub_nlp.h</file>
    <file>pub_nodesel.h</file>
    <file>pub_paramset.h</file>
    <file>pub_presol.h</file>
    <file>pub_pricer.h</file>
    <file>pub_prop.h</file>
    <file>pub_reader.h</file>
    <file>pub_relax.h</file>
    <file>pub_reopt.h</file>
    <file>pub_sepa.h</file>
    <file>pub_sol.h</file>
    <file>pub_tree.h</file>
    <file>pub_var.h</file>
    <file>scip.h</file>
    <file>scipdefplugins.h</file>
    <file>lpi.h</file>
  </compound>
  <compound kind="group">
    <name>TYPEDEFINITIONS</name>
    <title>Type Definitions</title>
    <filename>group__TYPEDEFINITIONS.shtml</filename>
    <file>type_branch.h</file>
    <file>type_compr.h</file>
    <file>type_conflict.h</file>
    <file>type_cons.h</file>
    <file>type_dialog.h</file>
    <file>type_disp.h</file>
    <file>type_event.h</file>
    <file>type_heur.h</file>
    <file>type_history.h</file>
    <file>type_matrix.h</file>
    <file>type_message.h</file>
    <file>type_misc.h</file>
    <file>type_nodesel.h</file>
    <file>type_paramset.h</file>
    <file>type_presol.h</file>
    <file>type_pricer.h</file>
    <file>type_prob.h</file>
    <file>type_prop.h</file>
    <file>type_reader.h</file>
    <file>type_relax.h</file>
    <file>type_sepa.h</file>
    <file>type_var.h</file>
    <file>type_expr.h</file>
    <file>type_nlpi.h</file>
    <file>type_objcloneable.h</file>
    <file>type_objprobcloneable.h</file>
  </compound>
  <compound kind="group">
    <name>BRANCHINGRULES</name>
    <title>Branching Rules</title>
    <filename>group__BRANCHINGRULES.shtml</filename>
    <file>branch_allfullstrong.h</file>
    <file>branch_cloud.h</file>
    <file>branch_distribution.h</file>
    <file>branch_fullstrong.h</file>
    <file>branch_inference.h</file>
    <file>branch_leastinf.h</file>
    <file>branch_mostinf.h</file>
    <file>branch_multaggr.h</file>
    <file>branch_nodereopt.h</file>
    <file>branch_pscost.h</file>
    <file>branch_random.h</file>
    <file>branch_relpscost.h</file>
  </compound>
  <compound kind="group">
    <name>CONSHDLRS</name>
    <title>Constraint Handler</title>
    <filename>group__CONSHDLRS.shtml</filename>
    <file>cons_abspower.h</file>
    <file>cons_and.h</file>
    <file>cons_bivariate.h</file>
    <file>cons_bounddisjunction.h</file>
    <file>cons_conjunction.h</file>
    <file>cons_countsols.h</file>
    <file>cons_cumulative.h</file>
    <file>cons_disjunction.h</file>
    <file>cons_indicator.h</file>
    <file>cons_integral.h</file>
    <file>cons_knapsack.h</file>
    <file>cons_linear.h</file>
    <file>cons_linking.h</file>
    <file>cons_logicor.h</file>
    <file>cons_nonlinear.h</file>
    <file>cons_or.h</file>
    <file>cons_orbitope.h</file>
    <file>cons_pseudoboolean.h</file>
    <file>cons_quadratic.h</file>
    <file>cons_setppc.h</file>
    <file>cons_soc.h</file>
    <file>cons_sos1.h</file>
    <file>cons_sos2.h</file>
    <file>cons_superindicator.h</file>
    <file>cons_varbound.h</file>
    <file>cons_xor.h</file>
  </compound>
  <compound kind="group">
    <name>DIALOGS</name>
    <title>Dialogs</title>
    <filename>group__DIALOGS.shtml</filename>
    <file>dialog_default.h</file>
  </compound>
  <compound kind="group">
    <name>DISPLAYS</name>
    <title>Displays</title>
    <filename>group__DISPLAYS.shtml</filename>
    <file>disp_default.h</file>
  </compound>
  <compound kind="group">
    <name>EXPRINTS</name>
    <title>Expression Interpreter</title>
    <filename>group__EXPRINTS.shtml</filename>
    <file>exprinterpret_cppad.cpp</file>
    <file>exprinterpret_none.c</file>
  </compound>
  <compound kind="group">
    <name>FILEREADERS</name>
    <title>File Readers</title>
    <filename>group__FILEREADERS.shtml</filename>
    <file>reader_bnd.h</file>
    <file>reader_ccg.h</file>
    <file>reader_cip.h</file>
    <file>reader_cnf.h</file>
    <file>reader_diff.h</file>
    <file>reader_fix.h</file>
    <file>reader_fzn.h</file>
    <file>reader_gms.h</file>
    <file>reader_lp.h</file>
    <file>reader_mps.h</file>
    <file>reader_opb.h</file>
    <file>reader_osil.h</file>
    <file>reader_pbm.h</file>
    <file>reader_pip.h</file>
    <file>reader_ppm.h</file>
    <file>reader_rlp.h</file>
    <file>reader_sol.h</file>
    <file>reader_wbo.h</file>
    <file>reader_zpl.h</file>
    <docanchor file="group__FILEREADERS" title="List of readable file formats">AVAILABLEFORMATS</docanchor>
    <docanchor file="group__FILEREADERS" title="How to add a file reader">ADDREADER</docanchor>
  </compound>
  <compound kind="group">
    <name>LPIS</name>
    <title>LP Solver Interfaces</title>
    <filename>group__LPIS.shtml</filename>
    <file>lpi_clp.cpp</file>
    <file>lpi_cpx.c</file>
    <file>lpi_grb.c</file>
    <file>lpi_msk.c</file>
    <file>lpi_none.c</file>
    <file>lpi_spx.cpp</file>
    <file>lpi_spx2.cpp</file>
    <file>lpi_xprs.c</file>
  </compound>
  <compound kind="group">
    <name>NODESELECTORS</name>
    <title>Node Selectors</title>
    <filename>group__NODESELECTORS.shtml</filename>
    <file>nodesel_bfs.h</file>
    <file>nodesel_breadthfirst.h</file>
    <file>nodesel_dfs.h</file>
    <file>nodesel_estimate.h</file>
    <file>nodesel_hybridestim.h</file>
    <file>nodesel_restartdfs.h</file>
    <file>nodesel_uct.h</file>
  </compound>
  <compound kind="group">
    <name>NLPIS</name>
    <title>NLP Solver Interfaces</title>
    <filename>group__NLPIS.shtml</filename>
    <file>nlpi_ipopt.h</file>
  </compound>
  <compound kind="group">
    <name>PRESOLVERS</name>
    <title>Presolvers</title>
    <filename>group__PRESOLVERS.shtml</filename>
    <file>presol_boundshift.h</file>
    <file>presol_components.h</file>
    <file>presol_gateextraction.h</file>
    <file>presol_implics.h</file>
    <file>presol_inttobinary.h</file>
    <file>presol_trivial.h</file>
  </compound>
  <compound kind="group">
    <name>PRICERS</name>
    <title>Pricers</title>
    <filename>group__PRICERS.shtml</filename>
  </compound>
  <compound kind="group">
    <name>PRIMALHEURISTICS</name>
    <title>Primal Heuristics</title>
    <filename>group__PRIMALHEURISTICS.shtml</filename>
    <file>heur_actconsdiving.h</file>
    <file>heur_bound.h</file>
    <file>heur_clique.h</file>
    <file>heur_coefdiving.h</file>
    <file>heur_crossover.h</file>
    <file>heur_dins.h</file>
    <file>heur_distributiondiving.h</file>
    <file>heur_dualval.h</file>
    <file>heur_feaspump.h</file>
    <file>heur_fixandinfer.h</file>
    <file>heur_fracdiving.h</file>
    <file>heur_guideddiving.h</file>
    <file>heur_indicator.h</file>
    <file>heur_intdiving.h</file>
    <file>heur_intshifting.h</file>
    <file>heur_linesearchdiving.h</file>
    <file>heur_localbranching.h</file>
    <file>heur_mutation.h</file>
    <file>heur_nlpdiving.h</file>
    <file>heur_objpscostdiving.h</file>
    <file>heur_octane.h</file>
    <file>heur_ofins.h</file>
    <file>heur_oneopt.h</file>
    <file>heur_proximity.h</file>
    <file>heur_pscostdiving.h</file>
    <file>heur_randrounding.h</file>
    <file>heur_rens.h</file>
    <file>heur_reoptsols.h</file>
    <file>heur_rins.h</file>
    <file>heur_rootsoldiving.h</file>
    <file>heur_rounding.h</file>
    <file>heur_shiftandpropagate.h</file>
    <file>heur_shifting.h</file>
    <file>heur_simplerounding.h</file>
    <file>heur_subnlp.h</file>
    <file>heur_trivial.h</file>
    <file>heur_trivialnegation.h</file>
    <file>heur_trysol.h</file>
    <file>heur_twoopt.h</file>
    <file>heur_undercover.h</file>
    <file>heur_vbounds.h</file>
    <file>heur_veclendiving.h</file>
    <file>heur_zeroobj.h</file>
    <file>heur_zirounding.h</file>
  </compound>
  <compound kind="group">
    <name>PROPAGATORS</name>
    <title>Propagators</title>
    <filename>group__PROPAGATORS.shtml</filename>
    <file>prop_dualfix.h</file>
    <file>prop_genvbounds.h</file>
    <file>prop_obbt.h</file>
    <file>prop_probing.h</file>
    <file>prop_pseudoobj.h</file>
    <file>prop_redcost.h</file>
    <file>prop_rootredcost.h</file>
    <file>prop_vbounds.h</file>
  </compound>
  <compound kind="group">
    <name>RELAXATORS</name>
    <title>Relaxation Handlers</title>
    <filename>group__RELAXATORS.shtml</filename>
  </compound>
  <compound kind="group">
    <name>SEPARATORS</name>
    <title>Separators</title>
    <filename>group__SEPARATORS.shtml</filename>
    <file>sepa_cgmip.h</file>
    <file>sepa_clique.h</file>
    <file>sepa_closecuts.h</file>
    <file>sepa_cmir.h</file>
    <file>sepa_disjunctive.h</file>
    <file>sepa_eccuts.h</file>
    <file>sepa_flowcover.h</file>
    <file>sepa_gomory.h</file>
    <file>sepa_impliedbounds.h</file>
    <file>sepa_intobj.h</file>
    <file>sepa_mcf.h</file>
    <file>sepa_oddcycle.h</file>
    <file>sepa_rapidlearning.h</file>
    <file>sepa_strongcg.h</file>
    <file>sepa_zerohalf.h</file>
  </compound>
  <compound kind="group">
    <name>ColumnMethods</name>
    <title>Column methods</title>
    <filename>group__ColumnMethods.shtml</filename>
  </compound>
  <compound kind="group">
    <name>RowMethods</name>
    <title>Row methods</title>
    <filename>group__RowMethods.shtml</filename>
  </compound>
  <compound kind="group">
    <name>LPMethods</name>
    <title>LP methods</title>
    <filename>group__LPMethods.shtml</filename>
  </compound>
  <compound kind="group">
    <name>STATISTICALTESTS</name>
    <title>Methods for statistical tests</title>
    <filename>group__STATISTICALTESTS.shtml</filename>
  </compound>
  <compound kind="group">
    <name>GMLgraph</name>
    <title>GML graphical printing</title>
    <filename>group__GMLgraph.shtml</filename>
  </compound>
  <compound kind="group">
    <name>DataStructures</name>
    <title>Data Structures</title>
    <filename>group__DataStructures.shtml</filename>
    <subgroup>SparseSol</subgroup>
    <subgroup>Queue</subgroup>
    <subgroup>PriorityQueue</subgroup>
    <subgroup>HashTable</subgroup>
    <subgroup>HashMap</subgroup>
    <subgroup>ResourceActivity</subgroup>
    <subgroup>ResourceProfile</subgroup>
    <subgroup>DirectedGraph</subgroup>
    <subgroup>BinaryTree</subgroup>
  </compound>
  <compound kind="group">
    <name>SparseSol</name>
    <title>Sparse solution</title>
    <filename>group__SparseSol.shtml</filename>
  </compound>
  <compound kind="group">
    <name>Queue</name>
    <title>Queue</title>
    <filename>group__Queue.shtml</filename>
  </compound>
  <compound kind="group">
    <name>PriorityQueue</name>
    <title>Priority Queue</title>
    <filename>group__PriorityQueue.shtml</filename>
  </compound>
  <compound kind="group">
    <name>HashTable</name>
    <title>Hash Table</title>
    <filename>group__HashTable.shtml</filename>
  </compound>
  <compound kind="group">
    <name>HashMap</name>
    <title>Hash Map</title>
    <filename>group__HashMap.shtml</filename>
  </compound>
  <compound kind="group">
    <name>ResourceActivity</name>
    <title>Resource activity</title>
    <filename>group__ResourceActivity.shtml</filename>
  </compound>
  <compound kind="group">
    <name>ResourceProfile</name>
    <title>Resource Profile</title>
    <filename>group__ResourceProfile.shtml</filename>
  </compound>
  <compound kind="group">
    <name>DirectedGraph</name>
    <title>Directed Graph</title>
    <filename>group__DirectedGraph.shtml</filename>
  </compound>
  <compound kind="group">
    <name>BinaryTree</name>
    <title>Binary Tree</title>
    <filename>group__BinaryTree.shtml</filename>
  </compound>
  <compound kind="group">
    <name>SortingAlgorithms</name>
    <title>Sorting Algorithms</title>
    <filename>group__SortingAlgorithms.shtml</filename>
  </compound>
  <compound kind="group">
    <name>MiscellaneousMethods</name>
    <title>Miscellaneous Methods</title>
    <filename>group__MiscellaneousMethods.shtml</filename>
    <subgroup>NumericalMethods</subgroup>
    <subgroup>RandomNumbers</subgroup>
    <subgroup>AdditionalMathFunctions</subgroup>
    <subgroup>PermutationsShuffling</subgroup>
    <subgroup>Arrays</subgroup>
    <subgroup>StringMethods</subgroup>
    <subgroup>FileMethods</subgroup>
  </compound>
  <compound kind="group">
    <name>NumericalMethods</name>
    <title>Numerical Methods</title>
    <filename>group__NumericalMethods.shtml</filename>
  </compound>
  <compound kind="group">
    <name>RandomNumbers</name>
    <title>Random Numbers</title>
    <filename>group__RandomNumbers.shtml</filename>
  </compound>
  <compound kind="group">
    <name>AdditionalMathFunctions</name>
    <title>Additional math functions</title>
    <filename>group__AdditionalMathFunctions.shtml</filename>
  </compound>
  <compound kind="group">
    <name>PermutationsShuffling</name>
    <title>Permutations Shuffling</title>
    <filename>group__PermutationsShuffling.shtml</filename>
  </compound>
  <compound kind="group">
    <name>Arrays</name>
    <title>Arrays</title>
    <filename>group__Arrays.shtml</filename>
  </compound>
  <compound kind="group">
    <name>StringMethods</name>
    <title>String Methods</title>
    <filename>group__StringMethods.shtml</filename>
  </compound>
  <compound kind="group">
    <name>FileMethods</name>
    <title>File Methods</title>
    <filename>group__FileMethods.shtml</filename>
  </compound>
  <compound kind="class">
    <name>atomic_posintpower</name>
    <filename>classatomic__posintpower.shtml</filename>
    <templarg>Type</templarg>
    <member kind="function">
      <type></type>
      <name>atomic_posintpower</name>
      <anchorfile>classatomic__posintpower.shtml</anchorfile>
      <anchor>a118f90eb677eb5c0fc5e9fca2e002ba2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>atomic_signpower</name>
    <filename>classatomic__signpower.shtml</filename>
    <templarg>Type</templarg>
    <member kind="function">
      <type></type>
      <name>atomic_signpower</name>
      <anchorfile>classatomic__signpower.shtml</anchorfile>
      <anchor>a78c4e87eac36363b75bdb905eb409490</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>atomic_signpower&lt; SCIPInterval &gt;</name>
    <filename>classatomic__signpower_3_01SCIPInterval_01_4.shtml</filename>
    <member kind="function">
      <type></type>
      <name>atomic_signpower</name>
      <anchorfile>classatomic__signpower_3_01SCIPInterval_01_4.shtml</anchorfile>
      <anchor>a8782c6a9e72fe35a5ec60b8b2332e25d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>atomic_userexpr</name>
    <filename>classatomic__userexpr.shtml</filename>
    <templarg>Type</templarg>
    <member kind="function">
      <type></type>
      <name>atomic_userexpr</name>
      <anchorfile>classatomic__userexpr.shtml</anchorfile>
      <anchor>a6d0358688523f4d3a91a42ca29a2d684</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_CPXParam</name>
    <filename>structSCIP__CPXParam.shtml</filename>
    <member kind="variable">
      <type>int</type>
      <name>intparval</name>
      <anchorfile>structSCIP__CPXParam.shtml</anchorfile>
      <anchor>a17bf38fb5665bb09a9051e1cd3b3269d</anchor>
      <arglist>[NUMINTPARAM]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dblparval</name>
      <anchorfile>structSCIP__CPXParam.shtml</anchorfile>
      <anchor>a16b3cbc946ea2ff77563208f09cae0b2</anchor>
      <arglist>[NUMDBLPARAM]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_LPiNorms</name>
    <filename>structSCIP__LPiNorms.shtml</filename>
    <member kind="variable">
      <type>int</type>
      <name>normlen</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>af2f14fcfad2e5614772dea2d6f66aecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>norm</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>ab5b987d17cc303769ddfa1b158c4cca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>head</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>ae7a74c647bb2a4d498d38e4b2c91ca90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrows</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>aa6648900ed12e4f2f3209226eb8bf5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncols</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>a79d19b0ad1ecc986dee58c542c67f2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>norms</name>
      <anchorfile>structSCIP__LPiNorms.shtml</anchorfile>
      <anchor>a8b43bc1210061557a8e748a0b1f3088a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SCIPInterval</name>
    <filename>classSCIPInterval.shtml</filename>
    <member kind="function">
      <type></type>
      <name>SCIPInterval</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a604be4be8285900846b4e7223ba16ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIPInterval</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a061b5f6df1a9247a636c78211be08cc7</anchor>
      <arglist>(const SCIP_INTERVAL &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIPInterval</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a6f3cdc7d5e9a612be11cdcc21556672f</anchor>
      <arglist>(SCIP_Real infinum, SCIP_Real supremum)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIPInterval</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>ad97ae3f78a2d7123c09104bcf1c6eb3e</anchor>
      <arglist>(SCIP_Real number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>ac2ec133b51e525efefd971d4b84cde40</anchor>
      <arglist>(SCIP_Real newinf, SCIP_Real newsup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>aa7b5035c98a6834094d2ad1a72c2f59d</anchor>
      <arglist>(const SCIP_INTERVAL &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a75133b64dc69fcf47278d90256a1faae</anchor>
      <arglist>(const SCIP_INTERVAL &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a7f9b002c6f61a5cb5658b0333d3bb178</anchor>
      <arglist>(const SCIP_Real &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a116c78a2675367b364a32a5cab5e89aa</anchor>
      <arglist>(const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a43cec91fc6cc199332029317226af6b6</anchor>
      <arglist>(const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>af82072374f66132c5d20687aa40e7284</anchor>
      <arglist>(const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a2a3b06d65ca478a3cd3ca6ac9fe80672</anchor>
      <arglist>(const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>a7a7e33393d8fc66cbbed22316a073121</anchor>
      <arglist>(const SCIP_Real &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval &amp;</type>
      <name>operator=</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>aa092a471b01cb0ad9ec66bcf9e7b7c31</anchor>
      <arglist>(const SCIP_INTERVAL &amp;y)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SCIP_Real</type>
      <name>infinity</name>
      <anchorfile>classSCIPInterval.shtml</anchorfile>
      <anchor>afa4d69bbcae588572d24bdc9fd24c80b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>scip</name>
    <filename>namespacescip.shtml</filename>
    <class kind="class">scip::ObjBranchrule</class>
    <class kind="struct">scip::ObjCloneable</class>
    <class kind="class">scip::ObjConshdlr</class>
    <class kind="class">scip::ObjDialog</class>
    <class kind="class">scip::ObjDisp</class>
    <class kind="class">scip::ObjEventhdlr</class>
    <class kind="class">scip::ObjHeur</class>
    <class kind="class">scip::ObjMessagehdlr</class>
    <class kind="class">scip::ObjNodesel</class>
    <class kind="class">scip::ObjPresol</class>
    <class kind="class">scip::ObjPricer</class>
    <class kind="struct">scip::ObjProbCloneable</class>
    <class kind="class">scip::ObjProbData</class>
    <class kind="class">scip::ObjProp</class>
    <class kind="class">scip::ObjReader</class>
    <class kind="class">scip::ObjRelax</class>
    <class kind="class">scip::ObjSepa</class>
    <class kind="class">scip::ObjVardata</class>
  </compound>
  <compound kind="class">
    <name>scip::ObjBranchrule</name>
    <filename>classscip_1_1ObjBranchrule.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjBranchrule</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>af7e6a7b62939018193af190da8a6e5c2</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjBranchrule</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a0cd028f7ad749f36b83a66f1587d81a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHFREE</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a5e16cd40d74f7ffbce53338d90a87649</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHINIT</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>ad75122810f3b1de531272fe4434b24ce</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHEXIT</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>afb91f112d01f05989d3aaef0517c75ec</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHINITSOL</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a93896045c5a1ea0fa4bd18fa307077d0</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHEXITSOL</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a5e909413ac37aa70cdc3eebd8083a1b9</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHEXECLP</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a480c91bde5deafe2c7478df854a581c3</anchor>
      <arglist>(scip_execlp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHEXECEXT</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>ae74cac6a57f09bbd69306e9dc7558ab4</anchor>
      <arglist>(scip_execext)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_BRANCHEXECPS</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>ad3e12e22f4c7ea4a92e62246dad108c5</anchor>
      <arglist>(scip_execps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjCloneable</name>
      <anchorfile>structscip_1_1ObjCloneable.shtml</anchorfile>
      <anchor>a31a530542ba61e6dd6b39246c799860b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_OBJCLONEABLECLONE</name>
      <anchorfile>structscip_1_1ObjCloneable.shtml</anchorfile>
      <anchor>a7f388b9f43c70cafd4c2ed83439d5fb9</anchor>
      <arglist>(ObjCloneable *clone)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_OBJCLONEABLEISCLONEABLE</name>
      <anchorfile>structscip_1_1ObjCloneable.shtml</anchorfile>
      <anchor>a3a02a64eb9051fd25295a3d1f0367b51</anchor>
      <arglist>(iscloneable)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>aef706a5c90d9784572e826ca10c5c10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>ad8474b79c5be6faa86e4eba3c3f2f36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a612688469aa03d4b0b6d24d826e38687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a40f346ddf652005d64402442cd38a9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxdepth_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>acfd67df27957dadfcb504800adbf142e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Real</type>
      <name>scip_maxbounddist_</name>
      <anchorfile>classscip_1_1ObjBranchrule.shtml</anchorfile>
      <anchor>a41e0079211f0bb5c2c80a02c1fcc2595</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scip::ObjCloneable</name>
    <filename>structscip_1_1ObjCloneable.shtml</filename>
  </compound>
  <compound kind="class">
    <name>scip::ObjConshdlr</name>
    <filename>classscip_1_1ObjConshdlr.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjConshdlr</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a4a802998d1df104f51e80be5a4fe4d16</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int sepapriority, int enfopriority, int checkpriority, int sepafreq, int propfreq, int eagerfreq, int maxprerounds, SCIP_Bool delaysepa, SCIP_Bool delayprop, SCIP_Bool needscons, unsigned int proptiming, unsigned int presoltiming)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjConshdlr</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ab5582de8cc9ec4991692f688e74d7f77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSFREE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a4a580f013c01593d1131c6f7d78afa24</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSINIT</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a49e8a93d3855d4c29e853cef4a8b3b0b</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSEXIT</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a504c23f3fd68d35cb2e697e63e6ddb39</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSINITPRE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a87ce59493705eb7b4607f0722080b1a7</anchor>
      <arglist>(scip_initpre)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSEXITPRE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>aee67e1579b4f920fc84ed95e5fa90f51</anchor>
      <arglist>(scip_exitpre)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSINITSOL</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a45dd6c9621074dc15988730ca686321b</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSEXITSOL</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a749b33971d22879445fc501fcf4fe1e5</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSDELETE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a2ea962f1eba3d373be042da5f7b9b2bd</anchor>
      <arglist>(scip_delete)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_CONSTRANS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>add2c0a66a507138efdc4e77997bc0a88</anchor>
      <arglist>(scip_trans)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSINITLP</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a840f19d6e9506f1e4e157c137a8da51d</anchor>
      <arglist>(scip_initlp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSSEPALP</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a4a13fd038a7f622e3c8b55f239a70297</anchor>
      <arglist>(scip_sepalp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSSEPASOL</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a5467e10d182e9588337e2c69f572e2bf</anchor>
      <arglist>(scip_sepasol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_CONSENFOLP</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a2d77fe5113add77fe149256bf1231de5</anchor>
      <arglist>(scip_enfolp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_CONSENFOPS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a9b73f3d6afbcfa223b32d0aba25bfed4</anchor>
      <arglist>(scip_enfops)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_CONSCHECK</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ae2140fc531601cbb738fa52ac646259c</anchor>
      <arglist>(scip_check)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSPROP</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a061c9980fb799b0d84751a07b4a8ff89</anchor>
      <arglist>(scip_prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSPRESOL</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a54875258b75f378cc525e20013b4dc5f</anchor>
      <arglist>(scip_presol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSRESPROP</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a18806f4d66ab3a6c4a61e6550cb89a8c</anchor>
      <arglist>(scip_resprop)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_CONSLOCK</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a88366acfc64270d082a983ed43f7b957</anchor>
      <arglist>(scip_lock)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSACTIVE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a901da8c6f5ddaf82fa003de45904b65d</anchor>
      <arglist>(scip_active)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSDEACTIVE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a7e44cfee2961deaf9d69cd250b39d6b0</anchor>
      <arglist>(scip_deactive)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSENABLE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a37fa65193f4b134c4012bdf9892675e5</anchor>
      <arglist>(scip_enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSDISABLE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a84d5d15bf355506af32ac063f10c2775</anchor>
      <arglist>(scip_disable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSDELVARS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a9413ee0d70d7652b0d05872b7f52ffa6</anchor>
      <arglist>(scip_delvars)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSPRINT</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>af766d683a77e038a4a7991ba8cbef1a3</anchor>
      <arglist>(scip_print)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSCOPY</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>adf4c30a9ea446737f3ace82e211c7b71</anchor>
      <arglist>(scip_copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSPARSE</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a1c81d55105754c822596ed439a01972d</anchor>
      <arglist>(scip_parse)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSGETVARS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a653117434301b7251c0cb66be2d90bb5</anchor>
      <arglist>(scip_getvars)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSGETNVARS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ad4a91a015b7004b384f0d0c5e8fdf83f</anchor>
      <arglist>(scip_getnvars)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_CONSGETDIVEBDCHGS</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a6d2458efde2e267effb323e9548c5b44</anchor>
      <arglist>(scip_getdivebdchgs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProbCloneable</name>
      <anchorfile>structscip_1_1ObjProbCloneable.shtml</anchorfile>
      <anchor>a9c17f67c4382d55fffa1d656efd62a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_OBJPROBCLONE</name>
      <anchorfile>structscip_1_1ObjProbCloneable.shtml</anchorfile>
      <anchor>a1c704b1e5037f9c928c8d3e814d11588</anchor>
      <arglist>(ObjProbCloneable *clone)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_OBJPROBISCLONEABLE</name>
      <anchorfile>structscip_1_1ObjProbCloneable.shtml</anchorfile>
      <anchor>a8a1dd2066be5fcb9e4baa21afb08cec3</anchor>
      <arglist>(iscloneable)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ab82f8d27838f7b6d545f8b7046a66c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>af93d38e4bb813f42255a3bbd72047a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a9c1b30f1077555d6fdda960fac1b2e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_sepapriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a3b3a4f289b821361bdee0e208ef49771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_enfopriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a9d5aff7cccc6cca893ba5a70a1338bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_checkpriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ae02441c72b587f13fc3ce36bac399d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_sepafreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a905881e204f9a9dd7d3ffb97566da4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_propfreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a97d3bb50f3b729162923c3ae81caf5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_eagerfreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a38ab469f79d9fd28b10cfad38afc6643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxprerounds_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>ab44226a494c68dc8cb12a2a559257c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delaysepa_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a45b2e76fbb0496129060c0737c9e59c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delayprop_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a55c7d8ab004ab107419ace60f9c0b7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_needscons_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a5d1916621fac972cb8264fafe6f6a312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_proptiming_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a4516b6a3ebf188da55d3e90464a8fb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_presoltiming_</name>
      <anchorfile>classscip_1_1ObjConshdlr.shtml</anchorfile>
      <anchor>a3e26f718672d1705965a9eac4146ca99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjDialog</name>
    <filename>classscip_1_1ObjDialog.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjDialog</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>accc9471dfad661cda826842aac0e48b8</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Bool issubmenu)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjDialog</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>ab09a6d0830c89857824b1c6f0b6f8926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DIALOGFREE</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>a9d5e8f4490bfcf8fa736da927704c675</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>abf8bd92bb9cde180d002ee20232f8ead</anchor>
      <arglist>(scip_desc)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>a613d60f5eb16c0ad16ca16db53b81c80</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>a3275cafde7cb5aab22c5c5ff6fb7e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>aba9b5f2a850050ade08ffae35fc38bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>a28f51f0222a30c7a5a3cc7cfdceb4047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_issubmenu_</name>
      <anchorfile>classscip_1_1ObjDialog.shtml</anchorfile>
      <anchor>a34c0184ba23d5f812da445cb9d6d0491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjDisp</name>
    <filename>classscip_1_1ObjDisp.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjDisp</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>abaa051fe8681162417fae91b3b23dc74</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *header, int width, int priority, int position, SCIP_Bool stripline)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjDisp</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a9b975021e4ab77335a8003e5db07890a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DISPFREE</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a229165c868320ed76a790cf9152ceddd</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DISPINIT</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a9f2d5a6001e5be84b63e4badbe50cc02</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DISPEXIT</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>afc6ae0b58b87f10eaeb0ab65b3b681bd</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DISPINITSOL</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>ad4730e2cba09ce9d807fd09f4590f597</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_DISPEXITSOL</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a9de0ce092ecb2f3b25b2b2c003d2ab79</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_DISPOUTPUT</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>aedeffeb3576fd110173df78025f3f829</anchor>
      <arglist>(scip_output)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a9777b5a9240f8c60a7553881f89536ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a137819aa41cef68f137159c389314002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a1e6478924a6673b2add7d2082a3eb03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_header_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a8dae467fb6f07c7246f53aed169cfb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_width_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>aea26be10838e1cb6140f12f3d97015d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a79d1528ad32fc2ab25cef64e5438a95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_position_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>a3fd8a9ccb27c14a5b7dd8c4c1f1d088a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_stripline_</name>
      <anchorfile>classscip_1_1ObjDisp.shtml</anchorfile>
      <anchor>aa5c9d8992e14cc082cb10979d89d31a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjEventhdlr</name>
    <filename>classscip_1_1ObjEventhdlr.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjEventhdlr</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a14563f5beb464e7b6c382131af43a2a5</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjEventhdlr</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>af0f53c1a066d802976f5c26bcf257f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTFREE</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a53a262898e93b6cf3d5ab55b0f872d1d</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTINIT</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a4f9ce341d5be70abd563bca6a168fcbd</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTEXIT</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>adeca233a51e57432da918f08552a18aa</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTINITSOL</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>aebecea799bc3fcaccb095afcbc631624</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTEXITSOL</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a147979c43ba39a2571cdda6ee6d470d0</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTDELETE</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>ac182cff3a728d7bf9cdb5d9e067436cc</anchor>
      <arglist>(scip_delete)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_EVENTEXEC</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>add8adb6d522dd3839ad0b838fe7cece4</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a47c96396bc54032005a83813b625b404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>acdb61091f1003acf8e1d531ad96e0a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.shtml</anchorfile>
      <anchor>a592691a11211c4b66dcdfb924537ff5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjHeur</name>
    <filename>classscip_1_1ObjHeur.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjHeur</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a46a95734b41e7b8b030c845aacac05e7</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjHeur</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a384c686abae204950e17a7a2b6e9bd83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_HEURFREE</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a6072c849aee763ac4a786f9548416141</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_HEURINIT</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>adf7d1b108709c5f3f7fd9c93c7714936</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_HEUREXIT</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a02405ccedafa13da474623a4c66e11b8</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_HEURINITSOL</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>ae220bdb55f19c2f1a6f69b275465b1e0</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_HEUREXITSOL</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a909e70f7444174900474816d2441e13c</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_HEUREXEC</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a928236315a96d9ff8dfccee8a8f5cb34</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a20dc3d671992cffbae83e6b89f662764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a7839f3205657605a6267a0e6493e9822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>ae3ab40df6fcdd5fdfd9fd90de92a540a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>scip_dispchar_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a467a7c8714a406e66687532346b356ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a79a8215a62b4dc99f0fdae15cb02dd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a4201c5fbc2372283c96ed6be84d6b0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freqofs_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a41ed46ef3f0a72ca2bf7d021ab2a675a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxdepth_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a23be2d8af87ced2e6b961483a0f68083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_timingmask_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a1919dc2eb7ba1df5b62471248293a0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_usessubscip_</name>
      <anchorfile>classscip_1_1ObjHeur.shtml</anchorfile>
      <anchor>a8505bf78988d141096d4e13b20f33807</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjMessagehdlr</name>
    <filename>classscip_1_1ObjMessagehdlr.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjMessagehdlr</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>acda620e0838ffdb827a48d1f587b9d8c</anchor>
      <arglist>(SCIP_Bool bufferedoutput)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjMessagehdlr</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>a1d5d08aec8932678a5af93f9f7ef413d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_MESSAGEWARNING</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>a64677d882d0746abf2e0906b6abc8943</anchor>
      <arglist>(scip_warning)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_MESSAGEDIALOG</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>abef9ad716cad4fbcf8edbe168c1a5b77</anchor>
      <arglist>(scip_dialog)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_MESSAGEINFO</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>a4aaad27c8ad7b46eed7390db4089c03d</anchor>
      <arglist>(scip_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_MESSAGEHDLRFREE</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>aef92be26608430c0ee58be7231059ced</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_bufferedoutput_</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.shtml</anchorfile>
      <anchor>a7514c789c90747534788617052916d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjNodesel</name>
    <filename>classscip_1_1ObjNodesel.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjNodesel</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a2bc8b2fc77fee699d195ac6d28da6490</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int stdpriority, int memsavepriority)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjNodesel</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a30c1a81f4e43ebb3defbc0275851a343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELFREE</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a02ad511f08359b3d4d34411fe3705b9f</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELINIT</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a85d615024ba02297ce24de4b9a8ce829</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELEXIT</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a1aa65f5ecc2d8f4acddc1d96ceb5a6f5</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELINITSOL</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>aa9ab958af0f7e7be31c8068c08524a1d</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELEXITSOL</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a34f98189e851d6c00663129455f1d182</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELSELECT</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>ad6330731e36798584b83e94ed15a22c7</anchor>
      <arglist>(scip_select)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_NODESELCOMP</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>affd86ac1aa3a57a70f90a69e8e48a0fc</anchor>
      <arglist>(scip_comp)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>aaf6e3806b09a044d1612a4fcf0d2c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>ae5ea6d5089bc77929bc2165d94ddf356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>afd7998cd71ffd595aaef24425621afab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_stdpriority_</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>a55761b0ccbde97f5425866887cc21a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_memsavepriority_</name>
      <anchorfile>classscip_1_1ObjNodesel.shtml</anchorfile>
      <anchor>aef1e20eb9d74972ceb2e94f3dc800633</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjPresol</name>
    <filename>classscip_1_1ObjPresol.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjPresol</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>afabb27730e4d1e43cd49a7c56d95c64c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxrounds, SCIP_Bool timing)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjPresol</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>aae298dbd0aef7f3fd262ff919b4db53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLFREE</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>afabf03272ec5ccef017b886636f83592</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLINIT</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>acce08ea789318b7e782f23c377d0e414</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLEXIT</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>ada9d42b4c1ac9ec5e5e38508f89c4a45</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLINITPRE</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>adb2d010e6a30b4ae64f5c8ed951ec821</anchor>
      <arglist>(scip_initpre)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLEXITPRE</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>a085bb83649dc0cc8b22b644c8c9225bf</anchor>
      <arglist>(scip_exitpre)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_PRESOLEXEC</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>a39ba4b38224c0e49c6610a7f1e30b9a3</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>afb4a4dd8c1006b7c5903ffe310ccad16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>a6bf31e5ed97b1c24fdcb26d87de8cd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>abda346b28095aa5f126373a16d204415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>aed9f18427bfb7ae5cf4b98c3db37a58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxrounds_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>a059e3f868b87f3aa37a6e3daaede6bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_timing_</name>
      <anchorfile>classscip_1_1ObjPresol.shtml</anchorfile>
      <anchor>ac0887d6de8b0a6abbadda025fa3ab913</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjPricer</name>
    <filename>classscip_1_1ObjPricer.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjPricer</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a8c736af4a15dec6dd1ab01d7da3a87a6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjPricer</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a0e26c8b3a9dbf56303104556eea52daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICERFREE</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a5ea2112151669b69a81ca19f9b1f55e7</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICERINIT</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>aa1cd0453217f902152b1499670d8897b</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICEREXIT</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a9e003fbcd79eab8131fa5f984750402c</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICERINITSOL</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a4da8aee575d1d5aa4a42dab24a7dedce</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICEREXITSOL</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a99d3d4a5acbd6683a89d6b583ad7adc5</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_PRICERREDCOST</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a52199bc7b866a1cbed192f5c0aa96c4e</anchor>
      <arglist>(scip_redcost)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PRICERFARKAS</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a00ad6430d4a1908dde4993f52a3545da</anchor>
      <arglist>(scip_farkas)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>aa33cc9c619bfd7ba7847499b3ff7a4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a48486dd89d9613a1ea806d2f16eacecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>abd7db4f4b12c15295d3677383cdbbc70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>af21f089031fb812e1a7f37d6690b6acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjPricer.shtml</anchorfile>
      <anchor>a582f6a4dba8ba2f4a3286011d2dd2b71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scip::ObjProbCloneable</name>
    <filename>structscip_1_1ObjProbCloneable.shtml</filename>
  </compound>
  <compound kind="class">
    <name>scip::ObjProbData</name>
    <filename>classscip_1_1ObjProbData.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjProbData</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>aaa4de68a603c9199c9b5049929a24402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProbData</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>acdaa9ea3982eed89be1a1201a693ce8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delorig</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>a26997d970b0685eb06bba7061674a5a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_trans</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>a33e3c189b851724be985dd089bf1848b</anchor>
      <arglist>(SCIP *scip, ObjProbData **objprobdata, SCIP_Bool *deleteobject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_deltrans</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>af84ebbcebd466fc848543975c8663bd1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>a9401f772cae5cd6f77e78a20c7d8386f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>a289b20d78b0f184f41d75982ffd227a0</anchor>
      <arglist>(SCIP *scip, SCIP_Bool restart)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_copy</name>
      <anchorfile>classscip_1_1ObjProbData.shtml</anchorfile>
      <anchor>a2a78f27aeba12ad909d8650bb0e97b2c</anchor>
      <arglist>(SCIP *scip, SCIP *sourcescip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, ObjProbData **objprobdata, SCIP_Bool global, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjProp</name>
    <filename>classscip_1_1ObjProp.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjProp</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>af921cd32810203110d06a3585d048b40</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay, unsigned int timingmask, int presolpriority, int presolmaxrounds, SCIP_Bool presoltiming)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProp</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a64b82e2065afb164ab41b624e9b9530c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPFREE</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>ad3f1bfec9a1890fc93070054398e3f7f</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPINIT</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a483ffc88d63ca93047ce2cc8b7a3fe21</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPEXIT</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a43c1fcc5e8e2643eff3449a8415a5f9c</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPINITPRE</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>acab0e134931a6900804ca7585e509ee6</anchor>
      <arglist>(scip_initpre)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPEXITPRE</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a6b10338be46b30e73c0a60d4eb7c39b2</anchor>
      <arglist>(scip_exitpre)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPINITSOL</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a6377a8a981d4e868f795eee47bd466dd</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPEXITSOL</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a461823bf1b2a99748d19566db371c512</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPPRESOL</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>af5aa1e5b500331c18698d0705aca09aa</anchor>
      <arglist>(scip_presol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_PROPEXEC</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a72f9128580c7d54e35f6575453e5a7b0</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_PROPRESPROP</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a4c52e6b683e7df273e170cc50edc00c7</anchor>
      <arglist>(scip_resprop)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a5b964d38cbd295aa97f54b5ba55e740e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>ad11dff49d66b1f34994dda6a5b4b54c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a55e4b2c3d96bc879bba64aa09a008253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a0ff9427b60d06111b85012ed8fa0e5d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a66d9b8d15a495f445453bd88f42b6b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a11013fd1e5c98f722db32bca1fc83efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_timingmask_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>ad2dd76360cb35805dea657faa263df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_presol_priority_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>acda581a3ea220a3e2a57abf8db819a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_presol_maxrounds_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>a5aa3545524d970cd390a6ff2e18b0a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_presol_timing_</name>
      <anchorfile>classscip_1_1ObjProp.shtml</anchorfile>
      <anchor>ae555a75f9a63ca10982c23e1dcdaf9a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjReader</name>
    <filename>classscip_1_1ObjReader.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjReader</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>a8e38a7cf0999c5cb9df7d6f34ccf9572</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *extension)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjReader</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>a5b6e009bd744bbf0cc16b83607444698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_READERFREE</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>a30df636829e84f1c03c0af660c28bca4</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_READERREAD</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>a3b6fefb0dfb90a139d5456a4574c036c</anchor>
      <arglist>(scip_read)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_READERWRITE</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>af083ef2335d9dd895c9846d01e4d8d56</anchor>
      <arglist>(scip_write)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>ab7ddd5947cf817a01ddca56460998445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>aa9d1738104dd5eb1f1c8d8408435f731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>abdeeccd7785e4bfa4481f95804a1bfb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_extension_</name>
      <anchorfile>classscip_1_1ObjReader.shtml</anchorfile>
      <anchor>a318a81cd84b5a5fd2e1936e9d7a74f75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjRelax</name>
    <filename>classscip_1_1ObjRelax.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjRelax</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>aa1bfb99f96da9050d9f866a058e314c0</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjRelax</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>ad733e515c03012323934c08e2fe3cd4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXFREE</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a087e5b85c7bc7ae14b8d0264cfc56b0c</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXINIT</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a8f9f6d20fa3ee25d085587499548d6dc</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXEXIT</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>ad319e98791aa70edec5923a16f085797</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXINITSOL</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a462ca4370065f51c924ec8bde139f913</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXEXITSOL</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a07a2cc05a33db447cf150f23baec72e2</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>SCIP_DECL_RELAXEXEC</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a738f8265a98f9c767c6c625484016827</anchor>
      <arglist>(scip_exec)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a0f5aaa9576145d10fb6e3e93b3361df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a85acac014c73dbf352c25145623c73e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a4b0369e85d81d5167518a786f0aea883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>a48a1c66e1a93b61d600aa02e2d5f926d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjRelax.shtml</anchorfile>
      <anchor>adea0c8dfe5fb4400ee6b563539682113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjSepa</name>
    <filename>classscip_1_1ObjSepa.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjSepa</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a66249560d03658955b67baac2d0e0197</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjSepa</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>af8d2813b3e1b521e8706d6030212d8d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAFREE</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a6417f85a833ca5850943dec970f38492</anchor>
      <arglist>(scip_free)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAINIT</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>aa03f7b4e9c08e71312f31925ef073549</anchor>
      <arglist>(scip_init)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAEXIT</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a132346b3c633888a02038e913e2f7726</anchor>
      <arglist>(scip_exit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAINITSOL</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>aa2b01f843a4e55365cccefab609edb41</anchor>
      <arglist>(scip_initsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAEXITSOL</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a67fa589b290f8c8481be7001548e7b62</anchor>
      <arglist>(scip_exitsol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAEXECLP</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>aff74d319e208a9d9692390aad3678ab8</anchor>
      <arglist>(scip_execlp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>SCIP_DECL_SEPAEXECSOL</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a0f4173fbdc77649d89c10936460be933</anchor>
      <arglist>(scip_execsol)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a9ca98fca580f336e8e4f6b93b726a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>afd1b25a18f21a7dd9eaa9313dc2b9a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a17b905f838a85ec4187772f66f6927d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>aea53090c54e1511218de25c24495bb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>adcef2ae2e2324d2284a1567253cf0dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Real</type>
      <name>scip_maxbounddist_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a9824e0c1d598a7046c1fe22fd32a4ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_usessubscip_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>ad8215c7b0db6fc440499eb5c511bdb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjSepa.shtml</anchorfile>
      <anchor>a62198a84b1b5d2eb69718434da09e226</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjVardata</name>
    <filename>classscip_1_1ObjVardata.shtml</filename>
    <member kind="function">
      <type></type>
      <name>ObjVardata</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>af43a699a06a44e9d23bec2ac77488f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjVardata</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>a72b7f44b4f753c48dbad015ab6143bab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delorig</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>a0eea1b6fcf279629816c5689d2cceab1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_trans</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>a36e4d4b4a278c97c3f90ceff13a962ff</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, ObjVardata **objvardata, SCIP_Bool *deleteobject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_deltrans</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>a694f807d0678ee1491c8117b8f5f23e9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_copy</name>
      <anchorfile>classscip_1_1ObjVardata.shtml</anchorfile>
      <anchor>a53453bdf70db73767dd2f681ba8aec8a</anchor>
      <arglist>(SCIP *scip, SCIP *sourcescip, SCIP_VAR *sourcevar, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_VAR *targetvar, ObjVardata **objvardata, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>lpi</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/lpi/</path>
    <filename>dir_d3863659aaa1015925408f148cb8b694.shtml</filename>
    <file>lpi.h</file>
    <file>lpi_clp.cpp</file>
    <file>lpi_cpx.c</file>
    <file>lpi_grb.c</file>
    <file>lpi_msk.c</file>
    <file>lpi_none.c</file>
    <file>lpi_qso.c</file>
    <file>lpi_spx.cpp</file>
    <file>lpi_spx2.cpp</file>
    <file>lpi_xprs.c</file>
    <file>type_lpi.h</file>
  </compound>
  <compound kind="dir">
    <name>nlpi</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/nlpi/</path>
    <filename>dir_3a0dc86931ff44c4884dcf8f4f2f199a.shtml</filename>
    <file>exprinterpret.h</file>
    <file>exprinterpret_cppad.cpp</file>
    <file>exprinterpret_none.c</file>
    <file>intervalarithext.cpp</file>
    <file>intervalarithext.h</file>
    <file>nlpi_ipopt.h</file>
    <file>pub_expr.h</file>
    <file>type_expr.h</file>
    <file>type_exprinterpret.h</file>
    <file>type_nlpi.h</file>
  </compound>
  <compound kind="dir">
    <name>objscip</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/objscip/</path>
    <filename>dir_0781f48d93cd4753627d4cfe801db605.shtml</filename>
    <file>objbranchrule.h</file>
    <file>objcloneable.h</file>
    <file>objconshdlr.h</file>
    <file>objdialog.h</file>
    <file>objdisp.h</file>
    <file>objeventhdlr.h</file>
    <file>objheur.h</file>
    <file>objmessagehdlr.h</file>
    <file>objnodesel.h</file>
    <file>objpresol.h</file>
    <file>objpricer.h</file>
    <file>objprobcloneable.h</file>
    <file>objprobdata.h</file>
    <file>objprop.h</file>
    <file>objreader.h</file>
    <file>objrelax.h</file>
    <file>objscip.h</file>
    <file>objscipdefplugins.h</file>
    <file>objsepa.h</file>
    <file>objvardata.h</file>
    <file>type_objcloneable.h</file>
    <file>type_objprobcloneable.h</file>
  </compound>
  <compound kind="dir">
    <name>scip</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/scip/</path>
    <filename>dir_a648423bbafce250e192468c22b8e829.shtml</filename>
    <file>branch_allfullstrong.h</file>
    <file>branch_cloud.h</file>
    <file>branch_distribution.h</file>
    <file>branch_fullstrong.h</file>
    <file>branch_inference.h</file>
    <file>branch_leastinf.h</file>
    <file>branch_mostinf.h</file>
    <file>branch_multaggr.h</file>
    <file>branch_nodereopt.h</file>
    <file>branch_pscost.h</file>
    <file>branch_random.h</file>
    <file>branch_relpscost.h</file>
    <file>compr_largestrepr.h</file>
    <file>compr_weakcompr.h</file>
    <file>cons_abspower.h</file>
    <file>cons_and.h</file>
    <file>cons_bivariate.h</file>
    <file>cons_bounddisjunction.h</file>
    <file>cons_conjunction.h</file>
    <file>cons_countsols.h</file>
    <file>cons_cumulative.h</file>
    <file>cons_disjunction.h</file>
    <file>cons_indicator.h</file>
    <file>cons_integral.h</file>
    <file>cons_knapsack.h</file>
    <file>cons_linear.h</file>
    <file>cons_linking.h</file>
    <file>cons_logicor.h</file>
    <file>cons_nonlinear.h</file>
    <file>cons_or.h</file>
    <file>cons_orbitope.h</file>
    <file>cons_pseudoboolean.h</file>
    <file>cons_quadratic.h</file>
    <file>cons_setppc.h</file>
    <file>cons_soc.h</file>
    <file>cons_sos1.h</file>
    <file>cons_sos2.h</file>
    <file>cons_superindicator.h</file>
    <file>cons_varbound.h</file>
    <file>cons_xor.h</file>
    <file>def.h</file>
    <file>dialog_default.h</file>
    <file>disp_default.h</file>
    <file>event_softtimelimit.h</file>
    <file>heur_actconsdiving.h</file>
    <file>heur_bound.h</file>
    <file>heur_clique.h</file>
    <file>heur_coefdiving.h</file>
    <file>heur_crossover.h</file>
    <file>heur_dins.h</file>
    <file>heur_distributiondiving.h</file>
    <file>heur_dualval.h</file>
    <file>heur_feaspump.h</file>
    <file>heur_fixandinfer.h</file>
    <file>heur_fracdiving.h</file>
    <file>heur_guideddiving.h</file>
    <file>heur_indicator.h</file>
    <file>heur_intdiving.h</file>
    <file>heur_intshifting.h</file>
    <file>heur_linesearchdiving.h</file>
    <file>heur_localbranching.h</file>
    <file>heur_mutation.h</file>
    <file>heur_nlpdiving.h</file>
    <file>heur_objpscostdiving.h</file>
    <file>heur_octane.h</file>
    <file>heur_ofins.h</file>
    <file>heur_oneopt.h</file>
    <file>heur_proximity.h</file>
    <file>heur_pscostdiving.h</file>
    <file>heur_randrounding.h</file>
    <file>heur_rens.h</file>
    <file>heur_reoptsols.h</file>
    <file>heur_rins.h</file>
    <file>heur_rootsoldiving.h</file>
    <file>heur_rounding.h</file>
    <file>heur_shiftandpropagate.h</file>
    <file>heur_shifting.h</file>
    <file>heur_simplerounding.h</file>
    <file>heur_subnlp.h</file>
    <file>heur_trivial.h</file>
    <file>heur_trivialnegation.h</file>
    <file>heur_trysol.h</file>
    <file>heur_twoopt.h</file>
    <file>heur_undercover.h</file>
    <file>heur_vbounds.h</file>
    <file>heur_veclendiving.h</file>
    <file>heur_zeroobj.h</file>
    <file>heur_zirounding.h</file>
    <file>message_default.h</file>
    <file>nodesel_bfs.h</file>
    <file>nodesel_breadthfirst.h</file>
    <file>nodesel_dfs.h</file>
    <file>nodesel_estimate.h</file>
    <file>nodesel_hybridestim.h</file>
    <file>nodesel_restartdfs.h</file>
    <file>nodesel_uct.h</file>
    <file>presol_boundshift.h</file>
    <file>presol_components.h</file>
    <file>presol_convertinttobin.h</file>
    <file>presol_domcol.h</file>
    <file>presol_dualagg.h</file>
    <file>presol_dualinfer.h</file>
    <file>presol_gateextraction.h</file>
    <file>presol_implfree.h</file>
    <file>presol_implics.h</file>
    <file>presol_inttobinary.h</file>
    <file>presol_redvub.h</file>
    <file>presol_stuffing.h</file>
    <file>presol_trivial.h</file>
    <file>presol_tworowbnd.h</file>
    <file>prop_dualfix.h</file>
    <file>prop_genvbounds.h</file>
    <file>prop_obbt.h</file>
    <file>prop_probing.h</file>
    <file>prop_pseudoobj.h</file>
    <file>prop_redcost.h</file>
    <file>prop_rootredcost.h</file>
    <file>prop_vbounds.h</file>
    <file>pub_branch.h</file>
    <file>pub_compr.h</file>
    <file>pub_conflict.h</file>
    <file>pub_cons.h</file>
    <file>pub_cutpool.h</file>
    <file>pub_dialog.h</file>
    <file>pub_disp.h</file>
    <file>pub_dive.h</file>
    <file>pub_event.h</file>
    <file>pub_fileio.h</file>
    <file>pub_heur.h</file>
    <file>pub_history.h</file>
    <file>pub_implics.h</file>
    <file>pub_lp.h</file>
    <file>pub_matrix.h</file>
    <file>pub_message.h</file>
    <file>pub_misc.h</file>
    <file>pub_nlp.h</file>
    <file>pub_nodesel.h</file>
    <file>pub_paramset.h</file>
    <file>pub_presol.h</file>
    <file>pub_pricer.h</file>
    <file>pub_prop.h</file>
    <file>pub_reader.h</file>
    <file>pub_relax.h</file>
    <file>pub_reopt.h</file>
    <file>pub_sepa.h</file>
    <file>pub_sol.h</file>
    <file>pub_tree.h</file>
    <file>pub_var.h</file>
    <file>reader_bnd.h</file>
    <file>reader_ccg.h</file>
    <file>reader_cip.h</file>
    <file>reader_cnf.h</file>
    <file>reader_diff.h</file>
    <file>reader_fix.h</file>
    <file>reader_fzn.h</file>
    <file>reader_gms.h</file>
    <file>reader_lp.h</file>
    <file>reader_mps.h</file>
    <file>reader_opb.h</file>
    <file>reader_osil.h</file>
    <file>reader_pbm.h</file>
    <file>reader_pip.h</file>
    <file>reader_ppm.h</file>
    <file>reader_rlp.h</file>
    <file>reader_sol.h</file>
    <file>reader_wbo.h</file>
    <file>reader_zpl.h</file>
    <file>scip.h</file>
    <file>scipdefplugins.h</file>
    <file>scipgithash.h</file>
    <file>scipshell.h</file>
    <file>sepa_cgmip.h</file>
    <file>sepa_clique.h</file>
    <file>sepa_closecuts.h</file>
    <file>sepa_cmir.h</file>
    <file>sepa_disjunctive.h</file>
    <file>sepa_eccuts.h</file>
    <file>sepa_flowcover.h</file>
    <file>sepa_gomory.h</file>
    <file>sepa_impliedbounds.h</file>
    <file>sepa_intobj.h</file>
    <file>sepa_mcf.h</file>
    <file>sepa_oddcycle.h</file>
    <file>sepa_rapidlearning.h</file>
    <file>sepa_strongcg.h</file>
    <file>sepa_zerohalf.h</file>
    <file>type_branch.h</file>
    <file>type_clock.h</file>
    <file>type_compr.h</file>
    <file>type_conflict.h</file>
    <file>type_cons.h</file>
    <file>type_cutpool.h</file>
    <file>type_dialog.h</file>
    <file>type_disp.h</file>
    <file>type_event.h</file>
    <file>type_heur.h</file>
    <file>type_history.h</file>
    <file>type_implics.h</file>
    <file>type_interrupt.h</file>
    <file>type_lp.h</file>
    <file>type_matrix.h</file>
    <file>type_mem.h</file>
    <file>type_message.h</file>
    <file>type_misc.h</file>
    <file>type_nlp.h</file>
    <file>type_nodesel.h</file>
    <file>type_paramset.h</file>
    <file>type_presol.h</file>
    <file>type_pricer.h</file>
    <file>type_pricestore.h</file>
    <file>type_primal.h</file>
    <file>type_prob.h</file>
    <file>type_prop.h</file>
    <file>type_reader.h</file>
    <file>type_relax.h</file>
    <file>type_reopt.h</file>
    <file>type_result.h</file>
    <file>type_retcode.h</file>
    <file>type_scip.h</file>
    <file>type_sepa.h</file>
    <file>type_sepastore.h</file>
    <file>type_set.h</file>
    <file>type_sol.h</file>
    <file>type_stat.h</file>
    <file>type_timing.h</file>
    <file>type_tree.h</file>
    <file>type_var.h</file>
    <file>type_visual.h</file>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.shtml</filename>
    <dir>lpi</dir>
    <dir>nlpi</dir>
    <dir>objscip</dir>
    <dir>scip</dir>
    <dir>tclique</dir>
  </compound>
  <compound kind="dir">
    <name>tclique</name>
    <path>/local/tmp/bzfmilte/release-3.2/scip/src/tclique/</path>
    <filename>dir_b493a5b5bb3a79e32dba00c4bef6bb71.shtml</filename>
    <file>tclique_coloring.h</file>
    <file>tclique_def.h</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Overview (User&apos;s Manual)</title>
    <filename>index</filename>
    <docanchor file="index" title="What is SCIP?">WHATISSCIP</docanchor>
    <docanchor file="index" title="Getting started">GETTINGSTARTED</docanchor>
    <docanchor file="index" title="References">FURTHERINFORMATION</docanchor>
    <docanchor file="index" title="Programming with SCIP">PROGRAMMING</docanchor>
    <docanchor file="index" title="Coding basics for SCIP">CODINGBASICS</docanchor>
    <docanchor file="index" title="How to add ...">HOWTOADD</docanchor>
    <docanchor file="index" title="Further information">FURTHERINFO</docanchor>
    <docanchor file="index" title="Changes between different versions of SCIP">CHG</docanchor>
    <docanchor file="index" title="SCIP Authors">AUTHORS</docanchor>
  </compound>
</tagfile>
